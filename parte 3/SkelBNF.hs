module SkelBNF where

-- Haskell module generated by the BNF converter

import AbsBNF
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transTreeLexD :: TreeLexD -> Result
transTreeLexD x = case x of
  TreeD double integer treelexds -> failure x
  LeafD double integer -> failure x
transTreeLexI :: TreeLexI -> Result
transTreeLexI x = case x of
  TreeI integer1 integer2 treelexis -> failure x
  LeafI integer1 integer2 -> failure x

