-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParAuL.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListPGlobl -> ListPGlobl                   (1)
	%start_pPGlobl -> PGlobl                           (2)
	%start_pBlock -> Block                             (3)
	%start_pListStm -> ListStm                         (4)
	%start_pBasicType -> BasicType                     (5)
	%start_pBoolean -> Boolean                         (6)
	%start_pPtrVoid -> PtrVoid                         (7)
	%start_pCompoundType -> CompoundType               (8)
	%start_pBracks -> Bracks                           (9)
	%start_pListBracks -> ListBracks                   (10)
	%start_pStm -> Stm                                 (11)
	%start_pEBlk -> EBlk                               (12)
	%start_pDecl -> Decl                               (13)
	%start_pVarInit -> VarInit                         (14)
	%start_pArray -> Array                             (15)
	%start_pVType -> VType                             (16)
	%start_pListVType -> ListVType                     (17)
	%start_pListArray -> ListArray                     (18)
	%start_pLocal -> Local                             (19)
	%start_pAss -> Ass                                 (20)
	%start_pFunc -> Func                               (21)
	%start_pFuncWrite -> FuncWrite                     (22)
	%start_pFuncRead -> FuncRead                       (23)
	%start_pWhile -> While                             (24)
	%start_pRepeat -> Repeat                           (25)
	%start_pFor -> For                                 (26)
	%start_pIncrement -> Increment                     (27)
	%start_pIf -> If                                   (28)
	%start_pElse -> Else                               (29)
	%start_pElseIf -> ElseIf                           (30)
	%start_pListElseIf -> ListElseIf                   (31)
	%start_pReturn -> Return                           (32)
	%start_pRValue -> RValue                           (33)
	%start_pBreak -> Break                             (34)
	%start_pListRExp -> ListRExp                       (35)
	%start_pFuncD -> FuncD                             (36)
	%start_pParamF -> ParamF                           (37)
	%start_pListParamF -> ListParamF                   (38)
	%start_pModality -> Modality                       (39)
	%start_pLExp -> LExp                               (40)
	%start_pListDim -> ListDim                         (41)
	%start_pDim -> Dim                                 (42)
	%start_pRExp -> RExp                               (43)
	%start_pRExp2 -> RExp2                             (44)
	%start_pRExp3 -> RExp3                             (45)
	%start_pRExp6 -> RExp6                             (46)
	%start_pRExp7 -> RExp7                             (47)
	%start_pRExp8 -> RExp8                             (48)
	%start_pRExp9 -> RExp9                             (49)
	%start_pRExp10 -> RExp10                           (50)
	%start_pRExp11 -> RExp11                           (51)
	%start_pRExp1 -> RExp1                             (52)
	%start_pRExp4 -> RExp4                             (53)
	%start_pRExp5 -> RExp5                             (54)
	%start_pRExp12 -> RExp12                           (55)
	Char -> L_charac                                   (56)
	Double -> L_doubl                                  (57)
	Integer -> L_integ                                 (58)
	String -> L_quoted                                 (59)
	LIdent -> L_LIdent                                 (60)
	Program -> ListPGlobl                              (61)
	ListPGlobl -> PGlobl                               (62)
	ListPGlobl -> PGlobl ListPGlobl                    (63)
	PGlobl -> Stm                                      (64)
	PGlobl -> FuncD                                    (65)
	Block -> ListStm                                   (66)
	ListStm ->                                         (67)
	ListStm -> ListStm Stm                             (68)
	BasicType -> 'Bool'                                (69)
	BasicType -> 'Char'                                (70)
	BasicType -> 'Float'                               (71)
	BasicType -> 'Int'                                 (72)
	BasicType -> 'String'                              (73)
	BasicType -> 'Void'                                (74)
	Boolean -> 'true'                                  (75)
	Boolean -> 'false'                                 (76)
	PtrVoid -> 'nil'                                   (77)
	CompoundType -> BasicType                          (78)
	CompoundType -> '*' CompoundType                   (79)
	CompoundType -> BasicType ListBracks               (80)
	Bracks -> '[' ']'                                  (81)
	ListBracks -> Bracks                               (82)
	ListBracks -> Bracks ListBracks                    (83)
	Stm -> Decl ';'                                    (84)
	Stm -> Local ';'                                   (85)
	Stm -> Ass ';'                                     (86)
	Stm -> While                                       (87)
	Stm -> Repeat ';'                                  (88)
	Stm -> For                                         (89)
	Stm -> If                                          (90)
	Stm -> Func ';'                                    (91)
	Stm -> EBlk                                        (92)
	Stm -> Return ';'                                  (93)
	Stm -> Break ';'                                   (94)
	EBlk -> 'do' Block 'end'                           (95)
	Decl -> BasicType LExp VarInit                     (96)
	VarInit ->                                         (97)
	VarInit -> '=' RExp                                (98)
	VarInit -> '=' Array                               (99)
	Array -> '{' ListArray '}'                         (100)
	Array -> '{' ListVType '}'                         (101)
	VType -> Boolean                                   (102)
	VType -> Char                                      (103)
	VType -> Double                                    (104)
	VType -> Integer                                   (105)
	VType -> String                                    (106)
	VType -> PtrVoid                                   (107)
	ListVType -> VType                                 (108)
	ListVType -> VType ',' ListVType                   (109)
	ListArray -> Array                                 (110)
	ListArray -> Array ',' ListArray                   (111)
	Local -> 'local' Decl                              (112)
	Ass -> LExp '=' RExp                               (113)
	Func -> FuncWrite                                  (114)
	Func -> FuncRead                                   (115)
	Func -> LIdent '(' ListRExp ')'                    (116)
	FuncWrite -> 'writeInt' '(' RExp ')'               (117)
	FuncWrite -> 'writeFloat' '(' RExp ')'             (118)
	FuncWrite -> 'writeChar' '(' RExp ')'              (119)
	FuncWrite -> 'writeString' '(' RExp ')'            (120)
	FuncRead -> 'readInt' '(' ')'                      (121)
	FuncRead -> 'readFloat' '(' ')'                    (122)
	FuncRead -> 'readChar' '(' ')'                     (123)
	FuncRead -> 'readString' '(' ')'                   (124)
	While -> 'while' RExp EBlk                         (125)
	Repeat -> 'repeat' Block 'until' RExp              (126)
	For -> 'for' LIdent '=' RExp ',' RExp Increment EBlk   (127)
	For -> 'for' LIdent 'in' LIdent EBlk               (128)
	Increment ->                                       (129)
	Increment -> ',' RExp                              (130)
	If -> 'if' RExp 'then' Block ListElseIf Else 'end'   (131)
	Else -> 'else' Block                               (132)
	Else ->                                            (133)
	ElseIf -> 'elseif' RExp 'then' Block               (134)
	ListElseIf ->                                      (135)
	ListElseIf -> ListElseIf ElseIf                    (136)
	Return -> 'return' RValue                          (137)
	RValue ->                                          (138)
	RValue -> RExp                                     (139)
	Break -> 'break'                                   (140)
	ListRExp ->                                        (141)
	ListRExp -> RExp                                   (142)
	ListRExp -> RExp ',' ListRExp                      (143)
	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block 'end'   (144)
	ParamF -> Modality BasicType LExp                  (145)
	ListParamF ->                                      (146)
	ListParamF -> ParamF                               (147)
	ListParamF -> ParamF ',' ListParamF                (148)
	Modality ->                                        (149)
	Modality -> 'val'                                  (150)
	Modality -> 'ref'                                  (151)
	Modality -> 'const'                                (152)
	Modality -> 'res'                                  (153)
	Modality -> 'valres'                               (154)
	Modality -> 'name'                                 (155)
	LExp -> LIdent                                     (156)
	LExp -> '*' LExp                                   (157)
	LExp -> LIdent ListDim                             (158)
	ListDim -> Dim                                     (159)
	ListDim -> Dim ListDim                             (160)
	Dim -> '[' RExp ']'                                (161)
	RExp -> RExp 'or' RExp1                            (162)
	RExp -> RExp1 'and' RExp2                          (163)
	RExp -> RExp1                                      (164)
	RExp2 -> 'not' RExp3                               (165)
	RExp2 -> RExp3                                     (166)
	RExp3 -> RExp3 '==' RExp5                          (167)
	RExp3 -> RExp3 '~=' RExp5                          (168)
	RExp3 -> RExp3 '<' RExp5                           (169)
	RExp3 -> RExp3 '<=' RExp5                          (170)
	RExp3 -> RExp3 '>' RExp5                           (171)
	RExp3 -> RExp3 '>=' RExp5                          (172)
	RExp3 -> RExp4                                     (173)
	RExp6 -> RExp6 '+' RExp7                           (174)
	RExp6 -> RExp6 '-' RExp7                           (175)
	RExp6 -> RExp7                                     (176)
	RExp7 -> RExp7 '*' RExp8                           (177)
	RExp7 -> RExp7 '/' RExp8                           (178)
	RExp7 -> RExp7 '%' RExp8                           (179)
	RExp7 -> RExp8                                     (180)
	RExp8 -> RExp9 '^' RExp8                           (181)
	RExp8 -> RExp9                                     (182)
	RExp9 -> '-' RExp10                                (183)
	RExp9 -> RExp10                                    (184)
	RExp10 -> Func                                     (185)
	RExp10 -> RExp10 '..' RExp11                       (186)
	RExp10 -> '#' RExp11                               (187)
	RExp10 -> RExp11                                   (188)
	RExp11 -> Integer                                  (189)
	RExp11 -> LExp                                     (190)
	RExp11 -> '&' LExp                                 (191)
	RExp11 -> Double                                   (192)
	RExp11 -> String                                   (193)
	RExp11 -> Char                                     (194)
	RExp11 -> Boolean                                  (195)
	RExp11 -> PtrVoid                                  (196)
	RExp11 -> RExp12                                   (197)
	RExp1 -> RExp2                                     (198)
	RExp4 -> RExp5                                     (199)
	RExp5 -> RExp6                                     (200)
	RExp12 -> '(' RExp ')'                             (201)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'#'            { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'&'            { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'..'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'Bool'         { PT _ (TS _ 19) }
	'Char'         { PT _ (TS _ 20) }
	'Float'        { PT _ (TS _ 21) }
	'Int'          { PT _ (TS _ 22) }
	'String'       { PT _ (TS _ 23) }
	'Void'         { PT _ (TS _ 24) }
	'['            { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'^'            { PT _ (TS _ 27) }
	'and'          { PT _ (TS _ 28) }
	'break'        { PT _ (TS _ 29) }
	'const'        { PT _ (TS _ 30) }
	'do'           { PT _ (TS _ 31) }
	'else'         { PT _ (TS _ 32) }
	'elseif'       { PT _ (TS _ 33) }
	'end'          { PT _ (TS _ 34) }
	'false'        { PT _ (TS _ 35) }
	'for'          { PT _ (TS _ 36) }
	'function'     { PT _ (TS _ 37) }
	'if'           { PT _ (TS _ 38) }
	'in'           { PT _ (TS _ 39) }
	'local'        { PT _ (TS _ 40) }
	'name'         { PT _ (TS _ 41) }
	'nil'          { PT _ (TS _ 42) }
	'not'          { PT _ (TS _ 43) }
	'or'           { PT _ (TS _ 44) }
	'readChar'     { PT _ (TS _ 45) }
	'readFloat'    { PT _ (TS _ 46) }
	'readInt'      { PT _ (TS _ 47) }
	'readString'   { PT _ (TS _ 48) }
	'ref'          { PT _ (TS _ 49) }
	'repeat'       { PT _ (TS _ 50) }
	'res'          { PT _ (TS _ 51) }
	'return'       { PT _ (TS _ 52) }
	'then'         { PT _ (TS _ 53) }
	'true'         { PT _ (TS _ 54) }
	'until'        { PT _ (TS _ 55) }
	'val'          { PT _ (TS _ 56) }
	'valres'       { PT _ (TS _ 57) }
	'while'        { PT _ (TS _ 58) }
	'writeChar'    { PT _ (TS _ 59) }
	'writeFloat'   { PT _ (TS _ 60) }
	'writeInt'     { PT _ (TS _ 61) }
	'writeString'  { PT _ (TS _ 62) }
	'{'            { PT _ (TS _ 63) }
	'}'            { PT _ (TS _ 64) }
	'~='           { PT _ (TS _ 65) }
	L_charac       { PT _ (TC $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_LIdent       { PT _ (T_LIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListPGlobl rule  1
	%start_pPGlobl  rule  2
	%start_pBlock   rule  3
	%start_pListStm rule  4
	%start_pBasicType rule  5
	%start_pBoolean rule  6
	%start_pPtrVoid rule  7
	%start_pCompoundType rule  8
	%start_pBracks  rule  9
	%start_pListBracks rule  10
	%start_pStm     rule  11
	%start_pEBlk    rule  12
	%start_pDecl    rule  13
	%start_pVarInit rule  14
	%start_pArray   rule  15
	%start_pVType   rule  16
	%start_pListVType rule  17
	%start_pListArray rule  18
	%start_pLocal   rule  19
	%start_pAss     rule  20
	%start_pFunc    rule  21
	%start_pFuncWrite rule  22
	%start_pFuncRead rule  23
	%start_pWhile   rule  24
	%start_pRepeat  rule  25
	%start_pFor     rule  26
	%start_pIncrement rule  27
	%start_pIf      rule  28
	%start_pElse    rule  29
	%start_pElseIf  rule  30
	%start_pListElseIf rule  31
	%start_pReturn  rule  32
	%start_pRValue  rule  33
	%start_pBreak   rule  34
	%start_pListRExp rule  35
	%start_pFuncD   rule  36
	%start_pParamF  rule  37
	%start_pListParamF rule  38
	%start_pModality rule  39
	%start_pLExp    rule  40
	%start_pListDim rule  41
	%start_pDim     rule  42
	%start_pRExp    rule  43
	%start_pRExp2   rule  44
	%start_pRExp3   rule  45
	%start_pRExp6   rule  46
	%start_pRExp7   rule  47
	%start_pRExp8   rule  48
	%start_pRExp9   rule  49
	%start_pRExp10  rule  50
	%start_pRExp11  rule  51
	%start_pRExp1   rule  52
	%start_pRExp4   rule  53
	%start_pRExp5   rule  54
	%start_pRExp12  rule  55
	Char            rule  56
	Double          rule  57
	Integer         rule  58
	String          rule  59
	LIdent          rule  60
	Program         rule  61
	ListPGlobl      rules 62, 63
	PGlobl          rules 64, 65
	Block           rule  66
	ListStm         rules 67, 68
	BasicType       rules 69, 70, 71, 72, 73, 74
	Boolean         rules 75, 76
	PtrVoid         rule  77
	CompoundType    rules 78, 79, 80
	Bracks          rule  81
	ListBracks      rules 82, 83
	Stm             rules 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94
	EBlk            rule  95
	Decl            rule  96
	VarInit         rules 97, 98, 99
	Array           rules 100, 101
	VType           rules 102, 103, 104, 105, 106, 107
	ListVType       rules 108, 109
	ListArray       rules 110, 111
	Local           rule  112
	Ass             rule  113
	Func            rules 114, 115, 116
	FuncWrite       rules 117, 118, 119, 120
	FuncRead        rules 121, 122, 123, 124
	While           rule  125
	Repeat          rule  126
	For             rules 127, 128
	Increment       rules 129, 130
	If              rule  131
	Else            rules 132, 133
	ElseIf          rule  134
	ListElseIf      rules 135, 136
	Return          rule  137
	RValue          rules 138, 139
	Break           rule  140
	ListRExp        rules 141, 142, 143
	FuncD           rule  144
	ParamF          rule  145
	ListParamF      rules 146, 147, 148
	Modality        rules 149, 150, 151, 152, 153, 154, 155
	LExp            rules 156, 157, 158
	ListDim         rules 159, 160
	Dim             rule  161
	RExp            rules 162, 163, 164
	RExp2           rules 165, 166
	RExp3           rules 167, 168, 169, 170, 171, 172, 173
	RExp6           rules 174, 175, 176
	RExp7           rules 177, 178, 179, 180
	RExp8           rules 181, 182
	RExp9           rules 183, 184
	RExp10          rules 185, 186, 187, 188
	RExp11          rules 189, 190, 191, 192, 193, 194, 195, 196, 197
	RExp1           rule  198
	RExp4           rule  199
	RExp5           rule  200
	RExp12          rule  201

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'*'            shift, and enter state 219
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97

	LIdent         goto state 64
	Program        goto state 222
	ListPGlobl     goto state 223
	PGlobl         goto state 221
	BasicType      goto state 216
	CompoundType   goto state 133
	Stm            goto state 217
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	FuncD          goto state 218
	LExp           goto state 170

State 1


	'*'            shift, and enter state 219
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97

	LIdent         goto state 64
	ListPGlobl     goto state 220
	PGlobl         goto state 221
	BasicType      goto state 216
	CompoundType   goto state 133
	Stm            goto state 217
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	FuncD          goto state 218
	LExp           goto state 170

State 2


	'*'            shift, and enter state 219
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97

	LIdent         goto state 64
	PGlobl         goto state 215
	BasicType      goto state 216
	CompoundType   goto state 133
	Stm            goto state 217
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	FuncD          goto state 218
	LExp           goto state 170

State 3


	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67
	%eof           reduce using rule 67

	Block          goto state 213
	ListStm        goto state 214

State 4


	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67
	%eof           reduce using rule 67

	ListStm        goto state 212

State 5


	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 211

State 6


	'false'        shift, and enter state 83
	'true'         shift, and enter state 89

	Boolean        goto state 210

State 7


	'nil'          shift, and enter state 84

	PtrVoid        goto state 209

State 8


	'*'            shift, and enter state 135
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 132
	CompoundType   goto state 208

State 9


	'['            shift, and enter state 206

	Bracks         goto state 207

State 10


	'['            shift, and enter state 206

	Bracks         goto state 204
	ListBracks     goto state 205

State 11


	'*'            shift, and enter state 81
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97

	LIdent         goto state 64
	BasicType      goto state 188
	Stm            goto state 192
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	LExp           goto state 170

State 12


	'do'           shift, and enter state 191

	EBlk           goto state 190

State 13


	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 188
	Decl           goto state 189

State 14


	'='            shift, and enter state 187
	%eof           reduce using rule 97

	VarInit        goto state 186

State 15


	'{'            shift, and enter state 175

	Array          goto state 185

State 16


	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96

	Char           goto state 176
	Double         goto state 177
	Integer        goto state 178
	String         goto state 179
	Boolean        goto state 180
	PtrVoid        goto state 181
	VType          goto state 184

State 17


	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96

	Char           goto state 176
	Double         goto state 177
	Integer        goto state 178
	String         goto state 179
	Boolean        goto state 180
	PtrVoid        goto state 181
	VType          goto state 182
	ListVType      goto state 183

State 18


	'{'            shift, and enter state 175

	Array          goto state 173
	ListArray      goto state 174

State 19


	'local'        shift, and enter state 172

	Local          goto state 171

State 20


	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	Ass            goto state 169
	LExp           goto state 170

State 21


	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97

	LIdent         goto state 167
	Func           goto state 168
	FuncWrite      goto state 68
	FuncRead       goto state 69

State 22


	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93

	FuncWrite      goto state 166

State 23


	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88

	FuncRead       goto state 165

State 24


	'while'        shift, and enter state 164

	While          goto state 163

State 25


	'repeat'       shift, and enter state 162

	Repeat         goto state 161

State 26


	'for'          shift, and enter state 160

	For            goto state 159

State 27


	','            shift, and enter state 158
	%eof           reduce using rule 129

	Increment      goto state 157

State 28


	'if'           shift, and enter state 156

	If             goto state 155

State 29


	'else'         shift, and enter state 154
	%eof           reduce using rule 133

	Else           goto state 153

State 30


	'elseif'       shift, and enter state 152

	ElseIf         goto state 151

State 31


	'elseif'       reduce using rule 135
	%eof           reduce using rule 135

	ListElseIf     goto state 150

State 32


	'return'       shift, and enter state 149

	Return         goto state 148

State 33


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 138

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	RValue         goto state 146
	LExp           goto state 70
	RExp           goto state 147
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 34


	'break'        shift, and enter state 145

	Break          goto state 144

State 35


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 141

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	ListRExp       goto state 142
	LExp           goto state 70
	RExp           goto state 143
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 36


	'*'            shift, and enter state 135
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 132
	CompoundType   goto state 133
	FuncD          goto state 134

State 37


	'Bool'         reduce using rule 149
	'Char'         reduce using rule 149
	'Float'        reduce using rule 149
	'Int'          reduce using rule 149
	'String'       reduce using rule 149
	'Void'         reduce using rule 149
	'const'        shift, and enter state 122
	'name'         shift, and enter state 123
	'ref'          shift, and enter state 124
	'res'          shift, and enter state 125
	'val'          shift, and enter state 126
	'valres'       shift, and enter state 127

	ParamF         goto state 131
	Modality       goto state 130

State 38


	'Bool'         reduce using rule 149
	'Char'         reduce using rule 149
	'Float'        reduce using rule 149
	'Int'          reduce using rule 149
	'String'       reduce using rule 149
	'Void'         reduce using rule 149
	'const'        shift, and enter state 122
	'name'         shift, and enter state 123
	'ref'          shift, and enter state 124
	'res'          shift, and enter state 125
	'val'          shift, and enter state 126
	'valres'       shift, and enter state 127
	%eof           reduce using rule 146

	ParamF         goto state 128
	ListParamF     goto state 129
	Modality       goto state 130

State 39


	'const'        shift, and enter state 122
	'name'         shift, and enter state 123
	'ref'          shift, and enter state 124
	'res'          shift, and enter state 125
	'val'          shift, and enter state 126
	'valres'       shift, and enter state 127
	%eof           reduce using rule 149

	Modality       goto state 121

State 40


	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	LExp           goto state 120

State 41


	'['            shift, and enter state 117

	ListDim        goto state 118
	Dim            goto state 119

State 42


	'['            shift, and enter state 117

	Dim            goto state 116

State 43


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 114
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 44


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp2          goto state 113
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 45


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp3          goto state 112
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 46


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 111
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 47


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp7          goto state 110
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 48


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp8          goto state 109
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 49


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp9          goto state 108
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 50


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp10         goto state 107
	RExp11         goto state 76
	RExp12         goto state 78

State 51


	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 105
	Boolean        goto state 65
	PtrVoid        goto state 66
	LExp           goto state 70
	RExp11         goto state 106
	RExp12         goto state 78

State 52


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 102
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 53


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp4          goto state 98
	RExp5          goto state 99
	RExp12         goto state 78

State 54


	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 77
	RExp12         goto state 78

State 55


	'('            shift, and enter state 59

	RExp12         goto state 58

State 56


	L_charac       shift, and enter state 57


State 57

	Char -> L_charac .                                  (rule 56)

	'%'            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'..'           reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'and'          reduce using rule 56
	'do'           reduce using rule 56
	'or'           reduce using rule 56
	'then'         reduce using rule 56
	'}'            reduce using rule 56
	'~='           reduce using rule 56
	%eof           reduce using rule 56


State 58

	%start_pRExp12 -> RExp12 .                          (rule 55)

	%eof           accept


State 59

	RExp12 -> '(' . RExp ')'                            (rule 201)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 292
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 60

	RExp11 -> Char .                                    (rule 194)

	'%'            reduce using rule 194
	')'            reduce using rule 194
	'*'            reduce using rule 194
	'+'            reduce using rule 194
	','            reduce using rule 194
	'-'            reduce using rule 194
	'..'           reduce using rule 194
	'/'            reduce using rule 194
	';'            reduce using rule 194
	'<'            reduce using rule 194
	'<='           reduce using rule 194
	'=='           reduce using rule 194
	'>'            reduce using rule 194
	'>='           reduce using rule 194
	']'            reduce using rule 194
	'^'            reduce using rule 194
	'and'          reduce using rule 194
	'do'           reduce using rule 194
	'or'           reduce using rule 194
	'then'         reduce using rule 194
	'~='           reduce using rule 194
	%eof           reduce using rule 194


State 61

	RExp11 -> Double .                                  (rule 192)

	'%'            reduce using rule 192
	')'            reduce using rule 192
	'*'            reduce using rule 192
	'+'            reduce using rule 192
	','            reduce using rule 192
	'-'            reduce using rule 192
	'..'           reduce using rule 192
	'/'            reduce using rule 192
	';'            reduce using rule 192
	'<'            reduce using rule 192
	'<='           reduce using rule 192
	'=='           reduce using rule 192
	'>'            reduce using rule 192
	'>='           reduce using rule 192
	']'            reduce using rule 192
	'^'            reduce using rule 192
	'and'          reduce using rule 192
	'do'           reduce using rule 192
	'or'           reduce using rule 192
	'then'         reduce using rule 192
	'~='           reduce using rule 192
	%eof           reduce using rule 192


State 62

	RExp11 -> Integer .                                 (rule 189)

	'%'            reduce using rule 189
	')'            reduce using rule 189
	'*'            reduce using rule 189
	'+'            reduce using rule 189
	','            reduce using rule 189
	'-'            reduce using rule 189
	'..'           reduce using rule 189
	'/'            reduce using rule 189
	';'            reduce using rule 189
	'<'            reduce using rule 189
	'<='           reduce using rule 189
	'=='           reduce using rule 189
	'>'            reduce using rule 189
	'>='           reduce using rule 189
	']'            reduce using rule 189
	'^'            reduce using rule 189
	'and'          reduce using rule 189
	'do'           reduce using rule 189
	'or'           reduce using rule 189
	'then'         reduce using rule 189
	'~='           reduce using rule 189
	%eof           reduce using rule 189


State 63

	RExp11 -> String .                                  (rule 193)

	'%'            reduce using rule 193
	')'            reduce using rule 193
	'*'            reduce using rule 193
	'+'            reduce using rule 193
	','            reduce using rule 193
	'-'            reduce using rule 193
	'..'           reduce using rule 193
	'/'            reduce using rule 193
	';'            reduce using rule 193
	'<'            reduce using rule 193
	'<='           reduce using rule 193
	'=='           reduce using rule 193
	'>'            reduce using rule 193
	'>='           reduce using rule 193
	']'            reduce using rule 193
	'^'            reduce using rule 193
	'and'          reduce using rule 193
	'do'           reduce using rule 193
	'or'           reduce using rule 193
	'then'         reduce using rule 193
	'~='           reduce using rule 193
	%eof           reduce using rule 193


State 64

	Func -> LIdent . '(' ListRExp ')'                   (rule 116)
	LExp -> LIdent .                                    (rule 156)
	LExp -> LIdent . ListDim                            (rule 158)

	'%'            reduce using rule 156
	'('            shift, and enter state 248
	')'            reduce using rule 156
	'*'            reduce using rule 156
	'+'            reduce using rule 156
	','            reduce using rule 156
	'-'            reduce using rule 156
	'..'           reduce using rule 156
	'/'            reduce using rule 156
	';'            reduce using rule 156
	'<'            reduce using rule 156
	'<='           reduce using rule 156
	'='            reduce using rule 156
	'=='           reduce using rule 156
	'>'            reduce using rule 156
	'>='           reduce using rule 156
	'['            shift, and enter state 117
	']'            reduce using rule 156
	'^'            reduce using rule 156
	'and'          reduce using rule 156
	'do'           reduce using rule 156
	'or'           reduce using rule 156
	'then'         reduce using rule 156
	'~='           reduce using rule 156
	%eof           reduce using rule 156

	ListDim        goto state 278
	Dim            goto state 119

State 65

	RExp11 -> Boolean .                                 (rule 195)

	'%'            reduce using rule 195
	')'            reduce using rule 195
	'*'            reduce using rule 195
	'+'            reduce using rule 195
	','            reduce using rule 195
	'-'            reduce using rule 195
	'..'           reduce using rule 195
	'/'            reduce using rule 195
	';'            reduce using rule 195
	'<'            reduce using rule 195
	'<='           reduce using rule 195
	'=='           reduce using rule 195
	'>'            reduce using rule 195
	'>='           reduce using rule 195
	']'            reduce using rule 195
	'^'            reduce using rule 195
	'and'          reduce using rule 195
	'do'           reduce using rule 195
	'or'           reduce using rule 195
	'then'         reduce using rule 195
	'~='           reduce using rule 195
	%eof           reduce using rule 195


State 66

	RExp11 -> PtrVoid .                                 (rule 196)

	'%'            reduce using rule 196
	')'            reduce using rule 196
	'*'            reduce using rule 196
	'+'            reduce using rule 196
	','            reduce using rule 196
	'-'            reduce using rule 196
	'..'           reduce using rule 196
	'/'            reduce using rule 196
	';'            reduce using rule 196
	'<'            reduce using rule 196
	'<='           reduce using rule 196
	'=='           reduce using rule 196
	'>'            reduce using rule 196
	'>='           reduce using rule 196
	']'            reduce using rule 196
	'^'            reduce using rule 196
	'and'          reduce using rule 196
	'do'           reduce using rule 196
	'or'           reduce using rule 196
	'then'         reduce using rule 196
	'~='           reduce using rule 196
	%eof           reduce using rule 196


State 67

	RExp10 -> Func .                                    (rule 185)

	'%'            reduce using rule 185
	')'            reduce using rule 185
	'*'            reduce using rule 185
	'+'            reduce using rule 185
	','            reduce using rule 185
	'-'            reduce using rule 185
	'..'           reduce using rule 185
	'/'            reduce using rule 185
	';'            reduce using rule 185
	'<'            reduce using rule 185
	'<='           reduce using rule 185
	'=='           reduce using rule 185
	'>'            reduce using rule 185
	'>='           reduce using rule 185
	']'            reduce using rule 185
	'^'            reduce using rule 185
	'and'          reduce using rule 185
	'do'           reduce using rule 185
	'or'           reduce using rule 185
	'then'         reduce using rule 185
	'~='           reduce using rule 185
	%eof           reduce using rule 185


State 68

	Func -> FuncWrite .                                 (rule 114)

	'%'            reduce using rule 114
	')'            reduce using rule 114
	'*'            reduce using rule 114
	'+'            reduce using rule 114
	','            reduce using rule 114
	'-'            reduce using rule 114
	'..'           reduce using rule 114
	'/'            reduce using rule 114
	';'            reduce using rule 114
	'<'            reduce using rule 114
	'<='           reduce using rule 114
	'=='           reduce using rule 114
	'>'            reduce using rule 114
	'>='           reduce using rule 114
	']'            reduce using rule 114
	'^'            reduce using rule 114
	'and'          reduce using rule 114
	'do'           reduce using rule 114
	'or'           reduce using rule 114
	'then'         reduce using rule 114
	'~='           reduce using rule 114
	%eof           reduce using rule 114


State 69

	Func -> FuncRead .                                  (rule 115)

	'%'            reduce using rule 115
	')'            reduce using rule 115
	'*'            reduce using rule 115
	'+'            reduce using rule 115
	','            reduce using rule 115
	'-'            reduce using rule 115
	'..'           reduce using rule 115
	'/'            reduce using rule 115
	';'            reduce using rule 115
	'<'            reduce using rule 115
	'<='           reduce using rule 115
	'=='           reduce using rule 115
	'>'            reduce using rule 115
	'>='           reduce using rule 115
	']'            reduce using rule 115
	'^'            reduce using rule 115
	'and'          reduce using rule 115
	'do'           reduce using rule 115
	'or'           reduce using rule 115
	'then'         reduce using rule 115
	'~='           reduce using rule 115
	%eof           reduce using rule 115


State 70

	RExp11 -> LExp .                                    (rule 190)

	'%'            reduce using rule 190
	')'            reduce using rule 190
	'*'            reduce using rule 190
	'+'            reduce using rule 190
	','            reduce using rule 190
	'-'            reduce using rule 190
	'..'           reduce using rule 190
	'/'            reduce using rule 190
	';'            reduce using rule 190
	'<'            reduce using rule 190
	'<='           reduce using rule 190
	'=='           reduce using rule 190
	'>'            reduce using rule 190
	'>='           reduce using rule 190
	']'            reduce using rule 190
	'^'            reduce using rule 190
	'and'          reduce using rule 190
	'do'           reduce using rule 190
	'or'           reduce using rule 190
	'then'         reduce using rule 190
	'~='           reduce using rule 190
	%eof           reduce using rule 190


State 71

	RExp6 -> RExp6 . '+' RExp7                          (rule 174)
	RExp6 -> RExp6 . '-' RExp7                          (rule 175)
	RExp5 -> RExp6 .                                    (rule 200)

	')'            reduce using rule 200
	'+'            shift, and enter state 272
	','            reduce using rule 200
	'-'            shift, and enter state 273
	';'            reduce using rule 200
	'<'            reduce using rule 200
	'<='           reduce using rule 200
	'=='           reduce using rule 200
	'>'            reduce using rule 200
	'>='           reduce using rule 200
	']'            reduce using rule 200
	'and'          reduce using rule 200
	'do'           reduce using rule 200
	'or'           reduce using rule 200
	'then'         reduce using rule 200
	'~='           reduce using rule 200
	%eof           reduce using rule 200


State 72

	RExp6 -> RExp7 .                                    (rule 176)
	RExp7 -> RExp7 . '*' RExp8                          (rule 177)
	RExp7 -> RExp7 . '/' RExp8                          (rule 178)
	RExp7 -> RExp7 . '%' RExp8                          (rule 179)

	'%'            shift, and enter state 274
	')'            reduce using rule 176
	'*'            shift, and enter state 275
	'+'            reduce using rule 176
	','            reduce using rule 176
	'-'            reduce using rule 176
	'/'            shift, and enter state 276
	';'            reduce using rule 176
	'<'            reduce using rule 176
	'<='           reduce using rule 176
	'=='           reduce using rule 176
	'>'            reduce using rule 176
	'>='           reduce using rule 176
	']'            reduce using rule 176
	'and'          reduce using rule 176
	'do'           reduce using rule 176
	'or'           reduce using rule 176
	'then'         reduce using rule 176
	'~='           reduce using rule 176
	%eof           reduce using rule 176


State 73

	RExp7 -> RExp8 .                                    (rule 180)

	'%'            reduce using rule 180
	')'            reduce using rule 180
	'*'            reduce using rule 180
	'+'            reduce using rule 180
	','            reduce using rule 180
	'-'            reduce using rule 180
	'/'            reduce using rule 180
	';'            reduce using rule 180
	'<'            reduce using rule 180
	'<='           reduce using rule 180
	'=='           reduce using rule 180
	'>'            reduce using rule 180
	'>='           reduce using rule 180
	']'            reduce using rule 180
	'and'          reduce using rule 180
	'do'           reduce using rule 180
	'or'           reduce using rule 180
	'then'         reduce using rule 180
	'~='           reduce using rule 180
	%eof           reduce using rule 180


State 74

	RExp8 -> RExp9 . '^' RExp8                          (rule 181)
	RExp8 -> RExp9 .                                    (rule 182)

	'%'            reduce using rule 182
	')'            reduce using rule 182
	'*'            reduce using rule 182
	'+'            reduce using rule 182
	','            reduce using rule 182
	'-'            reduce using rule 182
	'/'            reduce using rule 182
	';'            reduce using rule 182
	'<'            reduce using rule 182
	'<='           reduce using rule 182
	'=='           reduce using rule 182
	'>'            reduce using rule 182
	'>='           reduce using rule 182
	']'            reduce using rule 182
	'^'            shift, and enter state 291
	'and'          reduce using rule 182
	'do'           reduce using rule 182
	'or'           reduce using rule 182
	'then'         reduce using rule 182
	'~='           reduce using rule 182
	%eof           reduce using rule 182


State 75

	RExp9 -> RExp10 .                                   (rule 184)
	RExp10 -> RExp10 . '..' RExp11                      (rule 186)

	'%'            reduce using rule 184
	')'            reduce using rule 184
	'*'            reduce using rule 184
	'+'            reduce using rule 184
	','            reduce using rule 184
	'-'            reduce using rule 184
	'..'           shift, and enter state 277
	'/'            reduce using rule 184
	';'            reduce using rule 184
	'<'            reduce using rule 184
	'<='           reduce using rule 184
	'=='           reduce using rule 184
	'>'            reduce using rule 184
	'>='           reduce using rule 184
	']'            reduce using rule 184
	'^'            reduce using rule 184
	'and'          reduce using rule 184
	'do'           reduce using rule 184
	'or'           reduce using rule 184
	'then'         reduce using rule 184
	'~='           reduce using rule 184
	%eof           reduce using rule 184


State 76

	RExp10 -> RExp11 .                                  (rule 188)

	'%'            reduce using rule 188
	')'            reduce using rule 188
	'*'            reduce using rule 188
	'+'            reduce using rule 188
	','            reduce using rule 188
	'-'            reduce using rule 188
	'..'           reduce using rule 188
	'/'            reduce using rule 188
	';'            reduce using rule 188
	'<'            reduce using rule 188
	'<='           reduce using rule 188
	'=='           reduce using rule 188
	'>'            reduce using rule 188
	'>='           reduce using rule 188
	']'            reduce using rule 188
	'^'            reduce using rule 188
	'and'          reduce using rule 188
	'do'           reduce using rule 188
	'or'           reduce using rule 188
	'then'         reduce using rule 188
	'~='           reduce using rule 188
	%eof           reduce using rule 188


State 77

	%start_pRExp5 -> RExp5 .                            (rule 54)

	%eof           accept


State 78

	RExp11 -> RExp12 .                                  (rule 197)

	'%'            reduce using rule 197
	')'            reduce using rule 197
	'*'            reduce using rule 197
	'+'            reduce using rule 197
	','            reduce using rule 197
	'-'            reduce using rule 197
	'..'           reduce using rule 197
	'/'            reduce using rule 197
	';'            reduce using rule 197
	'<'            reduce using rule 197
	'<='           reduce using rule 197
	'=='           reduce using rule 197
	'>'            reduce using rule 197
	'>='           reduce using rule 197
	']'            reduce using rule 197
	'^'            reduce using rule 197
	'and'          reduce using rule 197
	'do'           reduce using rule 197
	'or'           reduce using rule 197
	'then'         reduce using rule 197
	'~='           reduce using rule 197
	%eof           reduce using rule 197


State 79

	RExp10 -> '#' . RExp11                              (rule 187)

	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 105
	Boolean        goto state 65
	PtrVoid        goto state 66
	LExp           goto state 70
	RExp11         goto state 290
	RExp12         goto state 78

State 80

	RExp11 -> '&' . LExp                                (rule 191)

	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	LExp           goto state 289

State 81

	LExp -> '*' . LExp                                  (rule 157)

	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	LExp           goto state 226

State 82

	RExp9 -> '-' . RExp10                               (rule 183)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp10         goto state 288
	RExp11         goto state 76
	RExp12         goto state 78

State 83

	Boolean -> 'false' .                                (rule 76)

	'%'            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'^'            reduce using rule 76
	'and'          reduce using rule 76
	'do'           reduce using rule 76
	'or'           reduce using rule 76
	'then'         reduce using rule 76
	'}'            reduce using rule 76
	'~='           reduce using rule 76
	%eof           reduce using rule 76


State 84

	PtrVoid -> 'nil' .                                  (rule 77)

	'%'            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'^'            reduce using rule 77
	'and'          reduce using rule 77
	'do'           reduce using rule 77
	'or'           reduce using rule 77
	'then'         reduce using rule 77
	'}'            reduce using rule 77
	'~='           reduce using rule 77
	%eof           reduce using rule 77


State 85

	FuncRead -> 'readChar' . '(' ')'                    (rule 123)

	'('            shift, and enter state 287


State 86

	FuncRead -> 'readFloat' . '(' ')'                   (rule 122)

	'('            shift, and enter state 286


State 87

	FuncRead -> 'readInt' . '(' ')'                     (rule 121)

	'('            shift, and enter state 285


State 88

	FuncRead -> 'readString' . '(' ')'                  (rule 124)

	'('            shift, and enter state 284


State 89

	Boolean -> 'true' .                                 (rule 75)

	'%'            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'^'            reduce using rule 75
	'and'          reduce using rule 75
	'do'           reduce using rule 75
	'or'           reduce using rule 75
	'then'         reduce using rule 75
	'}'            reduce using rule 75
	'~='           reduce using rule 75
	%eof           reduce using rule 75


State 90

	FuncWrite -> 'writeChar' . '(' RExp ')'             (rule 119)

	'('            shift, and enter state 283


State 91

	FuncWrite -> 'writeFloat' . '(' RExp ')'            (rule 118)

	'('            shift, and enter state 282


State 92

	FuncWrite -> 'writeInt' . '(' RExp ')'              (rule 117)

	'('            shift, and enter state 281


State 93

	FuncWrite -> 'writeString' . '(' RExp ')'           (rule 120)

	'('            shift, and enter state 280


State 94

	Double -> L_doubl .                                 (rule 57)

	'%'            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'..'           reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'and'          reduce using rule 57
	'do'           reduce using rule 57
	'or'           reduce using rule 57
	'then'         reduce using rule 57
	'}'            reduce using rule 57
	'~='           reduce using rule 57
	%eof           reduce using rule 57


State 95

	Integer -> L_integ .                                (rule 58)

	'%'            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'..'           reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'and'          reduce using rule 58
	'do'           reduce using rule 58
	'or'           reduce using rule 58
	'then'         reduce using rule 58
	'}'            reduce using rule 58
	'~='           reduce using rule 58
	%eof           reduce using rule 58


State 96

	String -> L_quoted .                                (rule 59)

	'%'            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'..'           reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'^'            reduce using rule 59
	'and'          reduce using rule 59
	'do'           reduce using rule 59
	'or'           reduce using rule 59
	'then'         reduce using rule 59
	'}'            reduce using rule 59
	'~='           reduce using rule 59
	%eof           reduce using rule 59


State 97

	LIdent -> L_LIdent .                                (rule 60)

	'%'            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'..'           reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'and'          reduce using rule 60
	'do'           reduce using rule 60
	'in'           reduce using rule 60
	'or'           reduce using rule 60
	'then'         reduce using rule 60
	'~='           reduce using rule 60
	%eof           reduce using rule 60


State 98

	%start_pRExp4 -> RExp4 .                            (rule 53)

	%eof           accept


State 99

	RExp4 -> RExp5 .                                    (rule 199)

	')'            reduce using rule 199
	','            reduce using rule 199
	';'            reduce using rule 199
	'<'            reduce using rule 199
	'<='           reduce using rule 199
	'=='           reduce using rule 199
	'>'            reduce using rule 199
	'>='           reduce using rule 199
	']'            reduce using rule 199
	'and'          reduce using rule 199
	'do'           reduce using rule 199
	'or'           reduce using rule 199
	'then'         reduce using rule 199
	'~='           reduce using rule 199
	%eof           reduce using rule 199


State 100

	RExp1 -> RExp2 .                                    (rule 198)

	')'            reduce using rule 198
	','            reduce using rule 198
	';'            reduce using rule 198
	']'            reduce using rule 198
	'and'          reduce using rule 198
	'do'           reduce using rule 198
	'or'           reduce using rule 198
	'then'         reduce using rule 198
	%eof           reduce using rule 198


State 101

	RExp2 -> RExp3 .                                    (rule 166)
	RExp3 -> RExp3 . '==' RExp5                         (rule 167)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 168)
	RExp3 -> RExp3 . '<' RExp5                          (rule 169)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 170)
	RExp3 -> RExp3 . '>' RExp5                          (rule 171)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 172)

	')'            reduce using rule 166
	','            reduce using rule 166
	';'            reduce using rule 166
	'<'            shift, and enter state 266
	'<='           shift, and enter state 267
	'=='           shift, and enter state 268
	'>'            shift, and enter state 269
	'>='           shift, and enter state 270
	']'            reduce using rule 166
	'and'          reduce using rule 166
	'do'           reduce using rule 166
	'or'           reduce using rule 166
	'then'         reduce using rule 166
	'~='           shift, and enter state 271
	%eof           reduce using rule 166


State 102

	%start_pRExp1 -> RExp1 .                            (rule 52)

	%eof           accept


State 103

	RExp3 -> RExp4 .                                    (rule 173)

	')'            reduce using rule 173
	','            reduce using rule 173
	';'            reduce using rule 173
	'<'            reduce using rule 173
	'<='           reduce using rule 173
	'=='           reduce using rule 173
	'>'            reduce using rule 173
	'>='           reduce using rule 173
	']'            reduce using rule 173
	'and'          reduce using rule 173
	'do'           reduce using rule 173
	'or'           reduce using rule 173
	'then'         reduce using rule 173
	'~='           reduce using rule 173
	%eof           reduce using rule 173


State 104

	RExp2 -> 'not' . RExp3                              (rule 165)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp3          goto state 279
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 105

	LExp -> LIdent .                                    (rule 156)
	LExp -> LIdent . ListDim                            (rule 158)

	'%'            reduce using rule 156
	')'            reduce using rule 156
	'*'            reduce using rule 156
	'+'            reduce using rule 156
	','            reduce using rule 156
	'-'            reduce using rule 156
	'..'           reduce using rule 156
	'/'            reduce using rule 156
	';'            reduce using rule 156
	'<'            reduce using rule 156
	'<='           reduce using rule 156
	'='            reduce using rule 156
	'=='           reduce using rule 156
	'>'            reduce using rule 156
	'>='           reduce using rule 156
	'['            shift, and enter state 117
	']'            reduce using rule 156
	'^'            reduce using rule 156
	'and'          reduce using rule 156
	'do'           reduce using rule 156
	'or'           reduce using rule 156
	'then'         reduce using rule 156
	'~='           reduce using rule 156
	%eof           reduce using rule 156

	ListDim        goto state 278
	Dim            goto state 119

State 106

	%start_pRExp11 -> RExp11 .                          (rule 51)

	%eof           accept


State 107

	%start_pRExp10 -> RExp10 .                          (rule 50)
	RExp10 -> RExp10 . '..' RExp11                      (rule 186)

	'..'           shift, and enter state 277
	%eof           accept


State 108

	%start_pRExp9 -> RExp9 .                            (rule 49)

	%eof           accept


State 109

	%start_pRExp8 -> RExp8 .                            (rule 48)

	%eof           accept


State 110

	%start_pRExp7 -> RExp7 .                            (rule 47)
	RExp7 -> RExp7 . '*' RExp8                          (rule 177)
	RExp7 -> RExp7 . '/' RExp8                          (rule 178)
	RExp7 -> RExp7 . '%' RExp8                          (rule 179)

	'%'            shift, and enter state 274
	'*'            shift, and enter state 275
	'/'            shift, and enter state 276
	%eof           accept


State 111

	%start_pRExp6 -> RExp6 .                            (rule 46)
	RExp6 -> RExp6 . '+' RExp7                          (rule 174)
	RExp6 -> RExp6 . '-' RExp7                          (rule 175)

	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	%eof           accept


State 112

	%start_pRExp3 -> RExp3 .                            (rule 45)
	RExp3 -> RExp3 . '==' RExp5                         (rule 167)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 168)
	RExp3 -> RExp3 . '<' RExp5                          (rule 169)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 170)
	RExp3 -> RExp3 . '>' RExp5                          (rule 171)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 172)

	'<'            shift, and enter state 266
	'<='           shift, and enter state 267
	'=='           shift, and enter state 268
	'>'            shift, and enter state 269
	'>='           shift, and enter state 270
	'~='           shift, and enter state 271
	%eof           accept


State 113

	%start_pRExp2 -> RExp2 .                            (rule 44)

	%eof           accept


State 114

	%start_pRExp -> RExp .                              (rule 43)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	'or'           shift, and enter state 258
	%eof           accept


State 115

	RExp -> RExp1 . 'and' RExp2                         (rule 163)
	RExp -> RExp1 .                                     (rule 164)

	')'            reduce using rule 164
	','            reduce using rule 164
	';'            reduce using rule 164
	']'            reduce using rule 164
	'and'          shift, and enter state 265
	'do'           reduce using rule 164
	'or'           reduce using rule 164
	'then'         reduce using rule 164
	%eof           reduce using rule 164


State 116

	%start_pDim -> Dim .                                (rule 42)

	%eof           accept


State 117

	Dim -> '[' . RExp ']'                               (rule 161)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 264
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 118

	%start_pListDim -> ListDim .                        (rule 41)

	%eof           accept


State 119

	ListDim -> Dim .                                    (rule 159)
	ListDim -> Dim . ListDim                            (rule 160)

	'%'            reduce using rule 159
	')'            reduce using rule 159
	'*'            reduce using rule 159
	'+'            reduce using rule 159
	','            reduce using rule 159
	'-'            reduce using rule 159
	'..'           reduce using rule 159
	'/'            reduce using rule 159
	';'            reduce using rule 159
	'<'            reduce using rule 159
	'<='           reduce using rule 159
	'='            reduce using rule 159
	'=='           reduce using rule 159
	'>'            reduce using rule 159
	'>='           reduce using rule 159
	'['            shift, and enter state 117
	']'            reduce using rule 159
	'^'            reduce using rule 159
	'and'          reduce using rule 159
	'do'           reduce using rule 159
	'or'           reduce using rule 159
	'then'         reduce using rule 159
	'~='           reduce using rule 159
	%eof           reduce using rule 159

	ListDim        goto state 263
	Dim            goto state 119

State 120

	%start_pLExp -> LExp .                              (rule 40)

	%eof           accept


State 121

	%start_pModality -> Modality .                      (rule 39)

	%eof           accept


State 122

	Modality -> 'const' .                               (rule 152)

	'Bool'         reduce using rule 152
	'Char'         reduce using rule 152
	'Float'        reduce using rule 152
	'Int'          reduce using rule 152
	'String'       reduce using rule 152
	'Void'         reduce using rule 152
	%eof           reduce using rule 152


State 123

	Modality -> 'name' .                                (rule 155)

	'Bool'         reduce using rule 155
	'Char'         reduce using rule 155
	'Float'        reduce using rule 155
	'Int'          reduce using rule 155
	'String'       reduce using rule 155
	'Void'         reduce using rule 155
	%eof           reduce using rule 155


State 124

	Modality -> 'ref' .                                 (rule 151)

	'Bool'         reduce using rule 151
	'Char'         reduce using rule 151
	'Float'        reduce using rule 151
	'Int'          reduce using rule 151
	'String'       reduce using rule 151
	'Void'         reduce using rule 151
	%eof           reduce using rule 151


State 125

	Modality -> 'res' .                                 (rule 153)

	'Bool'         reduce using rule 153
	'Char'         reduce using rule 153
	'Float'        reduce using rule 153
	'Int'          reduce using rule 153
	'String'       reduce using rule 153
	'Void'         reduce using rule 153
	%eof           reduce using rule 153


State 126

	Modality -> 'val' .                                 (rule 150)

	'Bool'         reduce using rule 150
	'Char'         reduce using rule 150
	'Float'        reduce using rule 150
	'Int'          reduce using rule 150
	'String'       reduce using rule 150
	'Void'         reduce using rule 150
	%eof           reduce using rule 150


State 127

	Modality -> 'valres' .                              (rule 154)

	'Bool'         reduce using rule 154
	'Char'         reduce using rule 154
	'Float'        reduce using rule 154
	'Int'          reduce using rule 154
	'String'       reduce using rule 154
	'Void'         reduce using rule 154
	%eof           reduce using rule 154


State 128

	ListParamF -> ParamF .                              (rule 147)
	ListParamF -> ParamF . ',' ListParamF               (rule 148)

	')'            reduce using rule 147
	','            shift, and enter state 262
	%eof           reduce using rule 147


State 129

	%start_pListParamF -> ListParamF .                  (rule 38)

	%eof           accept


State 130

	ParamF -> Modality . BasicType LExp                 (rule 145)

	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 261

State 131

	%start_pParamF -> ParamF .                          (rule 37)

	%eof           accept


State 132

	CompoundType -> BasicType .                         (rule 78)
	CompoundType -> BasicType . ListBracks              (rule 80)

	'['            shift, and enter state 206
	'function'     reduce using rule 78
	%eof           reduce using rule 78

	Bracks         goto state 204
	ListBracks     goto state 227

State 133

	FuncD -> CompoundType . 'function' LIdent '(' ListParamF ')' Block 'end'    (rule 144)

	'function'     shift, and enter state 260


State 134

	%start_pFuncD -> FuncD .                            (rule 36)

	%eof           accept


State 135

	CompoundType -> '*' . CompoundType                  (rule 79)

	'*'            shift, and enter state 135
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 132
	CompoundType   goto state 225

State 136

	BasicType -> 'Bool' .                               (rule 69)

	'*'            reduce using rule 69
	'['            reduce using rule 69
	'function'     reduce using rule 69
	L_LIdent       reduce using rule 69
	%eof           reduce using rule 69


State 137

	BasicType -> 'Char' .                               (rule 70)

	'*'            reduce using rule 70
	'['            reduce using rule 70
	'function'     reduce using rule 70
	L_LIdent       reduce using rule 70
	%eof           reduce using rule 70


State 138

	BasicType -> 'Float' .                              (rule 71)

	'*'            reduce using rule 71
	'['            reduce using rule 71
	'function'     reduce using rule 71
	L_LIdent       reduce using rule 71
	%eof           reduce using rule 71


State 139

	BasicType -> 'Int' .                                (rule 72)

	'*'            reduce using rule 72
	'['            reduce using rule 72
	'function'     reduce using rule 72
	L_LIdent       reduce using rule 72
	%eof           reduce using rule 72


State 140

	BasicType -> 'String' .                             (rule 73)

	'*'            reduce using rule 73
	'['            reduce using rule 73
	'function'     reduce using rule 73
	L_LIdent       reduce using rule 73
	%eof           reduce using rule 73


State 141

	BasicType -> 'Void' .                               (rule 74)

	'*'            reduce using rule 74
	'['            reduce using rule 74
	'function'     reduce using rule 74
	L_LIdent       reduce using rule 74
	%eof           reduce using rule 74


State 142

	%start_pListRExp -> ListRExp .                      (rule 35)

	%eof           accept


State 143

	ListRExp -> RExp .                                  (rule 142)
	ListRExp -> RExp . ',' ListRExp                     (rule 143)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	')'            reduce using rule 142
	','            shift, and enter state 259
	'or'           shift, and enter state 258
	%eof           reduce using rule 142


State 144

	%start_pBreak -> Break .                            (rule 34)

	%eof           accept


State 145

	Break -> 'break' .                                  (rule 140)

	';'            reduce using rule 140
	%eof           reduce using rule 140


State 146

	%start_pRValue -> RValue .                          (rule 33)

	%eof           accept


State 147

	RValue -> RExp .                                    (rule 139)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	';'            reduce using rule 139
	'or'           shift, and enter state 258
	%eof           reduce using rule 139


State 148

	%start_pReturn -> Return .                          (rule 32)

	%eof           accept


State 149

	Return -> 'return' . RValue                         (rule 137)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	';'            reduce using rule 138
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 138

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	RValue         goto state 257
	LExp           goto state 70
	RExp           goto state 147
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 150

	%start_pListElseIf -> ListElseIf .                  (rule 31)
	ListElseIf -> ListElseIf . ElseIf                   (rule 136)

	'elseif'       shift, and enter state 152
	%eof           accept

	ElseIf         goto state 256

State 151

	%start_pElseIf -> ElseIf .                          (rule 30)

	%eof           accept


State 152

	ElseIf -> 'elseif' . RExp 'then' Block              (rule 134)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 255
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 153

	%start_pElse -> Else .                              (rule 29)

	%eof           accept


State 154

	Else -> 'else' . Block                              (rule 132)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'end'          reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67
	%eof           reduce using rule 67

	Block          goto state 254
	ListStm        goto state 214

State 155

	%start_pIf -> If .                                  (rule 28)

	%eof           accept


State 156

	If -> 'if' . RExp 'then' Block ListElseIf Else 'end'    (rule 131)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 253
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 157

	%start_pIncrement -> Increment .                    (rule 27)

	%eof           accept


State 158

	Increment -> ',' . RExp                             (rule 130)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 252
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 159

	%start_pFor -> For .                                (rule 26)

	%eof           accept


State 160

	For -> 'for' . LIdent '=' RExp ',' RExp Increment EBlk    (rule 127)
	For -> 'for' . LIdent 'in' LIdent EBlk              (rule 128)

	L_LIdent       shift, and enter state 97

	LIdent         goto state 251

State 161

	%start_pRepeat -> Repeat .                          (rule 25)

	%eof           accept


State 162

	Repeat -> 'repeat' . Block 'until' RExp             (rule 126)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'until'        reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67

	Block          goto state 250
	ListStm        goto state 214

State 163

	%start_pWhile -> While .                            (rule 24)

	%eof           accept


State 164

	While -> 'while' . RExp EBlk                        (rule 125)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 249
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 165

	%start_pFuncRead -> FuncRead .                      (rule 23)

	%eof           accept


State 166

	%start_pFuncWrite -> FuncWrite .                    (rule 22)

	%eof           accept


State 167

	Func -> LIdent . '(' ListRExp ')'                   (rule 116)

	'('            shift, and enter state 248


State 168

	%start_pFunc -> Func .                              (rule 21)

	%eof           accept


State 169

	%start_pAss -> Ass .                                (rule 20)

	%eof           accept


State 170

	Ass -> LExp . '=' RExp                              (rule 113)

	'='            shift, and enter state 247


State 171

	%start_pLocal -> Local .                            (rule 19)

	%eof           accept


State 172

	Local -> 'local' . Decl                             (rule 112)

	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141

	BasicType      goto state 188
	Decl           goto state 246

State 173

	ListArray -> Array .                                (rule 110)
	ListArray -> Array . ',' ListArray                  (rule 111)

	','            shift, and enter state 245
	'}'            reduce using rule 110
	%eof           reduce using rule 110


State 174

	%start_pListArray -> ListArray .                    (rule 18)

	%eof           accept


State 175

	Array -> '{' . ListArray '}'                        (rule 100)
	Array -> '{' . ListVType '}'                        (rule 101)

	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	'{'            shift, and enter state 175
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96

	Char           goto state 176
	Double         goto state 177
	Integer        goto state 178
	String         goto state 179
	Boolean        goto state 180
	PtrVoid        goto state 181
	Array          goto state 173
	VType          goto state 182
	ListVType      goto state 243
	ListArray      goto state 244

State 176

	VType -> Char .                                     (rule 103)

	','            reduce using rule 103
	'}'            reduce using rule 103
	%eof           reduce using rule 103


State 177

	VType -> Double .                                   (rule 104)

	','            reduce using rule 104
	'}'            reduce using rule 104
	%eof           reduce using rule 104


State 178

	VType -> Integer .                                  (rule 105)

	','            reduce using rule 105
	'}'            reduce using rule 105
	%eof           reduce using rule 105


State 179

	VType -> String .                                   (rule 106)

	','            reduce using rule 106
	'}'            reduce using rule 106
	%eof           reduce using rule 106


State 180

	VType -> Boolean .                                  (rule 102)

	','            reduce using rule 102
	'}'            reduce using rule 102
	%eof           reduce using rule 102


State 181

	VType -> PtrVoid .                                  (rule 107)

	','            reduce using rule 107
	'}'            reduce using rule 107
	%eof           reduce using rule 107


State 182

	ListVType -> VType .                                (rule 108)
	ListVType -> VType . ',' ListVType                  (rule 109)

	','            shift, and enter state 242
	'}'            reduce using rule 108
	%eof           reduce using rule 108


State 183

	%start_pListVType -> ListVType .                    (rule 17)

	%eof           accept


State 184

	%start_pVType -> VType .                            (rule 16)

	%eof           accept


State 185

	%start_pArray -> Array .                            (rule 15)

	%eof           accept


State 186

	%start_pVarInit -> VarInit .                        (rule 14)

	%eof           accept


State 187

	VarInit -> '=' . RExp                               (rule 98)
	VarInit -> '=' . Array                              (rule 99)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	'{'            shift, and enter state 175
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Array          goto state 240
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 241
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 188

	Decl -> BasicType . LExp VarInit                    (rule 96)

	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	LExp           goto state 228

State 189

	%start_pDecl -> Decl .                              (rule 13)

	%eof           accept


State 190

	%start_pEBlk -> EBlk .                              (rule 12)

	%eof           accept


State 191

	EBlk -> 'do' . Block 'end'                          (rule 95)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'end'          reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67

	Block          goto state 239
	ListStm        goto state 214

State 192

	%start_pStm -> Stm .                                (rule 11)

	%eof           accept


State 193

	Stm -> EBlk .                                       (rule 92)

	'*'            reduce using rule 92
	'Bool'         reduce using rule 92
	'Char'         reduce using rule 92
	'Float'        reduce using rule 92
	'Int'          reduce using rule 92
	'String'       reduce using rule 92
	'Void'         reduce using rule 92
	'break'        reduce using rule 92
	'do'           reduce using rule 92
	'else'         reduce using rule 92
	'elseif'       reduce using rule 92
	'end'          reduce using rule 92
	'for'          reduce using rule 92
	'if'           reduce using rule 92
	'local'        reduce using rule 92
	'readChar'     reduce using rule 92
	'readFloat'    reduce using rule 92
	'readInt'      reduce using rule 92
	'readString'   reduce using rule 92
	'repeat'       reduce using rule 92
	'return'       reduce using rule 92
	'until'        reduce using rule 92
	'while'        reduce using rule 92
	'writeChar'    reduce using rule 92
	'writeFloat'   reduce using rule 92
	'writeInt'     reduce using rule 92
	'writeString'  reduce using rule 92
	L_LIdent       reduce using rule 92
	%eof           reduce using rule 92


State 194

	Stm -> Decl . ';'                                   (rule 84)

	';'            shift, and enter state 238


State 195

	Stm -> Local . ';'                                  (rule 85)

	';'            shift, and enter state 237


State 196

	Stm -> Ass . ';'                                    (rule 86)

	';'            shift, and enter state 236


State 197

	Stm -> Func . ';'                                   (rule 91)

	';'            shift, and enter state 235


State 198

	Stm -> While .                                      (rule 87)

	'*'            reduce using rule 87
	'Bool'         reduce using rule 87
	'Char'         reduce using rule 87
	'Float'        reduce using rule 87
	'Int'          reduce using rule 87
	'String'       reduce using rule 87
	'Void'         reduce using rule 87
	'break'        reduce using rule 87
	'do'           reduce using rule 87
	'else'         reduce using rule 87
	'elseif'       reduce using rule 87
	'end'          reduce using rule 87
	'for'          reduce using rule 87
	'if'           reduce using rule 87
	'local'        reduce using rule 87
	'readChar'     reduce using rule 87
	'readFloat'    reduce using rule 87
	'readInt'      reduce using rule 87
	'readString'   reduce using rule 87
	'repeat'       reduce using rule 87
	'return'       reduce using rule 87
	'until'        reduce using rule 87
	'while'        reduce using rule 87
	'writeChar'    reduce using rule 87
	'writeFloat'   reduce using rule 87
	'writeInt'     reduce using rule 87
	'writeString'  reduce using rule 87
	L_LIdent       reduce using rule 87
	%eof           reduce using rule 87


State 199

	Stm -> Repeat . ';'                                 (rule 88)

	';'            shift, and enter state 234


State 200

	Stm -> For .                                        (rule 89)

	'*'            reduce using rule 89
	'Bool'         reduce using rule 89
	'Char'         reduce using rule 89
	'Float'        reduce using rule 89
	'Int'          reduce using rule 89
	'String'       reduce using rule 89
	'Void'         reduce using rule 89
	'break'        reduce using rule 89
	'do'           reduce using rule 89
	'else'         reduce using rule 89
	'elseif'       reduce using rule 89
	'end'          reduce using rule 89
	'for'          reduce using rule 89
	'if'           reduce using rule 89
	'local'        reduce using rule 89
	'readChar'     reduce using rule 89
	'readFloat'    reduce using rule 89
	'readInt'      reduce using rule 89
	'readString'   reduce using rule 89
	'repeat'       reduce using rule 89
	'return'       reduce using rule 89
	'until'        reduce using rule 89
	'while'        reduce using rule 89
	'writeChar'    reduce using rule 89
	'writeFloat'   reduce using rule 89
	'writeInt'     reduce using rule 89
	'writeString'  reduce using rule 89
	L_LIdent       reduce using rule 89
	%eof           reduce using rule 89


State 201

	Stm -> If .                                         (rule 90)

	'*'            reduce using rule 90
	'Bool'         reduce using rule 90
	'Char'         reduce using rule 90
	'Float'        reduce using rule 90
	'Int'          reduce using rule 90
	'String'       reduce using rule 90
	'Void'         reduce using rule 90
	'break'        reduce using rule 90
	'do'           reduce using rule 90
	'else'         reduce using rule 90
	'elseif'       reduce using rule 90
	'end'          reduce using rule 90
	'for'          reduce using rule 90
	'if'           reduce using rule 90
	'local'        reduce using rule 90
	'readChar'     reduce using rule 90
	'readFloat'    reduce using rule 90
	'readInt'      reduce using rule 90
	'readString'   reduce using rule 90
	'repeat'       reduce using rule 90
	'return'       reduce using rule 90
	'until'        reduce using rule 90
	'while'        reduce using rule 90
	'writeChar'    reduce using rule 90
	'writeFloat'   reduce using rule 90
	'writeInt'     reduce using rule 90
	'writeString'  reduce using rule 90
	L_LIdent       reduce using rule 90
	%eof           reduce using rule 90


State 202

	Stm -> Return . ';'                                 (rule 93)

	';'            shift, and enter state 233


State 203

	Stm -> Break . ';'                                  (rule 94)

	';'            shift, and enter state 232


State 204

	ListBracks -> Bracks .                              (rule 82)
	ListBracks -> Bracks . ListBracks                   (rule 83)

	'['            shift, and enter state 206
	'function'     reduce using rule 82
	%eof           reduce using rule 82

	Bracks         goto state 204
	ListBracks     goto state 231

State 205

	%start_pListBracks -> ListBracks .                  (rule 10)

	%eof           accept


State 206

	Bracks -> '[' . ']'                                 (rule 81)

	']'            shift, and enter state 230


State 207

	%start_pBracks -> Bracks .                          (rule 9)

	%eof           accept


State 208

	%start_pCompoundType -> CompoundType .              (rule 8)

	%eof           accept


State 209

	%start_pPtrVoid -> PtrVoid .                        (rule 7)

	%eof           accept


State 210

	%start_pBoolean -> Boolean .                        (rule 6)

	%eof           accept


State 211

	%start_pBasicType -> BasicType .                    (rule 5)

	%eof           accept


State 212

	%start_pListStm -> ListStm .                        (rule 4)
	ListStm -> ListStm . Stm                            (rule 68)

	'*'            shift, and enter state 81
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97
	%eof           accept

	LIdent         goto state 64
	BasicType      goto state 188
	Stm            goto state 229
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	LExp           goto state 170

State 213

	%start_pBlock -> Block .                            (rule 3)

	%eof           accept


State 214

	Block -> ListStm .                                  (rule 66)
	ListStm -> ListStm . Stm                            (rule 68)

	'*'            shift, and enter state 81
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'else'         reduce using rule 66
	'elseif'       reduce using rule 66
	'end'          reduce using rule 66
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'until'        reduce using rule 66
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 66

	LIdent         goto state 64
	BasicType      goto state 188
	Stm            goto state 229
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	LExp           goto state 170

State 215

	%start_pPGlobl -> PGlobl .                          (rule 2)

	%eof           accept


State 216

	CompoundType -> BasicType .                         (rule 78)
	CompoundType -> BasicType . ListBracks              (rule 80)
	Decl -> BasicType . LExp VarInit                    (rule 96)

	'*'            shift, and enter state 81
	'['            shift, and enter state 206
	'function'     reduce using rule 78
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	Bracks         goto state 204
	ListBracks     goto state 227
	LExp           goto state 228

State 217

	PGlobl -> Stm .                                     (rule 64)

	'*'            reduce using rule 64
	'Bool'         reduce using rule 64
	'Char'         reduce using rule 64
	'Float'        reduce using rule 64
	'Int'          reduce using rule 64
	'String'       reduce using rule 64
	'Void'         reduce using rule 64
	'break'        reduce using rule 64
	'do'           reduce using rule 64
	'for'          reduce using rule 64
	'if'           reduce using rule 64
	'local'        reduce using rule 64
	'readChar'     reduce using rule 64
	'readFloat'    reduce using rule 64
	'readInt'      reduce using rule 64
	'readString'   reduce using rule 64
	'repeat'       reduce using rule 64
	'return'       reduce using rule 64
	'while'        reduce using rule 64
	'writeChar'    reduce using rule 64
	'writeFloat'   reduce using rule 64
	'writeInt'     reduce using rule 64
	'writeString'  reduce using rule 64
	L_LIdent       reduce using rule 64
	%eof           reduce using rule 64


State 218

	PGlobl -> FuncD .                                   (rule 65)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65
	%eof           reduce using rule 65


State 219

	CompoundType -> '*' . CompoundType                  (rule 79)
	LExp -> '*' . LExp                                  (rule 157)

	'*'            shift, and enter state 219
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	BasicType      goto state 132
	CompoundType   goto state 225
	LExp           goto state 226

State 220

	%start_pListPGlobl -> ListPGlobl .                  (rule 1)

	%eof           accept


State 221

	ListPGlobl -> PGlobl .                              (rule 62)
	ListPGlobl -> PGlobl . ListPGlobl                   (rule 63)

	'*'            shift, and enter state 219
	'Bool'         shift, and enter state 136
	'Char'         shift, and enter state 137
	'Float'        shift, and enter state 138
	'Int'          shift, and enter state 139
	'String'       shift, and enter state 140
	'Void'         shift, and enter state 141
	'break'        shift, and enter state 145
	'do'           shift, and enter state 191
	'for'          shift, and enter state 160
	'if'           shift, and enter state 156
	'local'        shift, and enter state 172
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'repeat'       shift, and enter state 162
	'return'       shift, and enter state 149
	'while'        shift, and enter state 164
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 62

	LIdent         goto state 64
	ListPGlobl     goto state 224
	PGlobl         goto state 221
	BasicType      goto state 216
	CompoundType   goto state 133
	Stm            goto state 217
	EBlk           goto state 193
	Decl           goto state 194
	Local          goto state 195
	Ass            goto state 196
	Func           goto state 197
	FuncWrite      goto state 68
	FuncRead       goto state 69
	While          goto state 198
	Repeat         goto state 199
	For            goto state 200
	If             goto state 201
	Return         goto state 202
	Break          goto state 203
	FuncD          goto state 218
	LExp           goto state 170

State 222

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 223

	Program -> ListPGlobl .                             (rule 61)

	%eof           reduce using rule 61


State 224

	ListPGlobl -> PGlobl ListPGlobl .                   (rule 63)

	%eof           reduce using rule 63


State 225

	CompoundType -> '*' CompoundType .                  (rule 79)

	'function'     reduce using rule 79
	%eof           reduce using rule 79


State 226

	LExp -> '*' LExp .                                  (rule 157)

	'%'            reduce using rule 157
	')'            reduce using rule 157
	'*'            reduce using rule 157
	'+'            reduce using rule 157
	','            reduce using rule 157
	'-'            reduce using rule 157
	'..'           reduce using rule 157
	'/'            reduce using rule 157
	';'            reduce using rule 157
	'<'            reduce using rule 157
	'<='           reduce using rule 157
	'='            reduce using rule 157
	'=='           reduce using rule 157
	'>'            reduce using rule 157
	'>='           reduce using rule 157
	']'            reduce using rule 157
	'^'            reduce using rule 157
	'and'          reduce using rule 157
	'do'           reduce using rule 157
	'or'           reduce using rule 157
	'then'         reduce using rule 157
	'~='           reduce using rule 157
	%eof           reduce using rule 157


State 227

	CompoundType -> BasicType ListBracks .              (rule 80)

	'function'     reduce using rule 80
	%eof           reduce using rule 80


State 228

	Decl -> BasicType LExp . VarInit                    (rule 96)

	';'            reduce using rule 97
	'='            shift, and enter state 187
	%eof           reduce using rule 97

	VarInit        goto state 335

State 229

	ListStm -> ListStm Stm .                            (rule 68)

	'*'            reduce using rule 68
	'Bool'         reduce using rule 68
	'Char'         reduce using rule 68
	'Float'        reduce using rule 68
	'Int'          reduce using rule 68
	'String'       reduce using rule 68
	'Void'         reduce using rule 68
	'break'        reduce using rule 68
	'do'           reduce using rule 68
	'else'         reduce using rule 68
	'elseif'       reduce using rule 68
	'end'          reduce using rule 68
	'for'          reduce using rule 68
	'if'           reduce using rule 68
	'local'        reduce using rule 68
	'readChar'     reduce using rule 68
	'readFloat'    reduce using rule 68
	'readInt'      reduce using rule 68
	'readString'   reduce using rule 68
	'repeat'       reduce using rule 68
	'return'       reduce using rule 68
	'until'        reduce using rule 68
	'while'        reduce using rule 68
	'writeChar'    reduce using rule 68
	'writeFloat'   reduce using rule 68
	'writeInt'     reduce using rule 68
	'writeString'  reduce using rule 68
	L_LIdent       reduce using rule 68
	%eof           reduce using rule 68


State 230

	Bracks -> '[' ']' .                                 (rule 81)

	'['            reduce using rule 81
	'function'     reduce using rule 81
	%eof           reduce using rule 81


State 231

	ListBracks -> Bracks ListBracks .                   (rule 83)

	'function'     reduce using rule 83
	%eof           reduce using rule 83


State 232

	Stm -> Break ';' .                                  (rule 94)

	'*'            reduce using rule 94
	'Bool'         reduce using rule 94
	'Char'         reduce using rule 94
	'Float'        reduce using rule 94
	'Int'          reduce using rule 94
	'String'       reduce using rule 94
	'Void'         reduce using rule 94
	'break'        reduce using rule 94
	'do'           reduce using rule 94
	'else'         reduce using rule 94
	'elseif'       reduce using rule 94
	'end'          reduce using rule 94
	'for'          reduce using rule 94
	'if'           reduce using rule 94
	'local'        reduce using rule 94
	'readChar'     reduce using rule 94
	'readFloat'    reduce using rule 94
	'readInt'      reduce using rule 94
	'readString'   reduce using rule 94
	'repeat'       reduce using rule 94
	'return'       reduce using rule 94
	'until'        reduce using rule 94
	'while'        reduce using rule 94
	'writeChar'    reduce using rule 94
	'writeFloat'   reduce using rule 94
	'writeInt'     reduce using rule 94
	'writeString'  reduce using rule 94
	L_LIdent       reduce using rule 94
	%eof           reduce using rule 94


State 233

	Stm -> Return ';' .                                 (rule 93)

	'*'            reduce using rule 93
	'Bool'         reduce using rule 93
	'Char'         reduce using rule 93
	'Float'        reduce using rule 93
	'Int'          reduce using rule 93
	'String'       reduce using rule 93
	'Void'         reduce using rule 93
	'break'        reduce using rule 93
	'do'           reduce using rule 93
	'else'         reduce using rule 93
	'elseif'       reduce using rule 93
	'end'          reduce using rule 93
	'for'          reduce using rule 93
	'if'           reduce using rule 93
	'local'        reduce using rule 93
	'readChar'     reduce using rule 93
	'readFloat'    reduce using rule 93
	'readInt'      reduce using rule 93
	'readString'   reduce using rule 93
	'repeat'       reduce using rule 93
	'return'       reduce using rule 93
	'until'        reduce using rule 93
	'while'        reduce using rule 93
	'writeChar'    reduce using rule 93
	'writeFloat'   reduce using rule 93
	'writeInt'     reduce using rule 93
	'writeString'  reduce using rule 93
	L_LIdent       reduce using rule 93
	%eof           reduce using rule 93


State 234

	Stm -> Repeat ';' .                                 (rule 88)

	'*'            reduce using rule 88
	'Bool'         reduce using rule 88
	'Char'         reduce using rule 88
	'Float'        reduce using rule 88
	'Int'          reduce using rule 88
	'String'       reduce using rule 88
	'Void'         reduce using rule 88
	'break'        reduce using rule 88
	'do'           reduce using rule 88
	'else'         reduce using rule 88
	'elseif'       reduce using rule 88
	'end'          reduce using rule 88
	'for'          reduce using rule 88
	'if'           reduce using rule 88
	'local'        reduce using rule 88
	'readChar'     reduce using rule 88
	'readFloat'    reduce using rule 88
	'readInt'      reduce using rule 88
	'readString'   reduce using rule 88
	'repeat'       reduce using rule 88
	'return'       reduce using rule 88
	'until'        reduce using rule 88
	'while'        reduce using rule 88
	'writeChar'    reduce using rule 88
	'writeFloat'   reduce using rule 88
	'writeInt'     reduce using rule 88
	'writeString'  reduce using rule 88
	L_LIdent       reduce using rule 88
	%eof           reduce using rule 88


State 235

	Stm -> Func ';' .                                   (rule 91)

	'*'            reduce using rule 91
	'Bool'         reduce using rule 91
	'Char'         reduce using rule 91
	'Float'        reduce using rule 91
	'Int'          reduce using rule 91
	'String'       reduce using rule 91
	'Void'         reduce using rule 91
	'break'        reduce using rule 91
	'do'           reduce using rule 91
	'else'         reduce using rule 91
	'elseif'       reduce using rule 91
	'end'          reduce using rule 91
	'for'          reduce using rule 91
	'if'           reduce using rule 91
	'local'        reduce using rule 91
	'readChar'     reduce using rule 91
	'readFloat'    reduce using rule 91
	'readInt'      reduce using rule 91
	'readString'   reduce using rule 91
	'repeat'       reduce using rule 91
	'return'       reduce using rule 91
	'until'        reduce using rule 91
	'while'        reduce using rule 91
	'writeChar'    reduce using rule 91
	'writeFloat'   reduce using rule 91
	'writeInt'     reduce using rule 91
	'writeString'  reduce using rule 91
	L_LIdent       reduce using rule 91
	%eof           reduce using rule 91


State 236

	Stm -> Ass ';' .                                    (rule 86)

	'*'            reduce using rule 86
	'Bool'         reduce using rule 86
	'Char'         reduce using rule 86
	'Float'        reduce using rule 86
	'Int'          reduce using rule 86
	'String'       reduce using rule 86
	'Void'         reduce using rule 86
	'break'        reduce using rule 86
	'do'           reduce using rule 86
	'else'         reduce using rule 86
	'elseif'       reduce using rule 86
	'end'          reduce using rule 86
	'for'          reduce using rule 86
	'if'           reduce using rule 86
	'local'        reduce using rule 86
	'readChar'     reduce using rule 86
	'readFloat'    reduce using rule 86
	'readInt'      reduce using rule 86
	'readString'   reduce using rule 86
	'repeat'       reduce using rule 86
	'return'       reduce using rule 86
	'until'        reduce using rule 86
	'while'        reduce using rule 86
	'writeChar'    reduce using rule 86
	'writeFloat'   reduce using rule 86
	'writeInt'     reduce using rule 86
	'writeString'  reduce using rule 86
	L_LIdent       reduce using rule 86
	%eof           reduce using rule 86


State 237

	Stm -> Local ';' .                                  (rule 85)

	'*'            reduce using rule 85
	'Bool'         reduce using rule 85
	'Char'         reduce using rule 85
	'Float'        reduce using rule 85
	'Int'          reduce using rule 85
	'String'       reduce using rule 85
	'Void'         reduce using rule 85
	'break'        reduce using rule 85
	'do'           reduce using rule 85
	'else'         reduce using rule 85
	'elseif'       reduce using rule 85
	'end'          reduce using rule 85
	'for'          reduce using rule 85
	'if'           reduce using rule 85
	'local'        reduce using rule 85
	'readChar'     reduce using rule 85
	'readFloat'    reduce using rule 85
	'readInt'      reduce using rule 85
	'readString'   reduce using rule 85
	'repeat'       reduce using rule 85
	'return'       reduce using rule 85
	'until'        reduce using rule 85
	'while'        reduce using rule 85
	'writeChar'    reduce using rule 85
	'writeFloat'   reduce using rule 85
	'writeInt'     reduce using rule 85
	'writeString'  reduce using rule 85
	L_LIdent       reduce using rule 85
	%eof           reduce using rule 85


State 238

	Stm -> Decl ';' .                                   (rule 84)

	'*'            reduce using rule 84
	'Bool'         reduce using rule 84
	'Char'         reduce using rule 84
	'Float'        reduce using rule 84
	'Int'          reduce using rule 84
	'String'       reduce using rule 84
	'Void'         reduce using rule 84
	'break'        reduce using rule 84
	'do'           reduce using rule 84
	'else'         reduce using rule 84
	'elseif'       reduce using rule 84
	'end'          reduce using rule 84
	'for'          reduce using rule 84
	'if'           reduce using rule 84
	'local'        reduce using rule 84
	'readChar'     reduce using rule 84
	'readFloat'    reduce using rule 84
	'readInt'      reduce using rule 84
	'readString'   reduce using rule 84
	'repeat'       reduce using rule 84
	'return'       reduce using rule 84
	'until'        reduce using rule 84
	'while'        reduce using rule 84
	'writeChar'    reduce using rule 84
	'writeFloat'   reduce using rule 84
	'writeInt'     reduce using rule 84
	'writeString'  reduce using rule 84
	L_LIdent       reduce using rule 84
	%eof           reduce using rule 84


State 239

	EBlk -> 'do' Block . 'end'                          (rule 95)

	'end'          shift, and enter state 334


State 240

	VarInit -> '=' Array .                              (rule 99)

	';'            reduce using rule 99
	%eof           reduce using rule 99


State 241

	VarInit -> '=' RExp .                               (rule 98)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	';'            reduce using rule 98
	'or'           shift, and enter state 258
	%eof           reduce using rule 98


State 242

	ListVType -> VType ',' . ListVType                  (rule 109)

	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96

	Char           goto state 176
	Double         goto state 177
	Integer        goto state 178
	String         goto state 179
	Boolean        goto state 180
	PtrVoid        goto state 181
	VType          goto state 182
	ListVType      goto state 333

State 243

	Array -> '{' ListVType . '}'                        (rule 101)

	'}'            shift, and enter state 332


State 244

	Array -> '{' ListArray . '}'                        (rule 100)

	'}'            shift, and enter state 331


State 245

	ListArray -> Array ',' . ListArray                  (rule 111)

	'{'            shift, and enter state 175

	Array          goto state 173
	ListArray      goto state 330

State 246

	Local -> 'local' Decl .                             (rule 112)

	';'            reduce using rule 112
	%eof           reduce using rule 112


State 247

	Ass -> LExp '=' . RExp                              (rule 113)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 329
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 248

	Func -> LIdent '(' . ListRExp ')'                   (rule 116)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	')'            reduce using rule 141
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	ListRExp       goto state 328
	LExp           goto state 70
	RExp           goto state 143
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 249

	While -> 'while' RExp . EBlk                        (rule 125)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	'do'           shift, and enter state 191
	'or'           shift, and enter state 258

	EBlk           goto state 327

State 250

	Repeat -> 'repeat' Block . 'until' RExp             (rule 126)

	'until'        shift, and enter state 326


State 251

	For -> 'for' LIdent . '=' RExp ',' RExp Increment EBlk    (rule 127)
	For -> 'for' LIdent . 'in' LIdent EBlk              (rule 128)

	'='            shift, and enter state 324
	'in'           shift, and enter state 325


State 252

	Increment -> ',' RExp .                             (rule 130)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	'do'           reduce using rule 130
	'or'           shift, and enter state 258
	%eof           reduce using rule 130


State 253

	If -> 'if' RExp . 'then' Block ListElseIf Else 'end'    (rule 131)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	'or'           shift, and enter state 258
	'then'         shift, and enter state 323


State 254

	Else -> 'else' Block .                              (rule 132)

	'end'          reduce using rule 132
	%eof           reduce using rule 132


State 255

	ElseIf -> 'elseif' RExp . 'then' Block              (rule 134)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	'or'           shift, and enter state 258
	'then'         shift, and enter state 322


State 256

	ListElseIf -> ListElseIf ElseIf .                   (rule 136)

	'else'         reduce using rule 136
	'elseif'       reduce using rule 136
	'end'          reduce using rule 136
	%eof           reduce using rule 136


State 257

	Return -> 'return' RValue .                         (rule 137)

	';'            reduce using rule 137
	%eof           reduce using rule 137


State 258

	RExp -> RExp 'or' . RExp1                           (rule 162)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 321
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 259

	ListRExp -> RExp ',' . ListRExp                     (rule 143)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	')'            reduce using rule 141
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97
	%eof           reduce using rule 141

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	ListRExp       goto state 320
	LExp           goto state 70
	RExp           goto state 143
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 260

	FuncD -> CompoundType 'function' . LIdent '(' ListParamF ')' Block 'end'    (rule 144)

	L_LIdent       shift, and enter state 97

	LIdent         goto state 319

State 261

	ParamF -> Modality BasicType . LExp                 (rule 145)

	'*'            shift, and enter state 81
	L_LIdent       shift, and enter state 97

	LIdent         goto state 105
	LExp           goto state 318

State 262

	ListParamF -> ParamF ',' . ListParamF               (rule 148)

	')'            reduce using rule 146
	'Bool'         reduce using rule 149
	'Char'         reduce using rule 149
	'Float'        reduce using rule 149
	'Int'          reduce using rule 149
	'String'       reduce using rule 149
	'Void'         reduce using rule 149
	'const'        shift, and enter state 122
	'name'         shift, and enter state 123
	'ref'          shift, and enter state 124
	'res'          shift, and enter state 125
	'val'          shift, and enter state 126
	'valres'       shift, and enter state 127
	%eof           reduce using rule 146

	ParamF         goto state 128
	ListParamF     goto state 317
	Modality       goto state 130

State 263

	ListDim -> Dim ListDim .                            (rule 160)

	'%'            reduce using rule 160
	')'            reduce using rule 160
	'*'            reduce using rule 160
	'+'            reduce using rule 160
	','            reduce using rule 160
	'-'            reduce using rule 160
	'..'           reduce using rule 160
	'/'            reduce using rule 160
	';'            reduce using rule 160
	'<'            reduce using rule 160
	'<='           reduce using rule 160
	'='            reduce using rule 160
	'=='           reduce using rule 160
	'>'            reduce using rule 160
	'>='           reduce using rule 160
	']'            reduce using rule 160
	'^'            reduce using rule 160
	'and'          reduce using rule 160
	'do'           reduce using rule 160
	'or'           reduce using rule 160
	'then'         reduce using rule 160
	'~='           reduce using rule 160
	%eof           reduce using rule 160


State 264

	Dim -> '[' RExp . ']'                               (rule 161)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	']'            shift, and enter state 316
	'or'           shift, and enter state 258


State 265

	RExp -> RExp1 'and' . RExp2                         (rule 163)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp2          goto state 315
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 266

	RExp3 -> RExp3 '<' . RExp5                          (rule 169)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 314
	RExp12         goto state 78

State 267

	RExp3 -> RExp3 '<=' . RExp5                         (rule 170)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 313
	RExp12         goto state 78

State 268

	RExp3 -> RExp3 '==' . RExp5                         (rule 167)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 312
	RExp12         goto state 78

State 269

	RExp3 -> RExp3 '>' . RExp5                          (rule 171)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 311
	RExp12         goto state 78

State 270

	RExp3 -> RExp3 '>=' . RExp5                         (rule 172)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 310
	RExp12         goto state 78

State 271

	RExp3 -> RExp3 '~=' . RExp5                         (rule 168)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp5          goto state 309
	RExp12         goto state 78

State 272

	RExp6 -> RExp6 '+' . RExp7                          (rule 174)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp7          goto state 308
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 273

	RExp6 -> RExp6 '-' . RExp7                          (rule 175)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp7          goto state 307
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 274

	RExp7 -> RExp7 '%' . RExp8                          (rule 179)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp8          goto state 306
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 275

	RExp7 -> RExp7 '*' . RExp8                          (rule 177)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp8          goto state 305
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 276

	RExp7 -> RExp7 '/' . RExp8                          (rule 178)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp8          goto state 304
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 277

	RExp10 -> RExp10 '..' . RExp11                      (rule 186)

	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'true'         shift, and enter state 89
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 105
	Boolean        goto state 65
	PtrVoid        goto state 66
	LExp           goto state 70
	RExp11         goto state 303
	RExp12         goto state 78

State 278

	LExp -> LIdent ListDim .                            (rule 158)

	'%'            reduce using rule 158
	')'            reduce using rule 158
	'*'            reduce using rule 158
	'+'            reduce using rule 158
	','            reduce using rule 158
	'-'            reduce using rule 158
	'..'           reduce using rule 158
	'/'            reduce using rule 158
	';'            reduce using rule 158
	'<'            reduce using rule 158
	'<='           reduce using rule 158
	'='            reduce using rule 158
	'=='           reduce using rule 158
	'>'            reduce using rule 158
	'>='           reduce using rule 158
	']'            reduce using rule 158
	'^'            reduce using rule 158
	'and'          reduce using rule 158
	'do'           reduce using rule 158
	'or'           reduce using rule 158
	'then'         reduce using rule 158
	'~='           reduce using rule 158
	%eof           reduce using rule 158


State 279

	RExp2 -> 'not' RExp3 .                              (rule 165)
	RExp3 -> RExp3 . '==' RExp5                         (rule 167)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 168)
	RExp3 -> RExp3 . '<' RExp5                          (rule 169)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 170)
	RExp3 -> RExp3 . '>' RExp5                          (rule 171)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 172)

	')'            reduce using rule 165
	','            reduce using rule 165
	';'            reduce using rule 165
	'<'            shift, and enter state 266
	'<='           shift, and enter state 267
	'=='           shift, and enter state 268
	'>'            shift, and enter state 269
	'>='           shift, and enter state 270
	']'            reduce using rule 165
	'and'          reduce using rule 165
	'do'           reduce using rule 165
	'or'           reduce using rule 165
	'then'         reduce using rule 165
	'~='           shift, and enter state 271
	%eof           reduce using rule 165


State 280

	FuncWrite -> 'writeString' '(' . RExp ')'           (rule 120)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 302
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 281

	FuncWrite -> 'writeInt' '(' . RExp ')'              (rule 117)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 301
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 282

	FuncWrite -> 'writeFloat' '(' . RExp ')'            (rule 118)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 300
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 283

	FuncWrite -> 'writeChar' '(' . RExp ')'             (rule 119)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 299
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 284

	FuncRead -> 'readString' '(' . ')'                  (rule 124)

	')'            shift, and enter state 298


State 285

	FuncRead -> 'readInt' '(' . ')'                     (rule 121)

	')'            shift, and enter state 297


State 286

	FuncRead -> 'readFloat' '(' . ')'                   (rule 122)

	')'            shift, and enter state 296


State 287

	FuncRead -> 'readChar' '(' . ')'                    (rule 123)

	')'            shift, and enter state 295


State 288

	RExp9 -> '-' RExp10 .                               (rule 183)
	RExp10 -> RExp10 . '..' RExp11                      (rule 186)

	'%'            reduce using rule 183
	')'            reduce using rule 183
	'*'            reduce using rule 183
	'+'            reduce using rule 183
	','            reduce using rule 183
	'-'            reduce using rule 183
	'..'           shift, and enter state 277
	'/'            reduce using rule 183
	';'            reduce using rule 183
	'<'            reduce using rule 183
	'<='           reduce using rule 183
	'=='           reduce using rule 183
	'>'            reduce using rule 183
	'>='           reduce using rule 183
	']'            reduce using rule 183
	'^'            reduce using rule 183
	'and'          reduce using rule 183
	'do'           reduce using rule 183
	'or'           reduce using rule 183
	'then'         reduce using rule 183
	'~='           reduce using rule 183
	%eof           reduce using rule 183


State 289

	RExp11 -> '&' LExp .                                (rule 191)

	'%'            reduce using rule 191
	')'            reduce using rule 191
	'*'            reduce using rule 191
	'+'            reduce using rule 191
	','            reduce using rule 191
	'-'            reduce using rule 191
	'..'           reduce using rule 191
	'/'            reduce using rule 191
	';'            reduce using rule 191
	'<'            reduce using rule 191
	'<='           reduce using rule 191
	'=='           reduce using rule 191
	'>'            reduce using rule 191
	'>='           reduce using rule 191
	']'            reduce using rule 191
	'^'            reduce using rule 191
	'and'          reduce using rule 191
	'do'           reduce using rule 191
	'or'           reduce using rule 191
	'then'         reduce using rule 191
	'~='           reduce using rule 191
	%eof           reduce using rule 191


State 290

	RExp10 -> '#' RExp11 .                              (rule 187)

	'%'            reduce using rule 187
	')'            reduce using rule 187
	'*'            reduce using rule 187
	'+'            reduce using rule 187
	','            reduce using rule 187
	'-'            reduce using rule 187
	'..'           reduce using rule 187
	'/'            reduce using rule 187
	';'            reduce using rule 187
	'<'            reduce using rule 187
	'<='           reduce using rule 187
	'=='           reduce using rule 187
	'>'            reduce using rule 187
	'>='           reduce using rule 187
	']'            reduce using rule 187
	'^'            reduce using rule 187
	'and'          reduce using rule 187
	'do'           reduce using rule 187
	'or'           reduce using rule 187
	'then'         reduce using rule 187
	'~='           reduce using rule 187
	%eof           reduce using rule 187


State 291

	RExp8 -> RExp9 '^' . RExp8                          (rule 181)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp8          goto state 294
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp12         goto state 78

State 292

	RExp -> RExp . 'or' RExp1                           (rule 162)
	RExp12 -> '(' RExp . ')'                            (rule 201)

	')'            shift, and enter state 293
	'or'           shift, and enter state 258


State 293

	RExp12 -> '(' RExp ')' .                            (rule 201)

	'%'            reduce using rule 201
	')'            reduce using rule 201
	'*'            reduce using rule 201
	'+'            reduce using rule 201
	','            reduce using rule 201
	'-'            reduce using rule 201
	'..'           reduce using rule 201
	'/'            reduce using rule 201
	';'            reduce using rule 201
	'<'            reduce using rule 201
	'<='           reduce using rule 201
	'=='           reduce using rule 201
	'>'            reduce using rule 201
	'>='           reduce using rule 201
	']'            reduce using rule 201
	'^'            reduce using rule 201
	'and'          reduce using rule 201
	'do'           reduce using rule 201
	'or'           reduce using rule 201
	'then'         reduce using rule 201
	'~='           reduce using rule 201
	%eof           reduce using rule 201


State 294

	RExp8 -> RExp9 '^' RExp8 .                          (rule 181)

	'%'            reduce using rule 181
	')'            reduce using rule 181
	'*'            reduce using rule 181
	'+'            reduce using rule 181
	','            reduce using rule 181
	'-'            reduce using rule 181
	'/'            reduce using rule 181
	';'            reduce using rule 181
	'<'            reduce using rule 181
	'<='           reduce using rule 181
	'=='           reduce using rule 181
	'>'            reduce using rule 181
	'>='           reduce using rule 181
	']'            reduce using rule 181
	'and'          reduce using rule 181
	'do'           reduce using rule 181
	'or'           reduce using rule 181
	'then'         reduce using rule 181
	'~='           reduce using rule 181
	%eof           reduce using rule 181


State 295

	FuncRead -> 'readChar' '(' ')' .                    (rule 123)

	'%'            reduce using rule 123
	')'            reduce using rule 123
	'*'            reduce using rule 123
	'+'            reduce using rule 123
	','            reduce using rule 123
	'-'            reduce using rule 123
	'..'           reduce using rule 123
	'/'            reduce using rule 123
	';'            reduce using rule 123
	'<'            reduce using rule 123
	'<='           reduce using rule 123
	'=='           reduce using rule 123
	'>'            reduce using rule 123
	'>='           reduce using rule 123
	']'            reduce using rule 123
	'^'            reduce using rule 123
	'and'          reduce using rule 123
	'do'           reduce using rule 123
	'or'           reduce using rule 123
	'then'         reduce using rule 123
	'~='           reduce using rule 123
	%eof           reduce using rule 123


State 296

	FuncRead -> 'readFloat' '(' ')' .                   (rule 122)

	'%'            reduce using rule 122
	')'            reduce using rule 122
	'*'            reduce using rule 122
	'+'            reduce using rule 122
	','            reduce using rule 122
	'-'            reduce using rule 122
	'..'           reduce using rule 122
	'/'            reduce using rule 122
	';'            reduce using rule 122
	'<'            reduce using rule 122
	'<='           reduce using rule 122
	'=='           reduce using rule 122
	'>'            reduce using rule 122
	'>='           reduce using rule 122
	']'            reduce using rule 122
	'^'            reduce using rule 122
	'and'          reduce using rule 122
	'do'           reduce using rule 122
	'or'           reduce using rule 122
	'then'         reduce using rule 122
	'~='           reduce using rule 122
	%eof           reduce using rule 122


State 297

	FuncRead -> 'readInt' '(' ')' .                     (rule 121)

	'%'            reduce using rule 121
	')'            reduce using rule 121
	'*'            reduce using rule 121
	'+'            reduce using rule 121
	','            reduce using rule 121
	'-'            reduce using rule 121
	'..'           reduce using rule 121
	'/'            reduce using rule 121
	';'            reduce using rule 121
	'<'            reduce using rule 121
	'<='           reduce using rule 121
	'=='           reduce using rule 121
	'>'            reduce using rule 121
	'>='           reduce using rule 121
	']'            reduce using rule 121
	'^'            reduce using rule 121
	'and'          reduce using rule 121
	'do'           reduce using rule 121
	'or'           reduce using rule 121
	'then'         reduce using rule 121
	'~='           reduce using rule 121
	%eof           reduce using rule 121


State 298

	FuncRead -> 'readString' '(' ')' .                  (rule 124)

	'%'            reduce using rule 124
	')'            reduce using rule 124
	'*'            reduce using rule 124
	'+'            reduce using rule 124
	','            reduce using rule 124
	'-'            reduce using rule 124
	'..'           reduce using rule 124
	'/'            reduce using rule 124
	';'            reduce using rule 124
	'<'            reduce using rule 124
	'<='           reduce using rule 124
	'=='           reduce using rule 124
	'>'            reduce using rule 124
	'>='           reduce using rule 124
	']'            reduce using rule 124
	'^'            reduce using rule 124
	'and'          reduce using rule 124
	'do'           reduce using rule 124
	'or'           reduce using rule 124
	'then'         reduce using rule 124
	'~='           reduce using rule 124
	%eof           reduce using rule 124


State 299

	FuncWrite -> 'writeChar' '(' RExp . ')'             (rule 119)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	')'            shift, and enter state 346
	'or'           shift, and enter state 258


State 300

	FuncWrite -> 'writeFloat' '(' RExp . ')'            (rule 118)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	')'            shift, and enter state 345
	'or'           shift, and enter state 258


State 301

	FuncWrite -> 'writeInt' '(' RExp . ')'              (rule 117)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	')'            shift, and enter state 344
	'or'           shift, and enter state 258


State 302

	FuncWrite -> 'writeString' '(' RExp . ')'           (rule 120)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	')'            shift, and enter state 343
	'or'           shift, and enter state 258


State 303

	RExp10 -> RExp10 '..' RExp11 .                      (rule 186)

	'%'            reduce using rule 186
	')'            reduce using rule 186
	'*'            reduce using rule 186
	'+'            reduce using rule 186
	','            reduce using rule 186
	'-'            reduce using rule 186
	'..'           reduce using rule 186
	'/'            reduce using rule 186
	';'            reduce using rule 186
	'<'            reduce using rule 186
	'<='           reduce using rule 186
	'=='           reduce using rule 186
	'>'            reduce using rule 186
	'>='           reduce using rule 186
	']'            reduce using rule 186
	'^'            reduce using rule 186
	'and'          reduce using rule 186
	'do'           reduce using rule 186
	'or'           reduce using rule 186
	'then'         reduce using rule 186
	'~='           reduce using rule 186
	%eof           reduce using rule 186


State 304

	RExp7 -> RExp7 '/' RExp8 .                          (rule 178)

	'%'            reduce using rule 178
	')'            reduce using rule 178
	'*'            reduce using rule 178
	'+'            reduce using rule 178
	','            reduce using rule 178
	'-'            reduce using rule 178
	'/'            reduce using rule 178
	';'            reduce using rule 178
	'<'            reduce using rule 178
	'<='           reduce using rule 178
	'=='           reduce using rule 178
	'>'            reduce using rule 178
	'>='           reduce using rule 178
	']'            reduce using rule 178
	'and'          reduce using rule 178
	'do'           reduce using rule 178
	'or'           reduce using rule 178
	'then'         reduce using rule 178
	'~='           reduce using rule 178
	%eof           reduce using rule 178


State 305

	RExp7 -> RExp7 '*' RExp8 .                          (rule 177)

	'%'            reduce using rule 177
	')'            reduce using rule 177
	'*'            reduce using rule 177
	'+'            reduce using rule 177
	','            reduce using rule 177
	'-'            reduce using rule 177
	'/'            reduce using rule 177
	';'            reduce using rule 177
	'<'            reduce using rule 177
	'<='           reduce using rule 177
	'=='           reduce using rule 177
	'>'            reduce using rule 177
	'>='           reduce using rule 177
	']'            reduce using rule 177
	'and'          reduce using rule 177
	'do'           reduce using rule 177
	'or'           reduce using rule 177
	'then'         reduce using rule 177
	'~='           reduce using rule 177
	%eof           reduce using rule 177


State 306

	RExp7 -> RExp7 '%' RExp8 .                          (rule 179)

	'%'            reduce using rule 179
	')'            reduce using rule 179
	'*'            reduce using rule 179
	'+'            reduce using rule 179
	','            reduce using rule 179
	'-'            reduce using rule 179
	'/'            reduce using rule 179
	';'            reduce using rule 179
	'<'            reduce using rule 179
	'<='           reduce using rule 179
	'=='           reduce using rule 179
	'>'            reduce using rule 179
	'>='           reduce using rule 179
	']'            reduce using rule 179
	'and'          reduce using rule 179
	'do'           reduce using rule 179
	'or'           reduce using rule 179
	'then'         reduce using rule 179
	'~='           reduce using rule 179
	%eof           reduce using rule 179


State 307

	RExp6 -> RExp6 '-' RExp7 .                          (rule 175)
	RExp7 -> RExp7 . '*' RExp8                          (rule 177)
	RExp7 -> RExp7 . '/' RExp8                          (rule 178)
	RExp7 -> RExp7 . '%' RExp8                          (rule 179)

	'%'            shift, and enter state 274
	')'            reduce using rule 175
	'*'            shift, and enter state 275
	'+'            reduce using rule 175
	','            reduce using rule 175
	'-'            reduce using rule 175
	'/'            shift, and enter state 276
	';'            reduce using rule 175
	'<'            reduce using rule 175
	'<='           reduce using rule 175
	'=='           reduce using rule 175
	'>'            reduce using rule 175
	'>='           reduce using rule 175
	']'            reduce using rule 175
	'and'          reduce using rule 175
	'do'           reduce using rule 175
	'or'           reduce using rule 175
	'then'         reduce using rule 175
	'~='           reduce using rule 175
	%eof           reduce using rule 175


State 308

	RExp6 -> RExp6 '+' RExp7 .                          (rule 174)
	RExp7 -> RExp7 . '*' RExp8                          (rule 177)
	RExp7 -> RExp7 . '/' RExp8                          (rule 178)
	RExp7 -> RExp7 . '%' RExp8                          (rule 179)

	'%'            shift, and enter state 274
	')'            reduce using rule 174
	'*'            shift, and enter state 275
	'+'            reduce using rule 174
	','            reduce using rule 174
	'-'            reduce using rule 174
	'/'            shift, and enter state 276
	';'            reduce using rule 174
	'<'            reduce using rule 174
	'<='           reduce using rule 174
	'=='           reduce using rule 174
	'>'            reduce using rule 174
	'>='           reduce using rule 174
	']'            reduce using rule 174
	'and'          reduce using rule 174
	'do'           reduce using rule 174
	'or'           reduce using rule 174
	'then'         reduce using rule 174
	'~='           reduce using rule 174
	%eof           reduce using rule 174


State 309

	RExp3 -> RExp3 '~=' RExp5 .                         (rule 168)

	')'            reduce using rule 168
	','            reduce using rule 168
	';'            reduce using rule 168
	'<'            reduce using rule 168
	'<='           reduce using rule 168
	'=='           reduce using rule 168
	'>'            reduce using rule 168
	'>='           reduce using rule 168
	']'            reduce using rule 168
	'and'          reduce using rule 168
	'do'           reduce using rule 168
	'or'           reduce using rule 168
	'then'         reduce using rule 168
	'~='           reduce using rule 168
	%eof           reduce using rule 168


State 310

	RExp3 -> RExp3 '>=' RExp5 .                         (rule 172)

	')'            reduce using rule 172
	','            reduce using rule 172
	';'            reduce using rule 172
	'<'            reduce using rule 172
	'<='           reduce using rule 172
	'=='           reduce using rule 172
	'>'            reduce using rule 172
	'>='           reduce using rule 172
	']'            reduce using rule 172
	'and'          reduce using rule 172
	'do'           reduce using rule 172
	'or'           reduce using rule 172
	'then'         reduce using rule 172
	'~='           reduce using rule 172
	%eof           reduce using rule 172


State 311

	RExp3 -> RExp3 '>' RExp5 .                          (rule 171)

	')'            reduce using rule 171
	','            reduce using rule 171
	';'            reduce using rule 171
	'<'            reduce using rule 171
	'<='           reduce using rule 171
	'=='           reduce using rule 171
	'>'            reduce using rule 171
	'>='           reduce using rule 171
	']'            reduce using rule 171
	'and'          reduce using rule 171
	'do'           reduce using rule 171
	'or'           reduce using rule 171
	'then'         reduce using rule 171
	'~='           reduce using rule 171
	%eof           reduce using rule 171


State 312

	RExp3 -> RExp3 '==' RExp5 .                         (rule 167)

	')'            reduce using rule 167
	','            reduce using rule 167
	';'            reduce using rule 167
	'<'            reduce using rule 167
	'<='           reduce using rule 167
	'=='           reduce using rule 167
	'>'            reduce using rule 167
	'>='           reduce using rule 167
	']'            reduce using rule 167
	'and'          reduce using rule 167
	'do'           reduce using rule 167
	'or'           reduce using rule 167
	'then'         reduce using rule 167
	'~='           reduce using rule 167
	%eof           reduce using rule 167


State 313

	RExp3 -> RExp3 '<=' RExp5 .                         (rule 170)

	')'            reduce using rule 170
	','            reduce using rule 170
	';'            reduce using rule 170
	'<'            reduce using rule 170
	'<='           reduce using rule 170
	'=='           reduce using rule 170
	'>'            reduce using rule 170
	'>='           reduce using rule 170
	']'            reduce using rule 170
	'and'          reduce using rule 170
	'do'           reduce using rule 170
	'or'           reduce using rule 170
	'then'         reduce using rule 170
	'~='           reduce using rule 170
	%eof           reduce using rule 170


State 314

	RExp3 -> RExp3 '<' RExp5 .                          (rule 169)

	')'            reduce using rule 169
	','            reduce using rule 169
	';'            reduce using rule 169
	'<'            reduce using rule 169
	'<='           reduce using rule 169
	'=='           reduce using rule 169
	'>'            reduce using rule 169
	'>='           reduce using rule 169
	']'            reduce using rule 169
	'and'          reduce using rule 169
	'do'           reduce using rule 169
	'or'           reduce using rule 169
	'then'         reduce using rule 169
	'~='           reduce using rule 169
	%eof           reduce using rule 169


State 315

	RExp -> RExp1 'and' RExp2 .                         (rule 163)

	')'            reduce using rule 163
	','            reduce using rule 163
	';'            reduce using rule 163
	']'            reduce using rule 163
	'do'           reduce using rule 163
	'or'           reduce using rule 163
	'then'         reduce using rule 163
	%eof           reduce using rule 163


State 316

	Dim -> '[' RExp ']' .                               (rule 161)

	'%'            reduce using rule 161
	')'            reduce using rule 161
	'*'            reduce using rule 161
	'+'            reduce using rule 161
	','            reduce using rule 161
	'-'            reduce using rule 161
	'..'           reduce using rule 161
	'/'            reduce using rule 161
	';'            reduce using rule 161
	'<'            reduce using rule 161
	'<='           reduce using rule 161
	'='            reduce using rule 161
	'=='           reduce using rule 161
	'>'            reduce using rule 161
	'>='           reduce using rule 161
	'['            reduce using rule 161
	']'            reduce using rule 161
	'^'            reduce using rule 161
	'and'          reduce using rule 161
	'do'           reduce using rule 161
	'or'           reduce using rule 161
	'then'         reduce using rule 161
	'~='           reduce using rule 161
	%eof           reduce using rule 161


State 317

	ListParamF -> ParamF ',' ListParamF .               (rule 148)

	')'            reduce using rule 148
	%eof           reduce using rule 148


State 318

	ParamF -> Modality BasicType LExp .                 (rule 145)

	')'            reduce using rule 145
	','            reduce using rule 145
	%eof           reduce using rule 145


State 319

	FuncD -> CompoundType 'function' LIdent . '(' ListParamF ')' Block 'end'    (rule 144)

	'('            shift, and enter state 342


State 320

	ListRExp -> RExp ',' ListRExp .                     (rule 143)

	')'            reduce using rule 143
	%eof           reduce using rule 143


State 321

	RExp -> RExp 'or' RExp1 .                           (rule 162)

	')'            reduce using rule 162
	','            reduce using rule 162
	';'            reduce using rule 162
	']'            reduce using rule 162
	'do'           reduce using rule 162
	'or'           reduce using rule 162
	'then'         reduce using rule 162
	%eof           reduce using rule 162


State 322

	ElseIf -> 'elseif' RExp 'then' . Block              (rule 134)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'else'         reduce using rule 67
	'elseif'       reduce using rule 67
	'end'          reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67
	%eof           reduce using rule 67

	Block          goto state 341
	ListStm        goto state 214

State 323

	If -> 'if' RExp 'then' . Block ListElseIf Else 'end'    (rule 131)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'else'         reduce using rule 67
	'elseif'       reduce using rule 67
	'end'          reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67

	Block          goto state 340
	ListStm        goto state 214

State 324

	For -> 'for' LIdent '=' . RExp ',' RExp Increment EBlk    (rule 127)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 339
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 325

	For -> 'for' LIdent 'in' . LIdent EBlk              (rule 128)

	L_LIdent       shift, and enter state 97

	LIdent         goto state 338

State 326

	Repeat -> 'repeat' Block 'until' . RExp             (rule 126)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 337
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 327

	While -> 'while' RExp EBlk .                        (rule 125)

	'*'            reduce using rule 125
	'Bool'         reduce using rule 125
	'Char'         reduce using rule 125
	'Float'        reduce using rule 125
	'Int'          reduce using rule 125
	'String'       reduce using rule 125
	'Void'         reduce using rule 125
	'break'        reduce using rule 125
	'do'           reduce using rule 125
	'else'         reduce using rule 125
	'elseif'       reduce using rule 125
	'end'          reduce using rule 125
	'for'          reduce using rule 125
	'if'           reduce using rule 125
	'local'        reduce using rule 125
	'readChar'     reduce using rule 125
	'readFloat'    reduce using rule 125
	'readInt'      reduce using rule 125
	'readString'   reduce using rule 125
	'repeat'       reduce using rule 125
	'return'       reduce using rule 125
	'until'        reduce using rule 125
	'while'        reduce using rule 125
	'writeChar'    reduce using rule 125
	'writeFloat'   reduce using rule 125
	'writeInt'     reduce using rule 125
	'writeString'  reduce using rule 125
	L_LIdent       reduce using rule 125
	%eof           reduce using rule 125


State 328

	Func -> LIdent '(' ListRExp . ')'                   (rule 116)

	')'            shift, and enter state 336


State 329

	Ass -> LExp '=' RExp .                              (rule 113)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	';'            reduce using rule 113
	'or'           shift, and enter state 258
	%eof           reduce using rule 113


State 330

	ListArray -> Array ',' ListArray .                  (rule 111)

	'}'            reduce using rule 111
	%eof           reduce using rule 111


State 331

	Array -> '{' ListArray '}' .                        (rule 100)

	','            reduce using rule 100
	';'            reduce using rule 100
	'}'            reduce using rule 100
	%eof           reduce using rule 100


State 332

	Array -> '{' ListVType '}' .                        (rule 101)

	','            reduce using rule 101
	';'            reduce using rule 101
	'}'            reduce using rule 101
	%eof           reduce using rule 101


State 333

	ListVType -> VType ',' ListVType .                  (rule 109)

	'}'            reduce using rule 109
	%eof           reduce using rule 109


State 334

	EBlk -> 'do' Block 'end' .                          (rule 95)

	'*'            reduce using rule 95
	'Bool'         reduce using rule 95
	'Char'         reduce using rule 95
	'Float'        reduce using rule 95
	'Int'          reduce using rule 95
	'String'       reduce using rule 95
	'Void'         reduce using rule 95
	'break'        reduce using rule 95
	'do'           reduce using rule 95
	'else'         reduce using rule 95
	'elseif'       reduce using rule 95
	'end'          reduce using rule 95
	'for'          reduce using rule 95
	'if'           reduce using rule 95
	'local'        reduce using rule 95
	'readChar'     reduce using rule 95
	'readFloat'    reduce using rule 95
	'readInt'      reduce using rule 95
	'readString'   reduce using rule 95
	'repeat'       reduce using rule 95
	'return'       reduce using rule 95
	'until'        reduce using rule 95
	'while'        reduce using rule 95
	'writeChar'    reduce using rule 95
	'writeFloat'   reduce using rule 95
	'writeInt'     reduce using rule 95
	'writeString'  reduce using rule 95
	L_LIdent       reduce using rule 95
	%eof           reduce using rule 95


State 335

	Decl -> BasicType LExp VarInit .                    (rule 96)

	';'            reduce using rule 96
	%eof           reduce using rule 96


State 336

	Func -> LIdent '(' ListRExp ')' .                   (rule 116)

	'%'            reduce using rule 116
	')'            reduce using rule 116
	'*'            reduce using rule 116
	'+'            reduce using rule 116
	','            reduce using rule 116
	'-'            reduce using rule 116
	'..'           reduce using rule 116
	'/'            reduce using rule 116
	';'            reduce using rule 116
	'<'            reduce using rule 116
	'<='           reduce using rule 116
	'=='           reduce using rule 116
	'>'            reduce using rule 116
	'>='           reduce using rule 116
	']'            reduce using rule 116
	'^'            reduce using rule 116
	'and'          reduce using rule 116
	'do'           reduce using rule 116
	'or'           reduce using rule 116
	'then'         reduce using rule 116
	'~='           reduce using rule 116
	%eof           reduce using rule 116


State 337

	Repeat -> 'repeat' Block 'until' RExp .             (rule 126)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	';'            reduce using rule 126
	'or'           shift, and enter state 258
	%eof           reduce using rule 126


State 338

	For -> 'for' LIdent 'in' LIdent . EBlk              (rule 128)

	'do'           shift, and enter state 191

	EBlk           goto state 350

State 339

	For -> 'for' LIdent '=' RExp . ',' RExp Increment EBlk    (rule 127)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	','            shift, and enter state 349
	'or'           shift, and enter state 258


State 340

	If -> 'if' RExp 'then' Block . ListElseIf Else 'end'    (rule 131)

	'else'         reduce using rule 135
	'elseif'       reduce using rule 135
	'end'          reduce using rule 135

	ListElseIf     goto state 348

State 341

	ElseIf -> 'elseif' RExp 'then' Block .              (rule 134)

	'else'         reduce using rule 134
	'elseif'       reduce using rule 134
	'end'          reduce using rule 134
	%eof           reduce using rule 134


State 342

	FuncD -> CompoundType 'function' LIdent '(' . ListParamF ')' Block 'end'    (rule 144)

	')'            reduce using rule 146
	'Bool'         reduce using rule 149
	'Char'         reduce using rule 149
	'Float'        reduce using rule 149
	'Int'          reduce using rule 149
	'String'       reduce using rule 149
	'Void'         reduce using rule 149
	'const'        shift, and enter state 122
	'name'         shift, and enter state 123
	'ref'          shift, and enter state 124
	'res'          shift, and enter state 125
	'val'          shift, and enter state 126
	'valres'       shift, and enter state 127

	ParamF         goto state 128
	ListParamF     goto state 347
	Modality       goto state 130

State 343

	FuncWrite -> 'writeString' '(' RExp ')' .           (rule 120)

	'%'            reduce using rule 120
	')'            reduce using rule 120
	'*'            reduce using rule 120
	'+'            reduce using rule 120
	','            reduce using rule 120
	'-'            reduce using rule 120
	'..'           reduce using rule 120
	'/'            reduce using rule 120
	';'            reduce using rule 120
	'<'            reduce using rule 120
	'<='           reduce using rule 120
	'=='           reduce using rule 120
	'>'            reduce using rule 120
	'>='           reduce using rule 120
	']'            reduce using rule 120
	'^'            reduce using rule 120
	'and'          reduce using rule 120
	'do'           reduce using rule 120
	'or'           reduce using rule 120
	'then'         reduce using rule 120
	'~='           reduce using rule 120
	%eof           reduce using rule 120


State 344

	FuncWrite -> 'writeInt' '(' RExp ')' .              (rule 117)

	'%'            reduce using rule 117
	')'            reduce using rule 117
	'*'            reduce using rule 117
	'+'            reduce using rule 117
	','            reduce using rule 117
	'-'            reduce using rule 117
	'..'           reduce using rule 117
	'/'            reduce using rule 117
	';'            reduce using rule 117
	'<'            reduce using rule 117
	'<='           reduce using rule 117
	'=='           reduce using rule 117
	'>'            reduce using rule 117
	'>='           reduce using rule 117
	']'            reduce using rule 117
	'^'            reduce using rule 117
	'and'          reduce using rule 117
	'do'           reduce using rule 117
	'or'           reduce using rule 117
	'then'         reduce using rule 117
	'~='           reduce using rule 117
	%eof           reduce using rule 117


State 345

	FuncWrite -> 'writeFloat' '(' RExp ')' .            (rule 118)

	'%'            reduce using rule 118
	')'            reduce using rule 118
	'*'            reduce using rule 118
	'+'            reduce using rule 118
	','            reduce using rule 118
	'-'            reduce using rule 118
	'..'           reduce using rule 118
	'/'            reduce using rule 118
	';'            reduce using rule 118
	'<'            reduce using rule 118
	'<='           reduce using rule 118
	'=='           reduce using rule 118
	'>'            reduce using rule 118
	'>='           reduce using rule 118
	']'            reduce using rule 118
	'^'            reduce using rule 118
	'and'          reduce using rule 118
	'do'           reduce using rule 118
	'or'           reduce using rule 118
	'then'         reduce using rule 118
	'~='           reduce using rule 118
	%eof           reduce using rule 118


State 346

	FuncWrite -> 'writeChar' '(' RExp ')' .             (rule 119)

	'%'            reduce using rule 119
	')'            reduce using rule 119
	'*'            reduce using rule 119
	'+'            reduce using rule 119
	','            reduce using rule 119
	'-'            reduce using rule 119
	'..'           reduce using rule 119
	'/'            reduce using rule 119
	';'            reduce using rule 119
	'<'            reduce using rule 119
	'<='           reduce using rule 119
	'=='           reduce using rule 119
	'>'            reduce using rule 119
	'>='           reduce using rule 119
	']'            reduce using rule 119
	'^'            reduce using rule 119
	'and'          reduce using rule 119
	'do'           reduce using rule 119
	'or'           reduce using rule 119
	'then'         reduce using rule 119
	'~='           reduce using rule 119
	%eof           reduce using rule 119


State 347

	FuncD -> CompoundType 'function' LIdent '(' ListParamF . ')' Block 'end'    (rule 144)

	')'            shift, and enter state 353


State 348

	If -> 'if' RExp 'then' Block ListElseIf . Else 'end'    (rule 131)
	ListElseIf -> ListElseIf . ElseIf                   (rule 136)

	'else'         shift, and enter state 154
	'elseif'       shift, and enter state 152
	'end'          reduce using rule 133

	Else           goto state 352
	ElseIf         goto state 256

State 349

	For -> 'for' LIdent '=' RExp ',' . RExp Increment EBlk    (rule 127)

	'#'            shift, and enter state 79
	'&'            shift, and enter state 80
	'('            shift, and enter state 59
	'*'            shift, and enter state 81
	'-'            shift, and enter state 82
	'false'        shift, and enter state 83
	'nil'          shift, and enter state 84
	'not'          shift, and enter state 104
	'readChar'     shift, and enter state 85
	'readFloat'    shift, and enter state 86
	'readInt'      shift, and enter state 87
	'readString'   shift, and enter state 88
	'true'         shift, and enter state 89
	'writeChar'    shift, and enter state 90
	'writeFloat'   shift, and enter state 91
	'writeInt'     shift, and enter state 92
	'writeString'  shift, and enter state 93
	L_charac       shift, and enter state 57
	L_doubl        shift, and enter state 94
	L_integ        shift, and enter state 95
	L_quoted       shift, and enter state 96
	L_LIdent       shift, and enter state 97

	Char           goto state 60
	Double         goto state 61
	Integer        goto state 62
	String         goto state 63
	LIdent         goto state 64
	Boolean        goto state 65
	PtrVoid        goto state 66
	Func           goto state 67
	FuncWrite      goto state 68
	FuncRead       goto state 69
	LExp           goto state 70
	RExp           goto state 351
	RExp2          goto state 100
	RExp3          goto state 101
	RExp6          goto state 71
	RExp7          goto state 72
	RExp8          goto state 73
	RExp9          goto state 74
	RExp10         goto state 75
	RExp11         goto state 76
	RExp1          goto state 115
	RExp4          goto state 103
	RExp5          goto state 99
	RExp12         goto state 78

State 350

	For -> 'for' LIdent 'in' LIdent EBlk .              (rule 128)

	'*'            reduce using rule 128
	'Bool'         reduce using rule 128
	'Char'         reduce using rule 128
	'Float'        reduce using rule 128
	'Int'          reduce using rule 128
	'String'       reduce using rule 128
	'Void'         reduce using rule 128
	'break'        reduce using rule 128
	'do'           reduce using rule 128
	'else'         reduce using rule 128
	'elseif'       reduce using rule 128
	'end'          reduce using rule 128
	'for'          reduce using rule 128
	'if'           reduce using rule 128
	'local'        reduce using rule 128
	'readChar'     reduce using rule 128
	'readFloat'    reduce using rule 128
	'readInt'      reduce using rule 128
	'readString'   reduce using rule 128
	'repeat'       reduce using rule 128
	'return'       reduce using rule 128
	'until'        reduce using rule 128
	'while'        reduce using rule 128
	'writeChar'    reduce using rule 128
	'writeFloat'   reduce using rule 128
	'writeInt'     reduce using rule 128
	'writeString'  reduce using rule 128
	L_LIdent       reduce using rule 128
	%eof           reduce using rule 128


State 351

	For -> 'for' LIdent '=' RExp ',' RExp . Increment EBlk    (rule 127)
	RExp -> RExp . 'or' RExp1                           (rule 162)

	','            shift, and enter state 158
	'do'           reduce using rule 129
	'or'           shift, and enter state 258

	Increment      goto state 356

State 352

	If -> 'if' RExp 'then' Block ListElseIf Else . 'end'    (rule 131)

	'end'          shift, and enter state 355


State 353

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' . Block 'end'    (rule 144)

	'*'            reduce using rule 67
	'Bool'         reduce using rule 67
	'Char'         reduce using rule 67
	'Float'        reduce using rule 67
	'Int'          reduce using rule 67
	'String'       reduce using rule 67
	'Void'         reduce using rule 67
	'break'        reduce using rule 67
	'do'           reduce using rule 67
	'end'          reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'local'        reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'repeat'       reduce using rule 67
	'return'       reduce using rule 67
	'while'        reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	L_LIdent       reduce using rule 67

	Block          goto state 354
	ListStm        goto state 214

State 354

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block . 'end'    (rule 144)

	'end'          shift, and enter state 358


State 355

	If -> 'if' RExp 'then' Block ListElseIf Else 'end' .    (rule 131)

	'*'            reduce using rule 131
	'Bool'         reduce using rule 131
	'Char'         reduce using rule 131
	'Float'        reduce using rule 131
	'Int'          reduce using rule 131
	'String'       reduce using rule 131
	'Void'         reduce using rule 131
	'break'        reduce using rule 131
	'do'           reduce using rule 131
	'else'         reduce using rule 131
	'elseif'       reduce using rule 131
	'end'          reduce using rule 131
	'for'          reduce using rule 131
	'if'           reduce using rule 131
	'local'        reduce using rule 131
	'readChar'     reduce using rule 131
	'readFloat'    reduce using rule 131
	'readInt'      reduce using rule 131
	'readString'   reduce using rule 131
	'repeat'       reduce using rule 131
	'return'       reduce using rule 131
	'until'        reduce using rule 131
	'while'        reduce using rule 131
	'writeChar'    reduce using rule 131
	'writeFloat'   reduce using rule 131
	'writeInt'     reduce using rule 131
	'writeString'  reduce using rule 131
	L_LIdent       reduce using rule 131
	%eof           reduce using rule 131


State 356

	For -> 'for' LIdent '=' RExp ',' RExp Increment . EBlk    (rule 127)

	'do'           shift, and enter state 191

	EBlk           goto state 357

State 357

	For -> 'for' LIdent '=' RExp ',' RExp Increment EBlk .    (rule 127)

	'*'            reduce using rule 127
	'Bool'         reduce using rule 127
	'Char'         reduce using rule 127
	'Float'        reduce using rule 127
	'Int'          reduce using rule 127
	'String'       reduce using rule 127
	'Void'         reduce using rule 127
	'break'        reduce using rule 127
	'do'           reduce using rule 127
	'else'         reduce using rule 127
	'elseif'       reduce using rule 127
	'end'          reduce using rule 127
	'for'          reduce using rule 127
	'if'           reduce using rule 127
	'local'        reduce using rule 127
	'readChar'     reduce using rule 127
	'readFloat'    reduce using rule 127
	'readInt'      reduce using rule 127
	'readString'   reduce using rule 127
	'repeat'       reduce using rule 127
	'return'       reduce using rule 127
	'until'        reduce using rule 127
	'while'        reduce using rule 127
	'writeChar'    reduce using rule 127
	'writeFloat'   reduce using rule 127
	'writeInt'     reduce using rule 127
	'writeString'  reduce using rule 127
	L_LIdent       reduce using rule 127
	%eof           reduce using rule 127


State 358

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block 'end' .    (rule 144)

	'*'            reduce using rule 144
	'Bool'         reduce using rule 144
	'Char'         reduce using rule 144
	'Float'        reduce using rule 144
	'Int'          reduce using rule 144
	'String'       reduce using rule 144
	'Void'         reduce using rule 144
	'break'        reduce using rule 144
	'do'           reduce using rule 144
	'for'          reduce using rule 144
	'if'           reduce using rule 144
	'local'        reduce using rule 144
	'readChar'     reduce using rule 144
	'readFloat'    reduce using rule 144
	'readInt'      reduce using rule 144
	'readString'   reduce using rule 144
	'repeat'       reduce using rule 144
	'return'       reduce using rule 144
	'while'        reduce using rule 144
	'writeChar'    reduce using rule 144
	'writeFloat'   reduce using rule 144
	'writeInt'     reduce using rule 144
	'writeString'  reduce using rule 144
	L_LIdent       reduce using rule 144
	%eof           reduce using rule 144


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 202
Number of terminals: 70
Number of non-terminals: 117
Number of states: 359
