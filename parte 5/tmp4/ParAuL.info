-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParAuL.y
-----------------------------------------------------------------------------

state 219 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListPGlobl -> ListPGlobl                   (1)
	%start_pPGlobl -> PGlobl                           (2)
	%start_pBlock -> Block                             (3)
	%start_pListStm -> ListStm                         (4)
	%start_pBasicType -> BasicType                     (5)
	%start_pBoolean -> Boolean                         (6)
	%start_pPtrVoid -> PtrVoid                         (7)
	%start_pCompoundType -> CompoundType               (8)
	%start_pStm -> Stm                                 (9)
	%start_pEBlk -> EBlk                               (10)
	%start_pDecl -> Decl                               (11)
	%start_pVarInit -> VarInit                         (12)
	%start_pArray -> Array                             (13)
	%start_pVType -> VType                             (14)
	%start_pListVType -> ListVType                     (15)
	%start_pListArray -> ListArray                     (16)
	%start_pLocal -> Local                             (17)
	%start_pAss -> Ass                                 (18)
	%start_pFunc -> Func                               (19)
	%start_pFuncWrite -> FuncWrite                     (20)
	%start_pFuncRead -> FuncRead                       (21)
	%start_pWhile -> While                             (22)
	%start_pRepeat -> Repeat                           (23)
	%start_pFor -> For                                 (24)
	%start_pIncrement -> Increment                     (25)
	%start_pIf -> If                                   (26)
	%start_pElse -> Else                               (27)
	%start_pElseIf -> ElseIf                           (28)
	%start_pListElseIf -> ListElseIf                   (29)
	%start_pReturn -> Return                           (30)
	%start_pRValue -> RValue                           (31)
	%start_pBreak -> Break                             (32)
	%start_pListRExp -> ListRExp                       (33)
	%start_pFuncD -> FuncD                             (34)
	%start_pParamF -> ParamF                           (35)
	%start_pListParamF -> ListParamF                   (36)
	%start_pModality -> Modality                       (37)
	%start_pLExp -> LExp                               (38)
	%start_pListDim -> ListDim                         (39)
	%start_pDim -> Dim                                 (40)
	%start_pRExp -> RExp                               (41)
	%start_pRExp2 -> RExp2                             (42)
	%start_pRExp3 -> RExp3                             (43)
	%start_pRExp6 -> RExp6                             (44)
	%start_pRExp7 -> RExp7                             (45)
	%start_pRExp8 -> RExp8                             (46)
	%start_pRExp9 -> RExp9                             (47)
	%start_pRExp10 -> RExp10                           (48)
	%start_pRExp11 -> RExp11                           (49)
	%start_pRExp1 -> RExp1                             (50)
	%start_pRExp4 -> RExp4                             (51)
	%start_pRExp5 -> RExp5                             (52)
	%start_pRExp12 -> RExp12                           (53)
	Integer -> L_integ                                 (54)
	Double -> L_doubl                                  (55)
	String -> L_quoted                                 (56)
	Char -> L_charac                                   (57)
	LIdent -> L_LIdent                                 (58)
	Program -> ListPGlobl                              (59)
	ListPGlobl -> PGlobl                               (60)
	ListPGlobl -> PGlobl ListPGlobl                    (61)
	PGlobl -> Stm                                      (62)
	PGlobl -> FuncD                                    (63)
	Block -> ListStm                                   (64)
	ListStm ->                                         (65)
	ListStm -> ListStm Stm                             (66)
	BasicType -> 'Bool'                                (67)
	BasicType -> 'Char'                                (68)
	BasicType -> 'Float'                               (69)
	BasicType -> 'Int'                                 (70)
	BasicType -> 'String'                              (71)
	BasicType -> 'Void'                                (72)
	Boolean -> 'true'                                  (73)
	Boolean -> 'false'                                 (74)
	PtrVoid -> 'nil'                                   (75)
	CompoundType -> '*' CompoundType                   (76)
	CompoundType -> CompoundType '[' ']'               (77)
	CompoundType -> BasicType                          (78)
	Stm -> Decl ';'                                    (79)
	Stm -> Local ';'                                   (80)
	Stm -> Ass ';'                                     (81)
	Stm -> While                                       (82)
	Stm -> Repeat ';'                                  (83)
	Stm -> For                                         (84)
	Stm -> If                                          (85)
	Stm -> Func ';'                                    (86)
	Stm -> EBlk                                        (87)
	Stm -> Return ';'                                  (88)
	Stm -> Break ';'                                   (89)
	EBlk -> 'do' Block 'end'                           (90)
	Decl -> BasicType LExp VarInit                     (91)
	VarInit ->                                         (92)
	VarInit -> '=' RExp                                (93)
	VarInit -> '=' Array                               (94)
	Array -> '{' ListArray '}'                         (95)
	Array -> '{' ListVType '}'                         (96)
	VType -> Boolean                                   (97)
	VType -> Char                                      (98)
	VType -> Double                                    (99)
	VType -> Integer                                   (100)
	VType -> String                                    (101)
	VType -> PtrVoid                                   (102)
	ListVType -> VType                                 (103)
	ListVType -> VType ',' ListVType                   (104)
	ListArray -> Array                                 (105)
	ListArray -> Array ',' ListArray                   (106)
	Local -> 'local' Decl                              (107)
	Ass -> LExp '=' RExp                               (108)
	Func -> FuncWrite                                  (109)
	Func -> FuncRead                                   (110)
	Func -> LIdent '(' ListRExp ')'                    (111)
	ListRExp ->                                        (112)
	ListRExp -> RExp                                   (113)
	ListRExp -> RExp ',' ListRExp                      (114)
	FuncWrite -> 'writeInt' '(' RExp ')'               (115)
	FuncWrite -> 'writeFloat' '(' RExp ')'             (116)
	FuncWrite -> 'writeChar' '(' RExp ')'              (117)
	FuncWrite -> 'writeString' '(' RExp ')'            (118)
	FuncRead -> 'readInt' '(' ')'                      (119)
	FuncRead -> 'readFloat' '(' ')'                    (120)
	FuncRead -> 'readChar' '(' ')'                     (121)
	FuncRead -> 'readString' '(' ')'                   (122)
	While -> 'while' RExp EBlk                         (123)
	Repeat -> 'repeat' Block 'until' RExp              (124)
	For -> 'for' LIdent '=' RExp ',' RExp Increment EBlk   (125)
	For -> 'for' LIdent 'in' LIdent EBlk               (126)
	Increment ->                                       (127)
	Increment -> ',' RExp                              (128)
	If -> 'if' RExp 'then' Block ListElseIf Else 'end'   (129)
	Else -> 'else' Block                               (130)
	Else ->                                            (131)
	ElseIf -> 'elseif' RExp 'then' Block               (132)
	ListElseIf ->                                      (133)
	ListElseIf -> ListElseIf ElseIf                    (134)
	Return -> 'return' RValue                          (135)
	RValue ->                                          (136)
	RValue -> RExp                                     (137)
	Break -> 'break'                                   (138)
	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block 'end'   (139)
	ParamF -> Modality BasicType LExp                  (140)
	ListParamF ->                                      (141)
	ListParamF -> ParamF                               (142)
	ListParamF -> ParamF ',' ListParamF                (143)
	Modality ->                                        (144)
	Modality -> 'val'                                  (145)
	Modality -> 'ref'                                  (146)
	Modality -> 'const'                                (147)
	Modality -> 'res'                                  (148)
	Modality -> 'valres'                               (149)
	Modality -> 'name'                                 (150)
	LExp -> LIdent                                     (151)
	LExp -> '*' LExp                                   (152)
	LExp -> LIdent ListDim                             (153)
	ListDim -> Dim                                     (154)
	ListDim -> Dim ListDim                             (155)
	Dim -> '[' Integer ']'                             (156)
	RExp -> RExp 'or' RExp1                            (157)
	RExp -> RExp1 'and' RExp2                          (158)
	RExp -> RExp1                                      (159)
	RExp2 -> 'not' RExp3                               (160)
	RExp2 -> RExp3                                     (161)
	RExp3 -> RExp3 '==' RExp5                          (162)
	RExp3 -> RExp3 '~=' RExp5                          (163)
	RExp3 -> RExp3 '<' RExp5                           (164)
	RExp3 -> RExp3 '<=' RExp5                          (165)
	RExp3 -> RExp3 '>' RExp5                           (166)
	RExp3 -> RExp3 '>=' RExp5                          (167)
	RExp3 -> RExp4                                     (168)
	RExp6 -> RExp6 '+' RExp7                           (169)
	RExp6 -> RExp6 '-' RExp7                           (170)
	RExp6 -> RExp7                                     (171)
	RExp7 -> RExp7 '*' RExp8                           (172)
	RExp7 -> RExp7 '/' RExp8                           (173)
	RExp7 -> RExp7 '%' RExp8                           (174)
	RExp7 -> RExp8                                     (175)
	RExp8 -> RExp9 '^' RExp8                           (176)
	RExp8 -> RExp9                                     (177)
	RExp9 -> '-' RExp10                                (178)
	RExp9 -> RExp10                                    (179)
	RExp10 -> Func                                     (180)
	RExp10 -> RExp10 '..' RExp11                       (181)
	RExp10 -> '#' RExp11                               (182)
	RExp10 -> RExp11                                   (183)
	RExp11 -> Integer                                  (184)
	RExp11 -> LExp                                     (185)
	RExp11 -> '&' LExp                                 (186)
	RExp11 -> Double                                   (187)
	RExp11 -> String                                   (188)
	RExp11 -> Char                                     (189)
	RExp11 -> Boolean                                  (190)
	RExp11 -> PtrVoid                                  (191)
	RExp11 -> RExp12                                   (192)
	RExp1 -> RExp2                                     (193)
	RExp4 -> RExp5                                     (194)
	RExp5 -> RExp6                                     (195)
	RExp12 -> '(' RExp ')'                             (196)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'#'            { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'&'            { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'..'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'Bool'         { PT _ (TS _ 19) }
	'Char'         { PT _ (TS _ 20) }
	'Float'        { PT _ (TS _ 21) }
	'Int'          { PT _ (TS _ 22) }
	'String'       { PT _ (TS _ 23) }
	'Void'         { PT _ (TS _ 24) }
	'['            { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'^'            { PT _ (TS _ 27) }
	'and'          { PT _ (TS _ 28) }
	'break'        { PT _ (TS _ 29) }
	'const'        { PT _ (TS _ 30) }
	'do'           { PT _ (TS _ 31) }
	'else'         { PT _ (TS _ 32) }
	'elseif'       { PT _ (TS _ 33) }
	'end'          { PT _ (TS _ 34) }
	'false'        { PT _ (TS _ 35) }
	'for'          { PT _ (TS _ 36) }
	'function'     { PT _ (TS _ 37) }
	'if'           { PT _ (TS _ 38) }
	'in'           { PT _ (TS _ 39) }
	'local'        { PT _ (TS _ 40) }
	'name'         { PT _ (TS _ 41) }
	'nil'          { PT _ (TS _ 42) }
	'not'          { PT _ (TS _ 43) }
	'or'           { PT _ (TS _ 44) }
	'readChar'     { PT _ (TS _ 45) }
	'readFloat'    { PT _ (TS _ 46) }
	'readInt'      { PT _ (TS _ 47) }
	'readString'   { PT _ (TS _ 48) }
	'ref'          { PT _ (TS _ 49) }
	'repeat'       { PT _ (TS _ 50) }
	'res'          { PT _ (TS _ 51) }
	'return'       { PT _ (TS _ 52) }
	'then'         { PT _ (TS _ 53) }
	'true'         { PT _ (TS _ 54) }
	'until'        { PT _ (TS _ 55) }
	'val'          { PT _ (TS _ 56) }
	'valres'       { PT _ (TS _ 57) }
	'while'        { PT _ (TS _ 58) }
	'writeChar'    { PT _ (TS _ 59) }
	'writeFloat'   { PT _ (TS _ 60) }
	'writeInt'     { PT _ (TS _ 61) }
	'writeString'  { PT _ (TS _ 62) }
	'{'            { PT _ (TS _ 63) }
	'}'            { PT _ (TS _ 64) }
	'~='           { PT _ (TS _ 65) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }
	L_charac       { PT _ (TC $$) }
	L_LIdent       { PT _ (T_LIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListPGlobl rule  1
	%start_pPGlobl  rule  2
	%start_pBlock   rule  3
	%start_pListStm rule  4
	%start_pBasicType rule  5
	%start_pBoolean rule  6
	%start_pPtrVoid rule  7
	%start_pCompoundType rule  8
	%start_pStm     rule  9
	%start_pEBlk    rule  10
	%start_pDecl    rule  11
	%start_pVarInit rule  12
	%start_pArray   rule  13
	%start_pVType   rule  14
	%start_pListVType rule  15
	%start_pListArray rule  16
	%start_pLocal   rule  17
	%start_pAss     rule  18
	%start_pFunc    rule  19
	%start_pFuncWrite rule  20
	%start_pFuncRead rule  21
	%start_pWhile   rule  22
	%start_pRepeat  rule  23
	%start_pFor     rule  24
	%start_pIncrement rule  25
	%start_pIf      rule  26
	%start_pElse    rule  27
	%start_pElseIf  rule  28
	%start_pListElseIf rule  29
	%start_pReturn  rule  30
	%start_pRValue  rule  31
	%start_pBreak   rule  32
	%start_pListRExp rule  33
	%start_pFuncD   rule  34
	%start_pParamF  rule  35
	%start_pListParamF rule  36
	%start_pModality rule  37
	%start_pLExp    rule  38
	%start_pListDim rule  39
	%start_pDim     rule  40
	%start_pRExp    rule  41
	%start_pRExp2   rule  42
	%start_pRExp3   rule  43
	%start_pRExp6   rule  44
	%start_pRExp7   rule  45
	%start_pRExp8   rule  46
	%start_pRExp9   rule  47
	%start_pRExp10  rule  48
	%start_pRExp11  rule  49
	%start_pRExp1   rule  50
	%start_pRExp4   rule  51
	%start_pRExp5   rule  52
	%start_pRExp12  rule  53
	Integer         rule  54
	Double          rule  55
	String          rule  56
	Char            rule  57
	LIdent          rule  58
	Program         rule  59
	ListPGlobl      rules 60, 61
	PGlobl          rules 62, 63
	Block           rule  64
	ListStm         rules 65, 66
	BasicType       rules 67, 68, 69, 70, 71, 72
	Boolean         rules 73, 74
	PtrVoid         rule  75
	CompoundType    rules 76, 77, 78
	Stm             rules 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89
	EBlk            rule  90
	Decl            rule  91
	VarInit         rules 92, 93, 94
	Array           rules 95, 96
	VType           rules 97, 98, 99, 100, 101, 102
	ListVType       rules 103, 104
	ListArray       rules 105, 106
	Local           rule  107
	Ass             rule  108
	Func            rules 109, 110, 111
	ListRExp        rules 112, 113, 114
	FuncWrite       rules 115, 116, 117, 118
	FuncRead        rules 119, 120, 121, 122
	While           rule  123
	Repeat          rule  124
	For             rules 125, 126
	Increment       rules 127, 128
	If              rule  129
	Else            rules 130, 131
	ElseIf          rule  132
	ListElseIf      rules 133, 134
	Return          rule  135
	RValue          rules 136, 137
	Break           rule  138
	FuncD           rule  139
	ParamF          rule  140
	ListParamF      rules 141, 142, 143
	Modality        rules 144, 145, 146, 147, 148, 149, 150
	LExp            rules 151, 152, 153
	ListDim         rules 154, 155
	Dim             rule  156
	RExp            rules 157, 158, 159
	RExp2           rules 160, 161
	RExp3           rules 162, 163, 164, 165, 166, 167, 168
	RExp6           rules 169, 170, 171
	RExp7           rules 172, 173, 174, 175
	RExp8           rules 176, 177
	RExp9           rules 178, 179
	RExp10          rules 180, 181, 182, 183
	RExp11          rules 184, 185, 186, 187, 188, 189, 190, 191, 192
	RExp1           rule  193
	RExp4           rule  194
	RExp5           rule  195
	RExp12          rule  196

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'*'            shift, and enter state 213
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95

	LIdent         goto state 62
	Program        goto state 216
	ListPGlobl     goto state 217
	PGlobl         goto state 215
	BasicType      goto state 210
	CompoundType   goto state 131
	Stm            goto state 211
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	FuncD          goto state 212
	LExp           goto state 168

State 1


	'*'            shift, and enter state 213
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95

	LIdent         goto state 62
	ListPGlobl     goto state 214
	PGlobl         goto state 215
	BasicType      goto state 210
	CompoundType   goto state 131
	Stm            goto state 211
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	FuncD          goto state 212
	LExp           goto state 168

State 2


	'*'            shift, and enter state 213
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95

	LIdent         goto state 62
	PGlobl         goto state 209
	BasicType      goto state 210
	CompoundType   goto state 131
	Stm            goto state 211
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	FuncD          goto state 212
	LExp           goto state 168

State 3


	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65
	%eof           reduce using rule 65

	Block          goto state 207
	ListStm        goto state 208

State 4


	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65
	%eof           reduce using rule 65

	ListStm        goto state 206

State 5


	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 205

State 6


	'false'        shift, and enter state 81
	'true'         shift, and enter state 87

	Boolean        goto state 204

State 7


	'nil'          shift, and enter state 82

	PtrVoid        goto state 203

State 8


	'*'            shift, and enter state 133
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 130
	CompoundType   goto state 202

State 9


	'*'            shift, and enter state 79
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95

	LIdent         goto state 62
	BasicType      goto state 186
	Stm            goto state 190
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	LExp           goto state 168

State 10


	'do'           shift, and enter state 189

	EBlk           goto state 188

State 11


	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 186
	Decl           goto state 187

State 12


	'='            shift, and enter state 185
	%eof           reduce using rule 92

	VarInit        goto state 184

State 13


	'{'            shift, and enter state 173

	Array          goto state 183

State 14


	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94

	Integer        goto state 174
	Double         goto state 175
	String         goto state 176
	Char           goto state 177
	Boolean        goto state 178
	PtrVoid        goto state 179
	VType          goto state 182

State 15


	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94

	Integer        goto state 174
	Double         goto state 175
	String         goto state 176
	Char           goto state 177
	Boolean        goto state 178
	PtrVoid        goto state 179
	VType          goto state 180
	ListVType      goto state 181

State 16


	'{'            shift, and enter state 173

	Array          goto state 171
	ListArray      goto state 172

State 17


	'local'        shift, and enter state 170

	Local          goto state 169

State 18


	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	Ass            goto state 167
	LExp           goto state 168

State 19


	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95

	LIdent         goto state 165
	Func           goto state 166
	FuncWrite      goto state 66
	FuncRead       goto state 67

State 20


	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91

	FuncWrite      goto state 164

State 21


	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86

	FuncRead       goto state 163

State 22


	'while'        shift, and enter state 162

	While          goto state 161

State 23


	'repeat'       shift, and enter state 160

	Repeat         goto state 159

State 24


	'for'          shift, and enter state 158

	For            goto state 157

State 25


	','            shift, and enter state 156
	%eof           reduce using rule 127

	Increment      goto state 155

State 26


	'if'           shift, and enter state 154

	If             goto state 153

State 27


	'else'         shift, and enter state 152
	%eof           reduce using rule 131

	Else           goto state 151

State 28


	'elseif'       shift, and enter state 150

	ElseIf         goto state 149

State 29


	'elseif'       reduce using rule 133
	%eof           reduce using rule 133

	ListElseIf     goto state 148

State 30


	'return'       shift, and enter state 147

	Return         goto state 146

State 31


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 136

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	RValue         goto state 144
	LExp           goto state 68
	RExp           goto state 145
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 32


	'break'        shift, and enter state 143

	Break          goto state 142

State 33


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 112

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	ListRExp       goto state 140
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 141
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 34


	'*'            shift, and enter state 133
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 130
	CompoundType   goto state 131
	FuncD          goto state 132

State 35


	'Bool'         reduce using rule 144
	'Char'         reduce using rule 144
	'Float'        reduce using rule 144
	'Int'          reduce using rule 144
	'String'       reduce using rule 144
	'Void'         reduce using rule 144
	'const'        shift, and enter state 120
	'name'         shift, and enter state 121
	'ref'          shift, and enter state 122
	'res'          shift, and enter state 123
	'val'          shift, and enter state 124
	'valres'       shift, and enter state 125

	ParamF         goto state 129
	Modality       goto state 128

State 36


	'Bool'         reduce using rule 144
	'Char'         reduce using rule 144
	'Float'        reduce using rule 144
	'Int'          reduce using rule 144
	'String'       reduce using rule 144
	'Void'         reduce using rule 144
	'const'        shift, and enter state 120
	'name'         shift, and enter state 121
	'ref'          shift, and enter state 122
	'res'          shift, and enter state 123
	'val'          shift, and enter state 124
	'valres'       shift, and enter state 125
	%eof           reduce using rule 141

	ParamF         goto state 126
	ListParamF     goto state 127
	Modality       goto state 128

State 37


	'const'        shift, and enter state 120
	'name'         shift, and enter state 121
	'ref'          shift, and enter state 122
	'res'          shift, and enter state 123
	'val'          shift, and enter state 124
	'valres'       shift, and enter state 125
	%eof           reduce using rule 144

	Modality       goto state 119

State 38


	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 118

State 39


	'['            shift, and enter state 115

	ListDim        goto state 116
	Dim            goto state 117

State 40


	'['            shift, and enter state 115

	Dim            goto state 114

State 41


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 112
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 42


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp2          goto state 111
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 43


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp3          goto state 110
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 44


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 109
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 45


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp7          goto state 108
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 46


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp8          goto state 107
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 47


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp9          goto state 106
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 48


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp10         goto state 105
	RExp11         goto state 74
	RExp12         goto state 76

State 49


	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 103
	Boolean        goto state 63
	PtrVoid        goto state 64
	LExp           goto state 68
	RExp11         goto state 104
	RExp12         goto state 76

State 50


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 100
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 51


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp4          goto state 96
	RExp5          goto state 97
	RExp12         goto state 76

State 52


	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 75
	RExp12         goto state 76

State 53


	'('            shift, and enter state 57

	RExp12         goto state 56

State 54


	L_integ        shift, and enter state 55


State 55

	Integer -> L_integ .                                (rule 54)

	'%'            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'..'           reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'and'          reduce using rule 54
	'do'           reduce using rule 54
	'or'           reduce using rule 54
	'then'         reduce using rule 54
	'}'            reduce using rule 54
	'~='           reduce using rule 54
	%eof           reduce using rule 54


State 56

	%start_pRExp12 -> RExp12 .                          (rule 53)

	%eof           accept


State 57

	RExp12 -> '(' . RExp ')'                            (rule 196)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 284
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 58

	RExp11 -> Integer .                                 (rule 184)

	'%'            reduce using rule 184
	')'            reduce using rule 184
	'*'            reduce using rule 184
	'+'            reduce using rule 184
	','            reduce using rule 184
	'-'            reduce using rule 184
	'..'           reduce using rule 184
	'/'            reduce using rule 184
	';'            reduce using rule 184
	'<'            reduce using rule 184
	'<='           reduce using rule 184
	'=='           reduce using rule 184
	'>'            reduce using rule 184
	'>='           reduce using rule 184
	'^'            reduce using rule 184
	'and'          reduce using rule 184
	'do'           reduce using rule 184
	'or'           reduce using rule 184
	'then'         reduce using rule 184
	'~='           reduce using rule 184
	%eof           reduce using rule 184


State 59

	RExp11 -> Double .                                  (rule 187)

	'%'            reduce using rule 187
	')'            reduce using rule 187
	'*'            reduce using rule 187
	'+'            reduce using rule 187
	','            reduce using rule 187
	'-'            reduce using rule 187
	'..'           reduce using rule 187
	'/'            reduce using rule 187
	';'            reduce using rule 187
	'<'            reduce using rule 187
	'<='           reduce using rule 187
	'=='           reduce using rule 187
	'>'            reduce using rule 187
	'>='           reduce using rule 187
	'^'            reduce using rule 187
	'and'          reduce using rule 187
	'do'           reduce using rule 187
	'or'           reduce using rule 187
	'then'         reduce using rule 187
	'~='           reduce using rule 187
	%eof           reduce using rule 187


State 60

	RExp11 -> String .                                  (rule 188)

	'%'            reduce using rule 188
	')'            reduce using rule 188
	'*'            reduce using rule 188
	'+'            reduce using rule 188
	','            reduce using rule 188
	'-'            reduce using rule 188
	'..'           reduce using rule 188
	'/'            reduce using rule 188
	';'            reduce using rule 188
	'<'            reduce using rule 188
	'<='           reduce using rule 188
	'=='           reduce using rule 188
	'>'            reduce using rule 188
	'>='           reduce using rule 188
	'^'            reduce using rule 188
	'and'          reduce using rule 188
	'do'           reduce using rule 188
	'or'           reduce using rule 188
	'then'         reduce using rule 188
	'~='           reduce using rule 188
	%eof           reduce using rule 188


State 61

	RExp11 -> Char .                                    (rule 189)

	'%'            reduce using rule 189
	')'            reduce using rule 189
	'*'            reduce using rule 189
	'+'            reduce using rule 189
	','            reduce using rule 189
	'-'            reduce using rule 189
	'..'           reduce using rule 189
	'/'            reduce using rule 189
	';'            reduce using rule 189
	'<'            reduce using rule 189
	'<='           reduce using rule 189
	'=='           reduce using rule 189
	'>'            reduce using rule 189
	'>='           reduce using rule 189
	'^'            reduce using rule 189
	'and'          reduce using rule 189
	'do'           reduce using rule 189
	'or'           reduce using rule 189
	'then'         reduce using rule 189
	'~='           reduce using rule 189
	%eof           reduce using rule 189


State 62

	Func -> LIdent . '(' ListRExp ')'                   (rule 111)
	LExp -> LIdent .                                    (rule 151)
	LExp -> LIdent . ListDim                            (rule 153)

	'%'            reduce using rule 151
	'('            shift, and enter state 240
	')'            reduce using rule 151
	'*'            reduce using rule 151
	'+'            reduce using rule 151
	','            reduce using rule 151
	'-'            reduce using rule 151
	'..'           reduce using rule 151
	'/'            reduce using rule 151
	';'            reduce using rule 151
	'<'            reduce using rule 151
	'<='           reduce using rule 151
	'='            reduce using rule 151
	'=='           reduce using rule 151
	'>'            reduce using rule 151
	'>='           reduce using rule 151
	'['            shift, and enter state 115
	'^'            reduce using rule 151
	'and'          reduce using rule 151
	'do'           reduce using rule 151
	'or'           reduce using rule 151
	'then'         reduce using rule 151
	'~='           reduce using rule 151
	%eof           reduce using rule 151

	ListDim        goto state 270
	Dim            goto state 117

State 63

	RExp11 -> Boolean .                                 (rule 190)

	'%'            reduce using rule 190
	')'            reduce using rule 190
	'*'            reduce using rule 190
	'+'            reduce using rule 190
	','            reduce using rule 190
	'-'            reduce using rule 190
	'..'           reduce using rule 190
	'/'            reduce using rule 190
	';'            reduce using rule 190
	'<'            reduce using rule 190
	'<='           reduce using rule 190
	'=='           reduce using rule 190
	'>'            reduce using rule 190
	'>='           reduce using rule 190
	'^'            reduce using rule 190
	'and'          reduce using rule 190
	'do'           reduce using rule 190
	'or'           reduce using rule 190
	'then'         reduce using rule 190
	'~='           reduce using rule 190
	%eof           reduce using rule 190


State 64

	RExp11 -> PtrVoid .                                 (rule 191)

	'%'            reduce using rule 191
	')'            reduce using rule 191
	'*'            reduce using rule 191
	'+'            reduce using rule 191
	','            reduce using rule 191
	'-'            reduce using rule 191
	'..'           reduce using rule 191
	'/'            reduce using rule 191
	';'            reduce using rule 191
	'<'            reduce using rule 191
	'<='           reduce using rule 191
	'=='           reduce using rule 191
	'>'            reduce using rule 191
	'>='           reduce using rule 191
	'^'            reduce using rule 191
	'and'          reduce using rule 191
	'do'           reduce using rule 191
	'or'           reduce using rule 191
	'then'         reduce using rule 191
	'~='           reduce using rule 191
	%eof           reduce using rule 191


State 65

	RExp10 -> Func .                                    (rule 180)

	'%'            reduce using rule 180
	')'            reduce using rule 180
	'*'            reduce using rule 180
	'+'            reduce using rule 180
	','            reduce using rule 180
	'-'            reduce using rule 180
	'..'           reduce using rule 180
	'/'            reduce using rule 180
	';'            reduce using rule 180
	'<'            reduce using rule 180
	'<='           reduce using rule 180
	'=='           reduce using rule 180
	'>'            reduce using rule 180
	'>='           reduce using rule 180
	'^'            reduce using rule 180
	'and'          reduce using rule 180
	'do'           reduce using rule 180
	'or'           reduce using rule 180
	'then'         reduce using rule 180
	'~='           reduce using rule 180
	%eof           reduce using rule 180


State 66

	Func -> FuncWrite .                                 (rule 109)

	'%'            reduce using rule 109
	')'            reduce using rule 109
	'*'            reduce using rule 109
	'+'            reduce using rule 109
	','            reduce using rule 109
	'-'            reduce using rule 109
	'..'           reduce using rule 109
	'/'            reduce using rule 109
	';'            reduce using rule 109
	'<'            reduce using rule 109
	'<='           reduce using rule 109
	'=='           reduce using rule 109
	'>'            reduce using rule 109
	'>='           reduce using rule 109
	'^'            reduce using rule 109
	'and'          reduce using rule 109
	'do'           reduce using rule 109
	'or'           reduce using rule 109
	'then'         reduce using rule 109
	'~='           reduce using rule 109
	%eof           reduce using rule 109


State 67

	Func -> FuncRead .                                  (rule 110)

	'%'            reduce using rule 110
	')'            reduce using rule 110
	'*'            reduce using rule 110
	'+'            reduce using rule 110
	','            reduce using rule 110
	'-'            reduce using rule 110
	'..'           reduce using rule 110
	'/'            reduce using rule 110
	';'            reduce using rule 110
	'<'            reduce using rule 110
	'<='           reduce using rule 110
	'=='           reduce using rule 110
	'>'            reduce using rule 110
	'>='           reduce using rule 110
	'^'            reduce using rule 110
	'and'          reduce using rule 110
	'do'           reduce using rule 110
	'or'           reduce using rule 110
	'then'         reduce using rule 110
	'~='           reduce using rule 110
	%eof           reduce using rule 110


State 68

	RExp11 -> LExp .                                    (rule 185)

	'%'            reduce using rule 185
	')'            reduce using rule 185
	'*'            reduce using rule 185
	'+'            reduce using rule 185
	','            reduce using rule 185
	'-'            reduce using rule 185
	'..'           reduce using rule 185
	'/'            reduce using rule 185
	';'            reduce using rule 185
	'<'            reduce using rule 185
	'<='           reduce using rule 185
	'=='           reduce using rule 185
	'>'            reduce using rule 185
	'>='           reduce using rule 185
	'^'            reduce using rule 185
	'and'          reduce using rule 185
	'do'           reduce using rule 185
	'or'           reduce using rule 185
	'then'         reduce using rule 185
	'~='           reduce using rule 185
	%eof           reduce using rule 185


State 69

	RExp6 -> RExp6 . '+' RExp7                          (rule 169)
	RExp6 -> RExp6 . '-' RExp7                          (rule 170)
	RExp5 -> RExp6 .                                    (rule 195)

	')'            reduce using rule 195
	'+'            shift, and enter state 264
	','            reduce using rule 195
	'-'            shift, and enter state 265
	';'            reduce using rule 195
	'<'            reduce using rule 195
	'<='           reduce using rule 195
	'=='           reduce using rule 195
	'>'            reduce using rule 195
	'>='           reduce using rule 195
	'and'          reduce using rule 195
	'do'           reduce using rule 195
	'or'           reduce using rule 195
	'then'         reduce using rule 195
	'~='           reduce using rule 195
	%eof           reduce using rule 195


State 70

	RExp6 -> RExp7 .                                    (rule 171)
	RExp7 -> RExp7 . '*' RExp8                          (rule 172)
	RExp7 -> RExp7 . '/' RExp8                          (rule 173)
	RExp7 -> RExp7 . '%' RExp8                          (rule 174)

	'%'            shift, and enter state 266
	')'            reduce using rule 171
	'*'            shift, and enter state 267
	'+'            reduce using rule 171
	','            reduce using rule 171
	'-'            reduce using rule 171
	'/'            shift, and enter state 268
	';'            reduce using rule 171
	'<'            reduce using rule 171
	'<='           reduce using rule 171
	'=='           reduce using rule 171
	'>'            reduce using rule 171
	'>='           reduce using rule 171
	'and'          reduce using rule 171
	'do'           reduce using rule 171
	'or'           reduce using rule 171
	'then'         reduce using rule 171
	'~='           reduce using rule 171
	%eof           reduce using rule 171


State 71

	RExp7 -> RExp8 .                                    (rule 175)

	'%'            reduce using rule 175
	')'            reduce using rule 175
	'*'            reduce using rule 175
	'+'            reduce using rule 175
	','            reduce using rule 175
	'-'            reduce using rule 175
	'/'            reduce using rule 175
	';'            reduce using rule 175
	'<'            reduce using rule 175
	'<='           reduce using rule 175
	'=='           reduce using rule 175
	'>'            reduce using rule 175
	'>='           reduce using rule 175
	'and'          reduce using rule 175
	'do'           reduce using rule 175
	'or'           reduce using rule 175
	'then'         reduce using rule 175
	'~='           reduce using rule 175
	%eof           reduce using rule 175


State 72

	RExp8 -> RExp9 . '^' RExp8                          (rule 176)
	RExp8 -> RExp9 .                                    (rule 177)

	'%'            reduce using rule 177
	')'            reduce using rule 177
	'*'            reduce using rule 177
	'+'            reduce using rule 177
	','            reduce using rule 177
	'-'            reduce using rule 177
	'/'            reduce using rule 177
	';'            reduce using rule 177
	'<'            reduce using rule 177
	'<='           reduce using rule 177
	'=='           reduce using rule 177
	'>'            reduce using rule 177
	'>='           reduce using rule 177
	'^'            shift, and enter state 283
	'and'          reduce using rule 177
	'do'           reduce using rule 177
	'or'           reduce using rule 177
	'then'         reduce using rule 177
	'~='           reduce using rule 177
	%eof           reduce using rule 177


State 73

	RExp9 -> RExp10 .                                   (rule 179)
	RExp10 -> RExp10 . '..' RExp11                      (rule 181)

	'%'            reduce using rule 179
	')'            reduce using rule 179
	'*'            reduce using rule 179
	'+'            reduce using rule 179
	','            reduce using rule 179
	'-'            reduce using rule 179
	'..'           shift, and enter state 269
	'/'            reduce using rule 179
	';'            reduce using rule 179
	'<'            reduce using rule 179
	'<='           reduce using rule 179
	'=='           reduce using rule 179
	'>'            reduce using rule 179
	'>='           reduce using rule 179
	'^'            reduce using rule 179
	'and'          reduce using rule 179
	'do'           reduce using rule 179
	'or'           reduce using rule 179
	'then'         reduce using rule 179
	'~='           reduce using rule 179
	%eof           reduce using rule 179


State 74

	RExp10 -> RExp11 .                                  (rule 183)

	'%'            reduce using rule 183
	')'            reduce using rule 183
	'*'            reduce using rule 183
	'+'            reduce using rule 183
	','            reduce using rule 183
	'-'            reduce using rule 183
	'..'           reduce using rule 183
	'/'            reduce using rule 183
	';'            reduce using rule 183
	'<'            reduce using rule 183
	'<='           reduce using rule 183
	'=='           reduce using rule 183
	'>'            reduce using rule 183
	'>='           reduce using rule 183
	'^'            reduce using rule 183
	'and'          reduce using rule 183
	'do'           reduce using rule 183
	'or'           reduce using rule 183
	'then'         reduce using rule 183
	'~='           reduce using rule 183
	%eof           reduce using rule 183


State 75

	%start_pRExp5 -> RExp5 .                            (rule 52)

	%eof           accept


State 76

	RExp11 -> RExp12 .                                  (rule 192)

	'%'            reduce using rule 192
	')'            reduce using rule 192
	'*'            reduce using rule 192
	'+'            reduce using rule 192
	','            reduce using rule 192
	'-'            reduce using rule 192
	'..'           reduce using rule 192
	'/'            reduce using rule 192
	';'            reduce using rule 192
	'<'            reduce using rule 192
	'<='           reduce using rule 192
	'=='           reduce using rule 192
	'>'            reduce using rule 192
	'>='           reduce using rule 192
	'^'            reduce using rule 192
	'and'          reduce using rule 192
	'do'           reduce using rule 192
	'or'           reduce using rule 192
	'then'         reduce using rule 192
	'~='           reduce using rule 192
	%eof           reduce using rule 192


State 77

	RExp10 -> '#' . RExp11                              (rule 182)

	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 103
	Boolean        goto state 63
	PtrVoid        goto state 64
	LExp           goto state 68
	RExp11         goto state 282
	RExp12         goto state 76

State 78

	RExp11 -> '&' . LExp                                (rule 186)

	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 281

State 79

	LExp -> '*' . LExp                                  (rule 152)

	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 220

State 80

	RExp9 -> '-' . RExp10                               (rule 178)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp10         goto state 280
	RExp11         goto state 74
	RExp12         goto state 76

State 81

	Boolean -> 'false' .                                (rule 74)

	'%'            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'^'            reduce using rule 74
	'and'          reduce using rule 74
	'do'           reduce using rule 74
	'or'           reduce using rule 74
	'then'         reduce using rule 74
	'}'            reduce using rule 74
	'~='           reduce using rule 74
	%eof           reduce using rule 74


State 82

	PtrVoid -> 'nil' .                                  (rule 75)

	'%'            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'^'            reduce using rule 75
	'and'          reduce using rule 75
	'do'           reduce using rule 75
	'or'           reduce using rule 75
	'then'         reduce using rule 75
	'}'            reduce using rule 75
	'~='           reduce using rule 75
	%eof           reduce using rule 75


State 83

	FuncRead -> 'readChar' . '(' ')'                    (rule 121)

	'('            shift, and enter state 279


State 84

	FuncRead -> 'readFloat' . '(' ')'                   (rule 120)

	'('            shift, and enter state 278


State 85

	FuncRead -> 'readInt' . '(' ')'                     (rule 119)

	'('            shift, and enter state 277


State 86

	FuncRead -> 'readString' . '(' ')'                  (rule 122)

	'('            shift, and enter state 276


State 87

	Boolean -> 'true' .                                 (rule 73)

	'%'            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'^'            reduce using rule 73
	'and'          reduce using rule 73
	'do'           reduce using rule 73
	'or'           reduce using rule 73
	'then'         reduce using rule 73
	'}'            reduce using rule 73
	'~='           reduce using rule 73
	%eof           reduce using rule 73


State 88

	FuncWrite -> 'writeChar' . '(' RExp ')'             (rule 117)

	'('            shift, and enter state 275


State 89

	FuncWrite -> 'writeFloat' . '(' RExp ')'            (rule 116)

	'('            shift, and enter state 274


State 90

	FuncWrite -> 'writeInt' . '(' RExp ')'              (rule 115)

	'('            shift, and enter state 273


State 91

	FuncWrite -> 'writeString' . '(' RExp ')'           (rule 118)

	'('            shift, and enter state 272


State 92

	Double -> L_doubl .                                 (rule 55)

	'%'            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'..'           reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'^'            reduce using rule 55
	'and'          reduce using rule 55
	'do'           reduce using rule 55
	'or'           reduce using rule 55
	'then'         reduce using rule 55
	'}'            reduce using rule 55
	'~='           reduce using rule 55
	%eof           reduce using rule 55


State 93

	String -> L_quoted .                                (rule 56)

	'%'            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'..'           reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'^'            reduce using rule 56
	'and'          reduce using rule 56
	'do'           reduce using rule 56
	'or'           reduce using rule 56
	'then'         reduce using rule 56
	'}'            reduce using rule 56
	'~='           reduce using rule 56
	%eof           reduce using rule 56


State 94

	Char -> L_charac .                                  (rule 57)

	'%'            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'..'           reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'^'            reduce using rule 57
	'and'          reduce using rule 57
	'do'           reduce using rule 57
	'or'           reduce using rule 57
	'then'         reduce using rule 57
	'}'            reduce using rule 57
	'~='           reduce using rule 57
	%eof           reduce using rule 57


State 95

	LIdent -> L_LIdent .                                (rule 58)

	'%'            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'..'           reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	'^'            reduce using rule 58
	'and'          reduce using rule 58
	'do'           reduce using rule 58
	'in'           reduce using rule 58
	'or'           reduce using rule 58
	'then'         reduce using rule 58
	'~='           reduce using rule 58
	%eof           reduce using rule 58


State 96

	%start_pRExp4 -> RExp4 .                            (rule 51)

	%eof           accept


State 97

	RExp4 -> RExp5 .                                    (rule 194)

	')'            reduce using rule 194
	','            reduce using rule 194
	';'            reduce using rule 194
	'<'            reduce using rule 194
	'<='           reduce using rule 194
	'=='           reduce using rule 194
	'>'            reduce using rule 194
	'>='           reduce using rule 194
	'and'          reduce using rule 194
	'do'           reduce using rule 194
	'or'           reduce using rule 194
	'then'         reduce using rule 194
	'~='           reduce using rule 194
	%eof           reduce using rule 194


State 98

	RExp1 -> RExp2 .                                    (rule 193)

	')'            reduce using rule 193
	','            reduce using rule 193
	';'            reduce using rule 193
	'and'          reduce using rule 193
	'do'           reduce using rule 193
	'or'           reduce using rule 193
	'then'         reduce using rule 193
	%eof           reduce using rule 193


State 99

	RExp2 -> RExp3 .                                    (rule 161)
	RExp3 -> RExp3 . '==' RExp5                         (rule 162)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 163)
	RExp3 -> RExp3 . '<' RExp5                          (rule 164)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 165)
	RExp3 -> RExp3 . '>' RExp5                          (rule 166)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 167)

	')'            reduce using rule 161
	','            reduce using rule 161
	';'            reduce using rule 161
	'<'            shift, and enter state 258
	'<='           shift, and enter state 259
	'=='           shift, and enter state 260
	'>'            shift, and enter state 261
	'>='           shift, and enter state 262
	'and'          reduce using rule 161
	'do'           reduce using rule 161
	'or'           reduce using rule 161
	'then'         reduce using rule 161
	'~='           shift, and enter state 263
	%eof           reduce using rule 161


State 100

	%start_pRExp1 -> RExp1 .                            (rule 50)

	%eof           accept


State 101

	RExp3 -> RExp4 .                                    (rule 168)

	')'            reduce using rule 168
	','            reduce using rule 168
	';'            reduce using rule 168
	'<'            reduce using rule 168
	'<='           reduce using rule 168
	'=='           reduce using rule 168
	'>'            reduce using rule 168
	'>='           reduce using rule 168
	'and'          reduce using rule 168
	'do'           reduce using rule 168
	'or'           reduce using rule 168
	'then'         reduce using rule 168
	'~='           reduce using rule 168
	%eof           reduce using rule 168


State 102

	RExp2 -> 'not' . RExp3                              (rule 160)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp3          goto state 271
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 103

	LExp -> LIdent .                                    (rule 151)
	LExp -> LIdent . ListDim                            (rule 153)

	'%'            reduce using rule 151
	')'            reduce using rule 151
	'*'            reduce using rule 151
	'+'            reduce using rule 151
	','            reduce using rule 151
	'-'            reduce using rule 151
	'..'           reduce using rule 151
	'/'            reduce using rule 151
	';'            reduce using rule 151
	'<'            reduce using rule 151
	'<='           reduce using rule 151
	'='            reduce using rule 151
	'=='           reduce using rule 151
	'>'            reduce using rule 151
	'>='           reduce using rule 151
	'['            shift, and enter state 115
	'^'            reduce using rule 151
	'and'          reduce using rule 151
	'do'           reduce using rule 151
	'or'           reduce using rule 151
	'then'         reduce using rule 151
	'~='           reduce using rule 151
	%eof           reduce using rule 151

	ListDim        goto state 270
	Dim            goto state 117

State 104

	%start_pRExp11 -> RExp11 .                          (rule 49)

	%eof           accept


State 105

	%start_pRExp10 -> RExp10 .                          (rule 48)
	RExp10 -> RExp10 . '..' RExp11                      (rule 181)

	'..'           shift, and enter state 269
	%eof           accept


State 106

	%start_pRExp9 -> RExp9 .                            (rule 47)

	%eof           accept


State 107

	%start_pRExp8 -> RExp8 .                            (rule 46)

	%eof           accept


State 108

	%start_pRExp7 -> RExp7 .                            (rule 45)
	RExp7 -> RExp7 . '*' RExp8                          (rule 172)
	RExp7 -> RExp7 . '/' RExp8                          (rule 173)
	RExp7 -> RExp7 . '%' RExp8                          (rule 174)

	'%'            shift, and enter state 266
	'*'            shift, and enter state 267
	'/'            shift, and enter state 268
	%eof           accept


State 109

	%start_pRExp6 -> RExp6 .                            (rule 44)
	RExp6 -> RExp6 . '+' RExp7                          (rule 169)
	RExp6 -> RExp6 . '-' RExp7                          (rule 170)

	'+'            shift, and enter state 264
	'-'            shift, and enter state 265
	%eof           accept


State 110

	%start_pRExp3 -> RExp3 .                            (rule 43)
	RExp3 -> RExp3 . '==' RExp5                         (rule 162)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 163)
	RExp3 -> RExp3 . '<' RExp5                          (rule 164)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 165)
	RExp3 -> RExp3 . '>' RExp5                          (rule 166)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 167)

	'<'            shift, and enter state 258
	'<='           shift, and enter state 259
	'=='           shift, and enter state 260
	'>'            shift, and enter state 261
	'>='           shift, and enter state 262
	'~='           shift, and enter state 263
	%eof           accept


State 111

	%start_pRExp2 -> RExp2 .                            (rule 42)

	%eof           accept


State 112

	%start_pRExp -> RExp .                              (rule 41)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	'or'           shift, and enter state 250
	%eof           accept


State 113

	RExp -> RExp1 . 'and' RExp2                         (rule 158)
	RExp -> RExp1 .                                     (rule 159)

	')'            reduce using rule 159
	','            reduce using rule 159
	';'            reduce using rule 159
	'and'          shift, and enter state 257
	'do'           reduce using rule 159
	'or'           reduce using rule 159
	'then'         reduce using rule 159
	%eof           reduce using rule 159


State 114

	%start_pDim -> Dim .                                (rule 40)

	%eof           accept


State 115

	Dim -> '[' . Integer ']'                            (rule 156)

	L_integ        shift, and enter state 55

	Integer        goto state 256

State 116

	%start_pListDim -> ListDim .                        (rule 39)

	%eof           accept


State 117

	ListDim -> Dim .                                    (rule 154)
	ListDim -> Dim . ListDim                            (rule 155)

	'%'            reduce using rule 154
	')'            reduce using rule 154
	'*'            reduce using rule 154
	'+'            reduce using rule 154
	','            reduce using rule 154
	'-'            reduce using rule 154
	'..'           reduce using rule 154
	'/'            reduce using rule 154
	';'            reduce using rule 154
	'<'            reduce using rule 154
	'<='           reduce using rule 154
	'='            reduce using rule 154
	'=='           reduce using rule 154
	'>'            reduce using rule 154
	'>='           reduce using rule 154
	'['            shift, and enter state 115
	'^'            reduce using rule 154
	'and'          reduce using rule 154
	'do'           reduce using rule 154
	'or'           reduce using rule 154
	'then'         reduce using rule 154
	'~='           reduce using rule 154
	%eof           reduce using rule 154

	ListDim        goto state 255
	Dim            goto state 117

State 118

	%start_pLExp -> LExp .                              (rule 38)

	%eof           accept


State 119

	%start_pModality -> Modality .                      (rule 37)

	%eof           accept


State 120

	Modality -> 'const' .                               (rule 147)

	'Bool'         reduce using rule 147
	'Char'         reduce using rule 147
	'Float'        reduce using rule 147
	'Int'          reduce using rule 147
	'String'       reduce using rule 147
	'Void'         reduce using rule 147
	%eof           reduce using rule 147


State 121

	Modality -> 'name' .                                (rule 150)

	'Bool'         reduce using rule 150
	'Char'         reduce using rule 150
	'Float'        reduce using rule 150
	'Int'          reduce using rule 150
	'String'       reduce using rule 150
	'Void'         reduce using rule 150
	%eof           reduce using rule 150


State 122

	Modality -> 'ref' .                                 (rule 146)

	'Bool'         reduce using rule 146
	'Char'         reduce using rule 146
	'Float'        reduce using rule 146
	'Int'          reduce using rule 146
	'String'       reduce using rule 146
	'Void'         reduce using rule 146
	%eof           reduce using rule 146


State 123

	Modality -> 'res' .                                 (rule 148)

	'Bool'         reduce using rule 148
	'Char'         reduce using rule 148
	'Float'        reduce using rule 148
	'Int'          reduce using rule 148
	'String'       reduce using rule 148
	'Void'         reduce using rule 148
	%eof           reduce using rule 148


State 124

	Modality -> 'val' .                                 (rule 145)

	'Bool'         reduce using rule 145
	'Char'         reduce using rule 145
	'Float'        reduce using rule 145
	'Int'          reduce using rule 145
	'String'       reduce using rule 145
	'Void'         reduce using rule 145
	%eof           reduce using rule 145


State 125

	Modality -> 'valres' .                              (rule 149)

	'Bool'         reduce using rule 149
	'Char'         reduce using rule 149
	'Float'        reduce using rule 149
	'Int'          reduce using rule 149
	'String'       reduce using rule 149
	'Void'         reduce using rule 149
	%eof           reduce using rule 149


State 126

	ListParamF -> ParamF .                              (rule 142)
	ListParamF -> ParamF . ',' ListParamF               (rule 143)

	')'            reduce using rule 142
	','            shift, and enter state 254
	%eof           reduce using rule 142


State 127

	%start_pListParamF -> ListParamF .                  (rule 36)

	%eof           accept


State 128

	ParamF -> Modality . BasicType LExp                 (rule 140)

	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 253

State 129

	%start_pParamF -> ParamF .                          (rule 35)

	%eof           accept


State 130

	CompoundType -> BasicType .                         (rule 78)

	'['            reduce using rule 78
	'function'     reduce using rule 78
	%eof           reduce using rule 78


State 131

	CompoundType -> CompoundType . '[' ']'              (rule 77)
	FuncD -> CompoundType . 'function' LIdent '(' ListParamF ')' Block 'end'    (rule 139)

	'['            shift, and enter state 223
	'function'     shift, and enter state 252


State 132

	%start_pFuncD -> FuncD .                            (rule 34)

	%eof           accept


State 133

	CompoundType -> '*' . CompoundType                  (rule 76)

	'*'            shift, and enter state 133
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 130
	CompoundType   goto state 219

State 134

	BasicType -> 'Bool' .                               (rule 67)

	'*'            reduce using rule 67
	'['            reduce using rule 67
	'function'     reduce using rule 67
	L_LIdent       reduce using rule 67
	%eof           reduce using rule 67


State 135

	BasicType -> 'Char' .                               (rule 68)

	'*'            reduce using rule 68
	'['            reduce using rule 68
	'function'     reduce using rule 68
	L_LIdent       reduce using rule 68
	%eof           reduce using rule 68


State 136

	BasicType -> 'Float' .                              (rule 69)

	'*'            reduce using rule 69
	'['            reduce using rule 69
	'function'     reduce using rule 69
	L_LIdent       reduce using rule 69
	%eof           reduce using rule 69


State 137

	BasicType -> 'Int' .                                (rule 70)

	'*'            reduce using rule 70
	'['            reduce using rule 70
	'function'     reduce using rule 70
	L_LIdent       reduce using rule 70
	%eof           reduce using rule 70


State 138

	BasicType -> 'String' .                             (rule 71)

	'*'            reduce using rule 71
	'['            reduce using rule 71
	'function'     reduce using rule 71
	L_LIdent       reduce using rule 71
	%eof           reduce using rule 71


State 139

	BasicType -> 'Void' .                               (rule 72)

	'*'            reduce using rule 72
	'['            reduce using rule 72
	'function'     reduce using rule 72
	L_LIdent       reduce using rule 72
	%eof           reduce using rule 72


State 140

	%start_pListRExp -> ListRExp .                      (rule 33)

	%eof           accept


State 141

	ListRExp -> RExp .                                  (rule 113)
	ListRExp -> RExp . ',' ListRExp                     (rule 114)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	')'            reduce using rule 113
	','            shift, and enter state 251
	'or'           shift, and enter state 250
	%eof           reduce using rule 113


State 142

	%start_pBreak -> Break .                            (rule 32)

	%eof           accept


State 143

	Break -> 'break' .                                  (rule 138)

	';'            reduce using rule 138
	%eof           reduce using rule 138


State 144

	%start_pRValue -> RValue .                          (rule 31)

	%eof           accept


State 145

	RValue -> RExp .                                    (rule 137)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	';'            reduce using rule 137
	'or'           shift, and enter state 250
	%eof           reduce using rule 137


State 146

	%start_pReturn -> Return .                          (rule 30)

	%eof           accept


State 147

	Return -> 'return' . RValue                         (rule 135)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	';'            reduce using rule 136
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 136

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	RValue         goto state 249
	LExp           goto state 68
	RExp           goto state 145
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 148

	%start_pListElseIf -> ListElseIf .                  (rule 29)
	ListElseIf -> ListElseIf . ElseIf                   (rule 134)

	'elseif'       shift, and enter state 150
	%eof           accept

	ElseIf         goto state 248

State 149

	%start_pElseIf -> ElseIf .                          (rule 28)

	%eof           accept


State 150

	ElseIf -> 'elseif' . RExp 'then' Block              (rule 132)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 247
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 151

	%start_pElse -> Else .                              (rule 27)

	%eof           accept


State 152

	Else -> 'else' . Block                              (rule 130)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'end'          reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65
	%eof           reduce using rule 65

	Block          goto state 246
	ListStm        goto state 208

State 153

	%start_pIf -> If .                                  (rule 26)

	%eof           accept


State 154

	If -> 'if' . RExp 'then' Block ListElseIf Else 'end'    (rule 129)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 245
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 155

	%start_pIncrement -> Increment .                    (rule 25)

	%eof           accept


State 156

	Increment -> ',' . RExp                             (rule 128)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 244
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 157

	%start_pFor -> For .                                (rule 24)

	%eof           accept


State 158

	For -> 'for' . LIdent '=' RExp ',' RExp Increment EBlk    (rule 125)
	For -> 'for' . LIdent 'in' LIdent EBlk              (rule 126)

	L_LIdent       shift, and enter state 95

	LIdent         goto state 243

State 159

	%start_pRepeat -> Repeat .                          (rule 23)

	%eof           accept


State 160

	Repeat -> 'repeat' . Block 'until' RExp             (rule 124)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'until'        reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65

	Block          goto state 242
	ListStm        goto state 208

State 161

	%start_pWhile -> While .                            (rule 22)

	%eof           accept


State 162

	While -> 'while' . RExp EBlk                        (rule 123)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 241
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 163

	%start_pFuncRead -> FuncRead .                      (rule 21)

	%eof           accept


State 164

	%start_pFuncWrite -> FuncWrite .                    (rule 20)

	%eof           accept


State 165

	Func -> LIdent . '(' ListRExp ')'                   (rule 111)

	'('            shift, and enter state 240


State 166

	%start_pFunc -> Func .                              (rule 19)

	%eof           accept


State 167

	%start_pAss -> Ass .                                (rule 18)

	%eof           accept


State 168

	Ass -> LExp . '=' RExp                              (rule 108)

	'='            shift, and enter state 239


State 169

	%start_pLocal -> Local .                            (rule 17)

	%eof           accept


State 170

	Local -> 'local' . Decl                             (rule 107)

	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139

	BasicType      goto state 186
	Decl           goto state 238

State 171

	ListArray -> Array .                                (rule 105)
	ListArray -> Array . ',' ListArray                  (rule 106)

	','            shift, and enter state 237
	'}'            reduce using rule 105
	%eof           reduce using rule 105


State 172

	%start_pListArray -> ListArray .                    (rule 16)

	%eof           accept


State 173

	Array -> '{' . ListArray '}'                        (rule 95)
	Array -> '{' . ListVType '}'                        (rule 96)

	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	'{'            shift, and enter state 173
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94

	Integer        goto state 174
	Double         goto state 175
	String         goto state 176
	Char           goto state 177
	Boolean        goto state 178
	PtrVoid        goto state 179
	Array          goto state 171
	VType          goto state 180
	ListVType      goto state 235
	ListArray      goto state 236

State 174

	VType -> Integer .                                  (rule 100)

	','            reduce using rule 100
	'}'            reduce using rule 100
	%eof           reduce using rule 100


State 175

	VType -> Double .                                   (rule 99)

	','            reduce using rule 99
	'}'            reduce using rule 99
	%eof           reduce using rule 99


State 176

	VType -> String .                                   (rule 101)

	','            reduce using rule 101
	'}'            reduce using rule 101
	%eof           reduce using rule 101


State 177

	VType -> Char .                                     (rule 98)

	','            reduce using rule 98
	'}'            reduce using rule 98
	%eof           reduce using rule 98


State 178

	VType -> Boolean .                                  (rule 97)

	','            reduce using rule 97
	'}'            reduce using rule 97
	%eof           reduce using rule 97


State 179

	VType -> PtrVoid .                                  (rule 102)

	','            reduce using rule 102
	'}'            reduce using rule 102
	%eof           reduce using rule 102


State 180

	ListVType -> VType .                                (rule 103)
	ListVType -> VType . ',' ListVType                  (rule 104)

	','            shift, and enter state 234
	'}'            reduce using rule 103
	%eof           reduce using rule 103


State 181

	%start_pListVType -> ListVType .                    (rule 15)

	%eof           accept


State 182

	%start_pVType -> VType .                            (rule 14)

	%eof           accept


State 183

	%start_pArray -> Array .                            (rule 13)

	%eof           accept


State 184

	%start_pVarInit -> VarInit .                        (rule 12)

	%eof           accept


State 185

	VarInit -> '=' . RExp                               (rule 93)
	VarInit -> '=' . Array                              (rule 94)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	'{'            shift, and enter state 173
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Array          goto state 232
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 233
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 186

	Decl -> BasicType . LExp VarInit                    (rule 91)

	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 221

State 187

	%start_pDecl -> Decl .                              (rule 11)

	%eof           accept


State 188

	%start_pEBlk -> EBlk .                              (rule 10)

	%eof           accept


State 189

	EBlk -> 'do' . Block 'end'                          (rule 90)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'end'          reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65

	Block          goto state 231
	ListStm        goto state 208

State 190

	%start_pStm -> Stm .                                (rule 9)

	%eof           accept


State 191

	Stm -> EBlk .                                       (rule 87)

	'*'            reduce using rule 87
	'Bool'         reduce using rule 87
	'Char'         reduce using rule 87
	'Float'        reduce using rule 87
	'Int'          reduce using rule 87
	'String'       reduce using rule 87
	'Void'         reduce using rule 87
	'break'        reduce using rule 87
	'do'           reduce using rule 87
	'else'         reduce using rule 87
	'elseif'       reduce using rule 87
	'end'          reduce using rule 87
	'for'          reduce using rule 87
	'if'           reduce using rule 87
	'local'        reduce using rule 87
	'readChar'     reduce using rule 87
	'readFloat'    reduce using rule 87
	'readInt'      reduce using rule 87
	'readString'   reduce using rule 87
	'repeat'       reduce using rule 87
	'return'       reduce using rule 87
	'until'        reduce using rule 87
	'while'        reduce using rule 87
	'writeChar'    reduce using rule 87
	'writeFloat'   reduce using rule 87
	'writeInt'     reduce using rule 87
	'writeString'  reduce using rule 87
	L_LIdent       reduce using rule 87
	%eof           reduce using rule 87


State 192

	Stm -> Decl . ';'                                   (rule 79)

	';'            shift, and enter state 230


State 193

	Stm -> Local . ';'                                  (rule 80)

	';'            shift, and enter state 229


State 194

	Stm -> Ass . ';'                                    (rule 81)

	';'            shift, and enter state 228


State 195

	Stm -> Func . ';'                                   (rule 86)

	';'            shift, and enter state 227


State 196

	Stm -> While .                                      (rule 82)

	'*'            reduce using rule 82
	'Bool'         reduce using rule 82
	'Char'         reduce using rule 82
	'Float'        reduce using rule 82
	'Int'          reduce using rule 82
	'String'       reduce using rule 82
	'Void'         reduce using rule 82
	'break'        reduce using rule 82
	'do'           reduce using rule 82
	'else'         reduce using rule 82
	'elseif'       reduce using rule 82
	'end'          reduce using rule 82
	'for'          reduce using rule 82
	'if'           reduce using rule 82
	'local'        reduce using rule 82
	'readChar'     reduce using rule 82
	'readFloat'    reduce using rule 82
	'readInt'      reduce using rule 82
	'readString'   reduce using rule 82
	'repeat'       reduce using rule 82
	'return'       reduce using rule 82
	'until'        reduce using rule 82
	'while'        reduce using rule 82
	'writeChar'    reduce using rule 82
	'writeFloat'   reduce using rule 82
	'writeInt'     reduce using rule 82
	'writeString'  reduce using rule 82
	L_LIdent       reduce using rule 82
	%eof           reduce using rule 82


State 197

	Stm -> Repeat . ';'                                 (rule 83)

	';'            shift, and enter state 226


State 198

	Stm -> For .                                        (rule 84)

	'*'            reduce using rule 84
	'Bool'         reduce using rule 84
	'Char'         reduce using rule 84
	'Float'        reduce using rule 84
	'Int'          reduce using rule 84
	'String'       reduce using rule 84
	'Void'         reduce using rule 84
	'break'        reduce using rule 84
	'do'           reduce using rule 84
	'else'         reduce using rule 84
	'elseif'       reduce using rule 84
	'end'          reduce using rule 84
	'for'          reduce using rule 84
	'if'           reduce using rule 84
	'local'        reduce using rule 84
	'readChar'     reduce using rule 84
	'readFloat'    reduce using rule 84
	'readInt'      reduce using rule 84
	'readString'   reduce using rule 84
	'repeat'       reduce using rule 84
	'return'       reduce using rule 84
	'until'        reduce using rule 84
	'while'        reduce using rule 84
	'writeChar'    reduce using rule 84
	'writeFloat'   reduce using rule 84
	'writeInt'     reduce using rule 84
	'writeString'  reduce using rule 84
	L_LIdent       reduce using rule 84
	%eof           reduce using rule 84


State 199

	Stm -> If .                                         (rule 85)

	'*'            reduce using rule 85
	'Bool'         reduce using rule 85
	'Char'         reduce using rule 85
	'Float'        reduce using rule 85
	'Int'          reduce using rule 85
	'String'       reduce using rule 85
	'Void'         reduce using rule 85
	'break'        reduce using rule 85
	'do'           reduce using rule 85
	'else'         reduce using rule 85
	'elseif'       reduce using rule 85
	'end'          reduce using rule 85
	'for'          reduce using rule 85
	'if'           reduce using rule 85
	'local'        reduce using rule 85
	'readChar'     reduce using rule 85
	'readFloat'    reduce using rule 85
	'readInt'      reduce using rule 85
	'readString'   reduce using rule 85
	'repeat'       reduce using rule 85
	'return'       reduce using rule 85
	'until'        reduce using rule 85
	'while'        reduce using rule 85
	'writeChar'    reduce using rule 85
	'writeFloat'   reduce using rule 85
	'writeInt'     reduce using rule 85
	'writeString'  reduce using rule 85
	L_LIdent       reduce using rule 85
	%eof           reduce using rule 85


State 200

	Stm -> Return . ';'                                 (rule 88)

	';'            shift, and enter state 225


State 201

	Stm -> Break . ';'                                  (rule 89)

	';'            shift, and enter state 224


State 202

	%start_pCompoundType -> CompoundType .              (rule 8)
	CompoundType -> CompoundType . '[' ']'              (rule 77)

	'['            shift, and enter state 223
	%eof           accept


State 203

	%start_pPtrVoid -> PtrVoid .                        (rule 7)

	%eof           accept


State 204

	%start_pBoolean -> Boolean .                        (rule 6)

	%eof           accept


State 205

	%start_pBasicType -> BasicType .                    (rule 5)

	%eof           accept


State 206

	%start_pListStm -> ListStm .                        (rule 4)
	ListStm -> ListStm . Stm                            (rule 66)

	'*'            shift, and enter state 79
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95
	%eof           accept

	LIdent         goto state 62
	BasicType      goto state 186
	Stm            goto state 222
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	LExp           goto state 168

State 207

	%start_pBlock -> Block .                            (rule 3)

	%eof           accept


State 208

	Block -> ListStm .                                  (rule 64)
	ListStm -> ListStm . Stm                            (rule 66)

	'*'            shift, and enter state 79
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'else'         reduce using rule 64
	'elseif'       reduce using rule 64
	'end'          reduce using rule 64
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'until'        reduce using rule 64
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 64

	LIdent         goto state 62
	BasicType      goto state 186
	Stm            goto state 222
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	LExp           goto state 168

State 209

	%start_pPGlobl -> PGlobl .                          (rule 2)

	%eof           accept


State 210

	CompoundType -> BasicType .                         (rule 78)
	Decl -> BasicType . LExp VarInit                    (rule 91)

	'*'            shift, and enter state 79
	'['            reduce using rule 78
	'function'     reduce using rule 78
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 221

State 211

	PGlobl -> Stm .                                     (rule 62)

	'*'            reduce using rule 62
	'Bool'         reduce using rule 62
	'Char'         reduce using rule 62
	'Float'        reduce using rule 62
	'Int'          reduce using rule 62
	'String'       reduce using rule 62
	'Void'         reduce using rule 62
	'break'        reduce using rule 62
	'do'           reduce using rule 62
	'for'          reduce using rule 62
	'if'           reduce using rule 62
	'local'        reduce using rule 62
	'readChar'     reduce using rule 62
	'readFloat'    reduce using rule 62
	'readInt'      reduce using rule 62
	'readString'   reduce using rule 62
	'repeat'       reduce using rule 62
	'return'       reduce using rule 62
	'while'        reduce using rule 62
	'writeChar'    reduce using rule 62
	'writeFloat'   reduce using rule 62
	'writeInt'     reduce using rule 62
	'writeString'  reduce using rule 62
	L_LIdent       reduce using rule 62
	%eof           reduce using rule 62


State 212

	PGlobl -> FuncD .                                   (rule 63)

	'*'            reduce using rule 63
	'Bool'         reduce using rule 63
	'Char'         reduce using rule 63
	'Float'        reduce using rule 63
	'Int'          reduce using rule 63
	'String'       reduce using rule 63
	'Void'         reduce using rule 63
	'break'        reduce using rule 63
	'do'           reduce using rule 63
	'for'          reduce using rule 63
	'if'           reduce using rule 63
	'local'        reduce using rule 63
	'readChar'     reduce using rule 63
	'readFloat'    reduce using rule 63
	'readInt'      reduce using rule 63
	'readString'   reduce using rule 63
	'repeat'       reduce using rule 63
	'return'       reduce using rule 63
	'while'        reduce using rule 63
	'writeChar'    reduce using rule 63
	'writeFloat'   reduce using rule 63
	'writeInt'     reduce using rule 63
	'writeString'  reduce using rule 63
	L_LIdent       reduce using rule 63
	%eof           reduce using rule 63


State 213

	CompoundType -> '*' . CompoundType                  (rule 76)
	LExp -> '*' . LExp                                  (rule 152)

	'*'            shift, and enter state 213
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	BasicType      goto state 130
	CompoundType   goto state 219
	LExp           goto state 220

State 214

	%start_pListPGlobl -> ListPGlobl .                  (rule 1)

	%eof           accept


State 215

	ListPGlobl -> PGlobl .                              (rule 60)
	ListPGlobl -> PGlobl . ListPGlobl                   (rule 61)

	'*'            shift, and enter state 213
	'Bool'         shift, and enter state 134
	'Char'         shift, and enter state 135
	'Float'        shift, and enter state 136
	'Int'          shift, and enter state 137
	'String'       shift, and enter state 138
	'Void'         shift, and enter state 139
	'break'        shift, and enter state 143
	'do'           shift, and enter state 189
	'for'          shift, and enter state 158
	'if'           shift, and enter state 154
	'local'        shift, and enter state 170
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'repeat'       shift, and enter state 160
	'return'       shift, and enter state 147
	'while'        shift, and enter state 162
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 60

	LIdent         goto state 62
	ListPGlobl     goto state 218
	PGlobl         goto state 215
	BasicType      goto state 210
	CompoundType   goto state 131
	Stm            goto state 211
	EBlk           goto state 191
	Decl           goto state 192
	Local          goto state 193
	Ass            goto state 194
	Func           goto state 195
	FuncWrite      goto state 66
	FuncRead       goto state 67
	While          goto state 196
	Repeat         goto state 197
	For            goto state 198
	If             goto state 199
	Return         goto state 200
	Break          goto state 201
	FuncD          goto state 212
	LExp           goto state 168

State 216

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 217

	Program -> ListPGlobl .                             (rule 59)

	%eof           reduce using rule 59


State 218

	ListPGlobl -> PGlobl ListPGlobl .                   (rule 61)

	%eof           reduce using rule 61


State 219

	CompoundType -> '*' CompoundType .                  (rule 76)
	CompoundType -> CompoundType . '[' ']'              (rule 77)

	'['            shift, and enter state 223
			(reduce using rule 76)

	'function'     reduce using rule 76
	%eof           reduce using rule 76


State 220

	LExp -> '*' LExp .                                  (rule 152)

	'%'            reduce using rule 152
	')'            reduce using rule 152
	'*'            reduce using rule 152
	'+'            reduce using rule 152
	','            reduce using rule 152
	'-'            reduce using rule 152
	'..'           reduce using rule 152
	'/'            reduce using rule 152
	';'            reduce using rule 152
	'<'            reduce using rule 152
	'<='           reduce using rule 152
	'='            reduce using rule 152
	'=='           reduce using rule 152
	'>'            reduce using rule 152
	'>='           reduce using rule 152
	'^'            reduce using rule 152
	'and'          reduce using rule 152
	'do'           reduce using rule 152
	'or'           reduce using rule 152
	'then'         reduce using rule 152
	'~='           reduce using rule 152
	%eof           reduce using rule 152


State 221

	Decl -> BasicType LExp . VarInit                    (rule 91)

	';'            reduce using rule 92
	'='            shift, and enter state 185
	%eof           reduce using rule 92

	VarInit        goto state 328

State 222

	ListStm -> ListStm Stm .                            (rule 66)

	'*'            reduce using rule 66
	'Bool'         reduce using rule 66
	'Char'         reduce using rule 66
	'Float'        reduce using rule 66
	'Int'          reduce using rule 66
	'String'       reduce using rule 66
	'Void'         reduce using rule 66
	'break'        reduce using rule 66
	'do'           reduce using rule 66
	'else'         reduce using rule 66
	'elseif'       reduce using rule 66
	'end'          reduce using rule 66
	'for'          reduce using rule 66
	'if'           reduce using rule 66
	'local'        reduce using rule 66
	'readChar'     reduce using rule 66
	'readFloat'    reduce using rule 66
	'readInt'      reduce using rule 66
	'readString'   reduce using rule 66
	'repeat'       reduce using rule 66
	'return'       reduce using rule 66
	'until'        reduce using rule 66
	'while'        reduce using rule 66
	'writeChar'    reduce using rule 66
	'writeFloat'   reduce using rule 66
	'writeInt'     reduce using rule 66
	'writeString'  reduce using rule 66
	L_LIdent       reduce using rule 66
	%eof           reduce using rule 66


State 223

	CompoundType -> CompoundType '[' . ']'              (rule 77)

	']'            shift, and enter state 327


State 224

	Stm -> Break ';' .                                  (rule 89)

	'*'            reduce using rule 89
	'Bool'         reduce using rule 89
	'Char'         reduce using rule 89
	'Float'        reduce using rule 89
	'Int'          reduce using rule 89
	'String'       reduce using rule 89
	'Void'         reduce using rule 89
	'break'        reduce using rule 89
	'do'           reduce using rule 89
	'else'         reduce using rule 89
	'elseif'       reduce using rule 89
	'end'          reduce using rule 89
	'for'          reduce using rule 89
	'if'           reduce using rule 89
	'local'        reduce using rule 89
	'readChar'     reduce using rule 89
	'readFloat'    reduce using rule 89
	'readInt'      reduce using rule 89
	'readString'   reduce using rule 89
	'repeat'       reduce using rule 89
	'return'       reduce using rule 89
	'until'        reduce using rule 89
	'while'        reduce using rule 89
	'writeChar'    reduce using rule 89
	'writeFloat'   reduce using rule 89
	'writeInt'     reduce using rule 89
	'writeString'  reduce using rule 89
	L_LIdent       reduce using rule 89
	%eof           reduce using rule 89


State 225

	Stm -> Return ';' .                                 (rule 88)

	'*'            reduce using rule 88
	'Bool'         reduce using rule 88
	'Char'         reduce using rule 88
	'Float'        reduce using rule 88
	'Int'          reduce using rule 88
	'String'       reduce using rule 88
	'Void'         reduce using rule 88
	'break'        reduce using rule 88
	'do'           reduce using rule 88
	'else'         reduce using rule 88
	'elseif'       reduce using rule 88
	'end'          reduce using rule 88
	'for'          reduce using rule 88
	'if'           reduce using rule 88
	'local'        reduce using rule 88
	'readChar'     reduce using rule 88
	'readFloat'    reduce using rule 88
	'readInt'      reduce using rule 88
	'readString'   reduce using rule 88
	'repeat'       reduce using rule 88
	'return'       reduce using rule 88
	'until'        reduce using rule 88
	'while'        reduce using rule 88
	'writeChar'    reduce using rule 88
	'writeFloat'   reduce using rule 88
	'writeInt'     reduce using rule 88
	'writeString'  reduce using rule 88
	L_LIdent       reduce using rule 88
	%eof           reduce using rule 88


State 226

	Stm -> Repeat ';' .                                 (rule 83)

	'*'            reduce using rule 83
	'Bool'         reduce using rule 83
	'Char'         reduce using rule 83
	'Float'        reduce using rule 83
	'Int'          reduce using rule 83
	'String'       reduce using rule 83
	'Void'         reduce using rule 83
	'break'        reduce using rule 83
	'do'           reduce using rule 83
	'else'         reduce using rule 83
	'elseif'       reduce using rule 83
	'end'          reduce using rule 83
	'for'          reduce using rule 83
	'if'           reduce using rule 83
	'local'        reduce using rule 83
	'readChar'     reduce using rule 83
	'readFloat'    reduce using rule 83
	'readInt'      reduce using rule 83
	'readString'   reduce using rule 83
	'repeat'       reduce using rule 83
	'return'       reduce using rule 83
	'until'        reduce using rule 83
	'while'        reduce using rule 83
	'writeChar'    reduce using rule 83
	'writeFloat'   reduce using rule 83
	'writeInt'     reduce using rule 83
	'writeString'  reduce using rule 83
	L_LIdent       reduce using rule 83
	%eof           reduce using rule 83


State 227

	Stm -> Func ';' .                                   (rule 86)

	'*'            reduce using rule 86
	'Bool'         reduce using rule 86
	'Char'         reduce using rule 86
	'Float'        reduce using rule 86
	'Int'          reduce using rule 86
	'String'       reduce using rule 86
	'Void'         reduce using rule 86
	'break'        reduce using rule 86
	'do'           reduce using rule 86
	'else'         reduce using rule 86
	'elseif'       reduce using rule 86
	'end'          reduce using rule 86
	'for'          reduce using rule 86
	'if'           reduce using rule 86
	'local'        reduce using rule 86
	'readChar'     reduce using rule 86
	'readFloat'    reduce using rule 86
	'readInt'      reduce using rule 86
	'readString'   reduce using rule 86
	'repeat'       reduce using rule 86
	'return'       reduce using rule 86
	'until'        reduce using rule 86
	'while'        reduce using rule 86
	'writeChar'    reduce using rule 86
	'writeFloat'   reduce using rule 86
	'writeInt'     reduce using rule 86
	'writeString'  reduce using rule 86
	L_LIdent       reduce using rule 86
	%eof           reduce using rule 86


State 228

	Stm -> Ass ';' .                                    (rule 81)

	'*'            reduce using rule 81
	'Bool'         reduce using rule 81
	'Char'         reduce using rule 81
	'Float'        reduce using rule 81
	'Int'          reduce using rule 81
	'String'       reduce using rule 81
	'Void'         reduce using rule 81
	'break'        reduce using rule 81
	'do'           reduce using rule 81
	'else'         reduce using rule 81
	'elseif'       reduce using rule 81
	'end'          reduce using rule 81
	'for'          reduce using rule 81
	'if'           reduce using rule 81
	'local'        reduce using rule 81
	'readChar'     reduce using rule 81
	'readFloat'    reduce using rule 81
	'readInt'      reduce using rule 81
	'readString'   reduce using rule 81
	'repeat'       reduce using rule 81
	'return'       reduce using rule 81
	'until'        reduce using rule 81
	'while'        reduce using rule 81
	'writeChar'    reduce using rule 81
	'writeFloat'   reduce using rule 81
	'writeInt'     reduce using rule 81
	'writeString'  reduce using rule 81
	L_LIdent       reduce using rule 81
	%eof           reduce using rule 81


State 229

	Stm -> Local ';' .                                  (rule 80)

	'*'            reduce using rule 80
	'Bool'         reduce using rule 80
	'Char'         reduce using rule 80
	'Float'        reduce using rule 80
	'Int'          reduce using rule 80
	'String'       reduce using rule 80
	'Void'         reduce using rule 80
	'break'        reduce using rule 80
	'do'           reduce using rule 80
	'else'         reduce using rule 80
	'elseif'       reduce using rule 80
	'end'          reduce using rule 80
	'for'          reduce using rule 80
	'if'           reduce using rule 80
	'local'        reduce using rule 80
	'readChar'     reduce using rule 80
	'readFloat'    reduce using rule 80
	'readInt'      reduce using rule 80
	'readString'   reduce using rule 80
	'repeat'       reduce using rule 80
	'return'       reduce using rule 80
	'until'        reduce using rule 80
	'while'        reduce using rule 80
	'writeChar'    reduce using rule 80
	'writeFloat'   reduce using rule 80
	'writeInt'     reduce using rule 80
	'writeString'  reduce using rule 80
	L_LIdent       reduce using rule 80
	%eof           reduce using rule 80


State 230

	Stm -> Decl ';' .                                   (rule 79)

	'*'            reduce using rule 79
	'Bool'         reduce using rule 79
	'Char'         reduce using rule 79
	'Float'        reduce using rule 79
	'Int'          reduce using rule 79
	'String'       reduce using rule 79
	'Void'         reduce using rule 79
	'break'        reduce using rule 79
	'do'           reduce using rule 79
	'else'         reduce using rule 79
	'elseif'       reduce using rule 79
	'end'          reduce using rule 79
	'for'          reduce using rule 79
	'if'           reduce using rule 79
	'local'        reduce using rule 79
	'readChar'     reduce using rule 79
	'readFloat'    reduce using rule 79
	'readInt'      reduce using rule 79
	'readString'   reduce using rule 79
	'repeat'       reduce using rule 79
	'return'       reduce using rule 79
	'until'        reduce using rule 79
	'while'        reduce using rule 79
	'writeChar'    reduce using rule 79
	'writeFloat'   reduce using rule 79
	'writeInt'     reduce using rule 79
	'writeString'  reduce using rule 79
	L_LIdent       reduce using rule 79
	%eof           reduce using rule 79


State 231

	EBlk -> 'do' Block . 'end'                          (rule 90)

	'end'          shift, and enter state 326


State 232

	VarInit -> '=' Array .                              (rule 94)

	';'            reduce using rule 94
	%eof           reduce using rule 94


State 233

	VarInit -> '=' RExp .                               (rule 93)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	';'            reduce using rule 93
	'or'           shift, and enter state 250
	%eof           reduce using rule 93


State 234

	ListVType -> VType ',' . ListVType                  (rule 104)

	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94

	Integer        goto state 174
	Double         goto state 175
	String         goto state 176
	Char           goto state 177
	Boolean        goto state 178
	PtrVoid        goto state 179
	VType          goto state 180
	ListVType      goto state 325

State 235

	Array -> '{' ListVType . '}'                        (rule 96)

	'}'            shift, and enter state 324


State 236

	Array -> '{' ListArray . '}'                        (rule 95)

	'}'            shift, and enter state 323


State 237

	ListArray -> Array ',' . ListArray                  (rule 106)

	'{'            shift, and enter state 173

	Array          goto state 171
	ListArray      goto state 322

State 238

	Local -> 'local' Decl .                             (rule 107)

	';'            reduce using rule 107
	%eof           reduce using rule 107


State 239

	Ass -> LExp '=' . RExp                              (rule 108)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 321
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 240

	Func -> LIdent '(' . ListRExp ')'                   (rule 111)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	')'            reduce using rule 112
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	ListRExp       goto state 320
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 141
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 241

	While -> 'while' RExp . EBlk                        (rule 123)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	'do'           shift, and enter state 189
	'or'           shift, and enter state 250

	EBlk           goto state 319

State 242

	Repeat -> 'repeat' Block . 'until' RExp             (rule 124)

	'until'        shift, and enter state 318


State 243

	For -> 'for' LIdent . '=' RExp ',' RExp Increment EBlk    (rule 125)
	For -> 'for' LIdent . 'in' LIdent EBlk              (rule 126)

	'='            shift, and enter state 316
	'in'           shift, and enter state 317


State 244

	Increment -> ',' RExp .                             (rule 128)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	'do'           reduce using rule 128
	'or'           shift, and enter state 250
	%eof           reduce using rule 128


State 245

	If -> 'if' RExp . 'then' Block ListElseIf Else 'end'    (rule 129)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	'or'           shift, and enter state 250
	'then'         shift, and enter state 315


State 246

	Else -> 'else' Block .                              (rule 130)

	'end'          reduce using rule 130
	%eof           reduce using rule 130


State 247

	ElseIf -> 'elseif' RExp . 'then' Block              (rule 132)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	'or'           shift, and enter state 250
	'then'         shift, and enter state 314


State 248

	ListElseIf -> ListElseIf ElseIf .                   (rule 134)

	'else'         reduce using rule 134
	'elseif'       reduce using rule 134
	'end'          reduce using rule 134
	%eof           reduce using rule 134


State 249

	Return -> 'return' RValue .                         (rule 135)

	';'            reduce using rule 135
	%eof           reduce using rule 135


State 250

	RExp -> RExp 'or' . RExp1                           (rule 157)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 313
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 251

	ListRExp -> RExp ',' . ListRExp                     (rule 114)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	')'            reduce using rule 112
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95
	%eof           reduce using rule 112

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	ListRExp       goto state 312
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 141
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 252

	FuncD -> CompoundType 'function' . LIdent '(' ListParamF ')' Block 'end'    (rule 139)

	L_LIdent       shift, and enter state 95

	LIdent         goto state 311

State 253

	ParamF -> Modality BasicType . LExp                 (rule 140)

	'*'            shift, and enter state 79
	L_LIdent       shift, and enter state 95

	LIdent         goto state 103
	LExp           goto state 310

State 254

	ListParamF -> ParamF ',' . ListParamF               (rule 143)

	')'            reduce using rule 141
	'Bool'         reduce using rule 144
	'Char'         reduce using rule 144
	'Float'        reduce using rule 144
	'Int'          reduce using rule 144
	'String'       reduce using rule 144
	'Void'         reduce using rule 144
	'const'        shift, and enter state 120
	'name'         shift, and enter state 121
	'ref'          shift, and enter state 122
	'res'          shift, and enter state 123
	'val'          shift, and enter state 124
	'valres'       shift, and enter state 125
	%eof           reduce using rule 141

	ParamF         goto state 126
	ListParamF     goto state 309
	Modality       goto state 128

State 255

	ListDim -> Dim ListDim .                            (rule 155)

	'%'            reduce using rule 155
	')'            reduce using rule 155
	'*'            reduce using rule 155
	'+'            reduce using rule 155
	','            reduce using rule 155
	'-'            reduce using rule 155
	'..'           reduce using rule 155
	'/'            reduce using rule 155
	';'            reduce using rule 155
	'<'            reduce using rule 155
	'<='           reduce using rule 155
	'='            reduce using rule 155
	'=='           reduce using rule 155
	'>'            reduce using rule 155
	'>='           reduce using rule 155
	'^'            reduce using rule 155
	'and'          reduce using rule 155
	'do'           reduce using rule 155
	'or'           reduce using rule 155
	'then'         reduce using rule 155
	'~='           reduce using rule 155
	%eof           reduce using rule 155


State 256

	Dim -> '[' Integer . ']'                            (rule 156)

	']'            shift, and enter state 308


State 257

	RExp -> RExp1 'and' . RExp2                         (rule 158)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp2          goto state 307
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 258

	RExp3 -> RExp3 '<' . RExp5                          (rule 164)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 306
	RExp12         goto state 76

State 259

	RExp3 -> RExp3 '<=' . RExp5                         (rule 165)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 305
	RExp12         goto state 76

State 260

	RExp3 -> RExp3 '==' . RExp5                         (rule 162)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 304
	RExp12         goto state 76

State 261

	RExp3 -> RExp3 '>' . RExp5                          (rule 166)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 303
	RExp12         goto state 76

State 262

	RExp3 -> RExp3 '>=' . RExp5                         (rule 167)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 302
	RExp12         goto state 76

State 263

	RExp3 -> RExp3 '~=' . RExp5                         (rule 163)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp5          goto state 301
	RExp12         goto state 76

State 264

	RExp6 -> RExp6 '+' . RExp7                          (rule 169)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp7          goto state 300
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 265

	RExp6 -> RExp6 '-' . RExp7                          (rule 170)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp7          goto state 299
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 266

	RExp7 -> RExp7 '%' . RExp8                          (rule 174)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp8          goto state 298
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 267

	RExp7 -> RExp7 '*' . RExp8                          (rule 172)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp8          goto state 297
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 268

	RExp7 -> RExp7 '/' . RExp8                          (rule 173)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp8          goto state 296
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 269

	RExp10 -> RExp10 '..' . RExp11                      (rule 181)

	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'true'         shift, and enter state 87
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 103
	Boolean        goto state 63
	PtrVoid        goto state 64
	LExp           goto state 68
	RExp11         goto state 295
	RExp12         goto state 76

State 270

	LExp -> LIdent ListDim .                            (rule 153)

	'%'            reduce using rule 153
	')'            reduce using rule 153
	'*'            reduce using rule 153
	'+'            reduce using rule 153
	','            reduce using rule 153
	'-'            reduce using rule 153
	'..'           reduce using rule 153
	'/'            reduce using rule 153
	';'            reduce using rule 153
	'<'            reduce using rule 153
	'<='           reduce using rule 153
	'='            reduce using rule 153
	'=='           reduce using rule 153
	'>'            reduce using rule 153
	'>='           reduce using rule 153
	'^'            reduce using rule 153
	'and'          reduce using rule 153
	'do'           reduce using rule 153
	'or'           reduce using rule 153
	'then'         reduce using rule 153
	'~='           reduce using rule 153
	%eof           reduce using rule 153


State 271

	RExp2 -> 'not' RExp3 .                              (rule 160)
	RExp3 -> RExp3 . '==' RExp5                         (rule 162)
	RExp3 -> RExp3 . '~=' RExp5                         (rule 163)
	RExp3 -> RExp3 . '<' RExp5                          (rule 164)
	RExp3 -> RExp3 . '<=' RExp5                         (rule 165)
	RExp3 -> RExp3 . '>' RExp5                          (rule 166)
	RExp3 -> RExp3 . '>=' RExp5                         (rule 167)

	')'            reduce using rule 160
	','            reduce using rule 160
	';'            reduce using rule 160
	'<'            shift, and enter state 258
	'<='           shift, and enter state 259
	'=='           shift, and enter state 260
	'>'            shift, and enter state 261
	'>='           shift, and enter state 262
	'and'          reduce using rule 160
	'do'           reduce using rule 160
	'or'           reduce using rule 160
	'then'         reduce using rule 160
	'~='           shift, and enter state 263
	%eof           reduce using rule 160


State 272

	FuncWrite -> 'writeString' '(' . RExp ')'           (rule 118)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 294
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 273

	FuncWrite -> 'writeInt' '(' . RExp ')'              (rule 115)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 293
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 274

	FuncWrite -> 'writeFloat' '(' . RExp ')'            (rule 116)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 292
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 275

	FuncWrite -> 'writeChar' '(' . RExp ')'             (rule 117)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 291
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 276

	FuncRead -> 'readString' '(' . ')'                  (rule 122)

	')'            shift, and enter state 290


State 277

	FuncRead -> 'readInt' '(' . ')'                     (rule 119)

	')'            shift, and enter state 289


State 278

	FuncRead -> 'readFloat' '(' . ')'                   (rule 120)

	')'            shift, and enter state 288


State 279

	FuncRead -> 'readChar' '(' . ')'                    (rule 121)

	')'            shift, and enter state 287


State 280

	RExp9 -> '-' RExp10 .                               (rule 178)
	RExp10 -> RExp10 . '..' RExp11                      (rule 181)

	'%'            reduce using rule 178
	')'            reduce using rule 178
	'*'            reduce using rule 178
	'+'            reduce using rule 178
	','            reduce using rule 178
	'-'            reduce using rule 178
	'..'           shift, and enter state 269
	'/'            reduce using rule 178
	';'            reduce using rule 178
	'<'            reduce using rule 178
	'<='           reduce using rule 178
	'=='           reduce using rule 178
	'>'            reduce using rule 178
	'>='           reduce using rule 178
	'^'            reduce using rule 178
	'and'          reduce using rule 178
	'do'           reduce using rule 178
	'or'           reduce using rule 178
	'then'         reduce using rule 178
	'~='           reduce using rule 178
	%eof           reduce using rule 178


State 281

	RExp11 -> '&' LExp .                                (rule 186)

	'%'            reduce using rule 186
	')'            reduce using rule 186
	'*'            reduce using rule 186
	'+'            reduce using rule 186
	','            reduce using rule 186
	'-'            reduce using rule 186
	'..'           reduce using rule 186
	'/'            reduce using rule 186
	';'            reduce using rule 186
	'<'            reduce using rule 186
	'<='           reduce using rule 186
	'=='           reduce using rule 186
	'>'            reduce using rule 186
	'>='           reduce using rule 186
	'^'            reduce using rule 186
	'and'          reduce using rule 186
	'do'           reduce using rule 186
	'or'           reduce using rule 186
	'then'         reduce using rule 186
	'~='           reduce using rule 186
	%eof           reduce using rule 186


State 282

	RExp10 -> '#' RExp11 .                              (rule 182)

	'%'            reduce using rule 182
	')'            reduce using rule 182
	'*'            reduce using rule 182
	'+'            reduce using rule 182
	','            reduce using rule 182
	'-'            reduce using rule 182
	'..'           reduce using rule 182
	'/'            reduce using rule 182
	';'            reduce using rule 182
	'<'            reduce using rule 182
	'<='           reduce using rule 182
	'=='           reduce using rule 182
	'>'            reduce using rule 182
	'>='           reduce using rule 182
	'^'            reduce using rule 182
	'and'          reduce using rule 182
	'do'           reduce using rule 182
	'or'           reduce using rule 182
	'then'         reduce using rule 182
	'~='           reduce using rule 182
	%eof           reduce using rule 182


State 283

	RExp8 -> RExp9 '^' . RExp8                          (rule 176)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp8          goto state 286
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp12         goto state 76

State 284

	RExp -> RExp . 'or' RExp1                           (rule 157)
	RExp12 -> '(' RExp . ')'                            (rule 196)

	')'            shift, and enter state 285
	'or'           shift, and enter state 250


State 285

	RExp12 -> '(' RExp ')' .                            (rule 196)

	'%'            reduce using rule 196
	')'            reduce using rule 196
	'*'            reduce using rule 196
	'+'            reduce using rule 196
	','            reduce using rule 196
	'-'            reduce using rule 196
	'..'           reduce using rule 196
	'/'            reduce using rule 196
	';'            reduce using rule 196
	'<'            reduce using rule 196
	'<='           reduce using rule 196
	'=='           reduce using rule 196
	'>'            reduce using rule 196
	'>='           reduce using rule 196
	'^'            reduce using rule 196
	'and'          reduce using rule 196
	'do'           reduce using rule 196
	'or'           reduce using rule 196
	'then'         reduce using rule 196
	'~='           reduce using rule 196
	%eof           reduce using rule 196


State 286

	RExp8 -> RExp9 '^' RExp8 .                          (rule 176)

	'%'            reduce using rule 176
	')'            reduce using rule 176
	'*'            reduce using rule 176
	'+'            reduce using rule 176
	','            reduce using rule 176
	'-'            reduce using rule 176
	'/'            reduce using rule 176
	';'            reduce using rule 176
	'<'            reduce using rule 176
	'<='           reduce using rule 176
	'=='           reduce using rule 176
	'>'            reduce using rule 176
	'>='           reduce using rule 176
	'and'          reduce using rule 176
	'do'           reduce using rule 176
	'or'           reduce using rule 176
	'then'         reduce using rule 176
	'~='           reduce using rule 176
	%eof           reduce using rule 176


State 287

	FuncRead -> 'readChar' '(' ')' .                    (rule 121)

	'%'            reduce using rule 121
	')'            reduce using rule 121
	'*'            reduce using rule 121
	'+'            reduce using rule 121
	','            reduce using rule 121
	'-'            reduce using rule 121
	'..'           reduce using rule 121
	'/'            reduce using rule 121
	';'            reduce using rule 121
	'<'            reduce using rule 121
	'<='           reduce using rule 121
	'=='           reduce using rule 121
	'>'            reduce using rule 121
	'>='           reduce using rule 121
	'^'            reduce using rule 121
	'and'          reduce using rule 121
	'do'           reduce using rule 121
	'or'           reduce using rule 121
	'then'         reduce using rule 121
	'~='           reduce using rule 121
	%eof           reduce using rule 121


State 288

	FuncRead -> 'readFloat' '(' ')' .                   (rule 120)

	'%'            reduce using rule 120
	')'            reduce using rule 120
	'*'            reduce using rule 120
	'+'            reduce using rule 120
	','            reduce using rule 120
	'-'            reduce using rule 120
	'..'           reduce using rule 120
	'/'            reduce using rule 120
	';'            reduce using rule 120
	'<'            reduce using rule 120
	'<='           reduce using rule 120
	'=='           reduce using rule 120
	'>'            reduce using rule 120
	'>='           reduce using rule 120
	'^'            reduce using rule 120
	'and'          reduce using rule 120
	'do'           reduce using rule 120
	'or'           reduce using rule 120
	'then'         reduce using rule 120
	'~='           reduce using rule 120
	%eof           reduce using rule 120


State 289

	FuncRead -> 'readInt' '(' ')' .                     (rule 119)

	'%'            reduce using rule 119
	')'            reduce using rule 119
	'*'            reduce using rule 119
	'+'            reduce using rule 119
	','            reduce using rule 119
	'-'            reduce using rule 119
	'..'           reduce using rule 119
	'/'            reduce using rule 119
	';'            reduce using rule 119
	'<'            reduce using rule 119
	'<='           reduce using rule 119
	'=='           reduce using rule 119
	'>'            reduce using rule 119
	'>='           reduce using rule 119
	'^'            reduce using rule 119
	'and'          reduce using rule 119
	'do'           reduce using rule 119
	'or'           reduce using rule 119
	'then'         reduce using rule 119
	'~='           reduce using rule 119
	%eof           reduce using rule 119


State 290

	FuncRead -> 'readString' '(' ')' .                  (rule 122)

	'%'            reduce using rule 122
	')'            reduce using rule 122
	'*'            reduce using rule 122
	'+'            reduce using rule 122
	','            reduce using rule 122
	'-'            reduce using rule 122
	'..'           reduce using rule 122
	'/'            reduce using rule 122
	';'            reduce using rule 122
	'<'            reduce using rule 122
	'<='           reduce using rule 122
	'=='           reduce using rule 122
	'>'            reduce using rule 122
	'>='           reduce using rule 122
	'^'            reduce using rule 122
	'and'          reduce using rule 122
	'do'           reduce using rule 122
	'or'           reduce using rule 122
	'then'         reduce using rule 122
	'~='           reduce using rule 122
	%eof           reduce using rule 122


State 291

	FuncWrite -> 'writeChar' '(' RExp . ')'             (rule 117)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	')'            shift, and enter state 339
	'or'           shift, and enter state 250


State 292

	FuncWrite -> 'writeFloat' '(' RExp . ')'            (rule 116)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	')'            shift, and enter state 338
	'or'           shift, and enter state 250


State 293

	FuncWrite -> 'writeInt' '(' RExp . ')'              (rule 115)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	')'            shift, and enter state 337
	'or'           shift, and enter state 250


State 294

	FuncWrite -> 'writeString' '(' RExp . ')'           (rule 118)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	')'            shift, and enter state 336
	'or'           shift, and enter state 250


State 295

	RExp10 -> RExp10 '..' RExp11 .                      (rule 181)

	'%'            reduce using rule 181
	')'            reduce using rule 181
	'*'            reduce using rule 181
	'+'            reduce using rule 181
	','            reduce using rule 181
	'-'            reduce using rule 181
	'..'           reduce using rule 181
	'/'            reduce using rule 181
	';'            reduce using rule 181
	'<'            reduce using rule 181
	'<='           reduce using rule 181
	'=='           reduce using rule 181
	'>'            reduce using rule 181
	'>='           reduce using rule 181
	'^'            reduce using rule 181
	'and'          reduce using rule 181
	'do'           reduce using rule 181
	'or'           reduce using rule 181
	'then'         reduce using rule 181
	'~='           reduce using rule 181
	%eof           reduce using rule 181


State 296

	RExp7 -> RExp7 '/' RExp8 .                          (rule 173)

	'%'            reduce using rule 173
	')'            reduce using rule 173
	'*'            reduce using rule 173
	'+'            reduce using rule 173
	','            reduce using rule 173
	'-'            reduce using rule 173
	'/'            reduce using rule 173
	';'            reduce using rule 173
	'<'            reduce using rule 173
	'<='           reduce using rule 173
	'=='           reduce using rule 173
	'>'            reduce using rule 173
	'>='           reduce using rule 173
	'and'          reduce using rule 173
	'do'           reduce using rule 173
	'or'           reduce using rule 173
	'then'         reduce using rule 173
	'~='           reduce using rule 173
	%eof           reduce using rule 173


State 297

	RExp7 -> RExp7 '*' RExp8 .                          (rule 172)

	'%'            reduce using rule 172
	')'            reduce using rule 172
	'*'            reduce using rule 172
	'+'            reduce using rule 172
	','            reduce using rule 172
	'-'            reduce using rule 172
	'/'            reduce using rule 172
	';'            reduce using rule 172
	'<'            reduce using rule 172
	'<='           reduce using rule 172
	'=='           reduce using rule 172
	'>'            reduce using rule 172
	'>='           reduce using rule 172
	'and'          reduce using rule 172
	'do'           reduce using rule 172
	'or'           reduce using rule 172
	'then'         reduce using rule 172
	'~='           reduce using rule 172
	%eof           reduce using rule 172


State 298

	RExp7 -> RExp7 '%' RExp8 .                          (rule 174)

	'%'            reduce using rule 174
	')'            reduce using rule 174
	'*'            reduce using rule 174
	'+'            reduce using rule 174
	','            reduce using rule 174
	'-'            reduce using rule 174
	'/'            reduce using rule 174
	';'            reduce using rule 174
	'<'            reduce using rule 174
	'<='           reduce using rule 174
	'=='           reduce using rule 174
	'>'            reduce using rule 174
	'>='           reduce using rule 174
	'and'          reduce using rule 174
	'do'           reduce using rule 174
	'or'           reduce using rule 174
	'then'         reduce using rule 174
	'~='           reduce using rule 174
	%eof           reduce using rule 174


State 299

	RExp6 -> RExp6 '-' RExp7 .                          (rule 170)
	RExp7 -> RExp7 . '*' RExp8                          (rule 172)
	RExp7 -> RExp7 . '/' RExp8                          (rule 173)
	RExp7 -> RExp7 . '%' RExp8                          (rule 174)

	'%'            shift, and enter state 266
	')'            reduce using rule 170
	'*'            shift, and enter state 267
	'+'            reduce using rule 170
	','            reduce using rule 170
	'-'            reduce using rule 170
	'/'            shift, and enter state 268
	';'            reduce using rule 170
	'<'            reduce using rule 170
	'<='           reduce using rule 170
	'=='           reduce using rule 170
	'>'            reduce using rule 170
	'>='           reduce using rule 170
	'and'          reduce using rule 170
	'do'           reduce using rule 170
	'or'           reduce using rule 170
	'then'         reduce using rule 170
	'~='           reduce using rule 170
	%eof           reduce using rule 170


State 300

	RExp6 -> RExp6 '+' RExp7 .                          (rule 169)
	RExp7 -> RExp7 . '*' RExp8                          (rule 172)
	RExp7 -> RExp7 . '/' RExp8                          (rule 173)
	RExp7 -> RExp7 . '%' RExp8                          (rule 174)

	'%'            shift, and enter state 266
	')'            reduce using rule 169
	'*'            shift, and enter state 267
	'+'            reduce using rule 169
	','            reduce using rule 169
	'-'            reduce using rule 169
	'/'            shift, and enter state 268
	';'            reduce using rule 169
	'<'            reduce using rule 169
	'<='           reduce using rule 169
	'=='           reduce using rule 169
	'>'            reduce using rule 169
	'>='           reduce using rule 169
	'and'          reduce using rule 169
	'do'           reduce using rule 169
	'or'           reduce using rule 169
	'then'         reduce using rule 169
	'~='           reduce using rule 169
	%eof           reduce using rule 169


State 301

	RExp3 -> RExp3 '~=' RExp5 .                         (rule 163)

	')'            reduce using rule 163
	','            reduce using rule 163
	';'            reduce using rule 163
	'<'            reduce using rule 163
	'<='           reduce using rule 163
	'=='           reduce using rule 163
	'>'            reduce using rule 163
	'>='           reduce using rule 163
	'and'          reduce using rule 163
	'do'           reduce using rule 163
	'or'           reduce using rule 163
	'then'         reduce using rule 163
	'~='           reduce using rule 163
	%eof           reduce using rule 163


State 302

	RExp3 -> RExp3 '>=' RExp5 .                         (rule 167)

	')'            reduce using rule 167
	','            reduce using rule 167
	';'            reduce using rule 167
	'<'            reduce using rule 167
	'<='           reduce using rule 167
	'=='           reduce using rule 167
	'>'            reduce using rule 167
	'>='           reduce using rule 167
	'and'          reduce using rule 167
	'do'           reduce using rule 167
	'or'           reduce using rule 167
	'then'         reduce using rule 167
	'~='           reduce using rule 167
	%eof           reduce using rule 167


State 303

	RExp3 -> RExp3 '>' RExp5 .                          (rule 166)

	')'            reduce using rule 166
	','            reduce using rule 166
	';'            reduce using rule 166
	'<'            reduce using rule 166
	'<='           reduce using rule 166
	'=='           reduce using rule 166
	'>'            reduce using rule 166
	'>='           reduce using rule 166
	'and'          reduce using rule 166
	'do'           reduce using rule 166
	'or'           reduce using rule 166
	'then'         reduce using rule 166
	'~='           reduce using rule 166
	%eof           reduce using rule 166


State 304

	RExp3 -> RExp3 '==' RExp5 .                         (rule 162)

	')'            reduce using rule 162
	','            reduce using rule 162
	';'            reduce using rule 162
	'<'            reduce using rule 162
	'<='           reduce using rule 162
	'=='           reduce using rule 162
	'>'            reduce using rule 162
	'>='           reduce using rule 162
	'and'          reduce using rule 162
	'do'           reduce using rule 162
	'or'           reduce using rule 162
	'then'         reduce using rule 162
	'~='           reduce using rule 162
	%eof           reduce using rule 162


State 305

	RExp3 -> RExp3 '<=' RExp5 .                         (rule 165)

	')'            reduce using rule 165
	','            reduce using rule 165
	';'            reduce using rule 165
	'<'            reduce using rule 165
	'<='           reduce using rule 165
	'=='           reduce using rule 165
	'>'            reduce using rule 165
	'>='           reduce using rule 165
	'and'          reduce using rule 165
	'do'           reduce using rule 165
	'or'           reduce using rule 165
	'then'         reduce using rule 165
	'~='           reduce using rule 165
	%eof           reduce using rule 165


State 306

	RExp3 -> RExp3 '<' RExp5 .                          (rule 164)

	')'            reduce using rule 164
	','            reduce using rule 164
	';'            reduce using rule 164
	'<'            reduce using rule 164
	'<='           reduce using rule 164
	'=='           reduce using rule 164
	'>'            reduce using rule 164
	'>='           reduce using rule 164
	'and'          reduce using rule 164
	'do'           reduce using rule 164
	'or'           reduce using rule 164
	'then'         reduce using rule 164
	'~='           reduce using rule 164
	%eof           reduce using rule 164


State 307

	RExp -> RExp1 'and' RExp2 .                         (rule 158)

	')'            reduce using rule 158
	','            reduce using rule 158
	';'            reduce using rule 158
	'do'           reduce using rule 158
	'or'           reduce using rule 158
	'then'         reduce using rule 158
	%eof           reduce using rule 158


State 308

	Dim -> '[' Integer ']' .                            (rule 156)

	'%'            reduce using rule 156
	')'            reduce using rule 156
	'*'            reduce using rule 156
	'+'            reduce using rule 156
	','            reduce using rule 156
	'-'            reduce using rule 156
	'..'           reduce using rule 156
	'/'            reduce using rule 156
	';'            reduce using rule 156
	'<'            reduce using rule 156
	'<='           reduce using rule 156
	'='            reduce using rule 156
	'=='           reduce using rule 156
	'>'            reduce using rule 156
	'>='           reduce using rule 156
	'['            reduce using rule 156
	'^'            reduce using rule 156
	'and'          reduce using rule 156
	'do'           reduce using rule 156
	'or'           reduce using rule 156
	'then'         reduce using rule 156
	'~='           reduce using rule 156
	%eof           reduce using rule 156


State 309

	ListParamF -> ParamF ',' ListParamF .               (rule 143)

	')'            reduce using rule 143
	%eof           reduce using rule 143


State 310

	ParamF -> Modality BasicType LExp .                 (rule 140)

	')'            reduce using rule 140
	','            reduce using rule 140
	%eof           reduce using rule 140


State 311

	FuncD -> CompoundType 'function' LIdent . '(' ListParamF ')' Block 'end'    (rule 139)

	'('            shift, and enter state 335


State 312

	ListRExp -> RExp ',' ListRExp .                     (rule 114)

	')'            reduce using rule 114
	%eof           reduce using rule 114


State 313

	RExp -> RExp 'or' RExp1 .                           (rule 157)

	')'            reduce using rule 157
	','            reduce using rule 157
	';'            reduce using rule 157
	'do'           reduce using rule 157
	'or'           reduce using rule 157
	'then'         reduce using rule 157
	%eof           reduce using rule 157


State 314

	ElseIf -> 'elseif' RExp 'then' . Block              (rule 132)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'else'         reduce using rule 65
	'elseif'       reduce using rule 65
	'end'          reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65
	%eof           reduce using rule 65

	Block          goto state 334
	ListStm        goto state 208

State 315

	If -> 'if' RExp 'then' . Block ListElseIf Else 'end'    (rule 129)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'else'         reduce using rule 65
	'elseif'       reduce using rule 65
	'end'          reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65

	Block          goto state 333
	ListStm        goto state 208

State 316

	For -> 'for' LIdent '=' . RExp ',' RExp Increment EBlk    (rule 125)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 332
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 317

	For -> 'for' LIdent 'in' . LIdent EBlk              (rule 126)

	L_LIdent       shift, and enter state 95

	LIdent         goto state 331

State 318

	Repeat -> 'repeat' Block 'until' . RExp             (rule 124)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 330
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 319

	While -> 'while' RExp EBlk .                        (rule 123)

	'*'            reduce using rule 123
	'Bool'         reduce using rule 123
	'Char'         reduce using rule 123
	'Float'        reduce using rule 123
	'Int'          reduce using rule 123
	'String'       reduce using rule 123
	'Void'         reduce using rule 123
	'break'        reduce using rule 123
	'do'           reduce using rule 123
	'else'         reduce using rule 123
	'elseif'       reduce using rule 123
	'end'          reduce using rule 123
	'for'          reduce using rule 123
	'if'           reduce using rule 123
	'local'        reduce using rule 123
	'readChar'     reduce using rule 123
	'readFloat'    reduce using rule 123
	'readInt'      reduce using rule 123
	'readString'   reduce using rule 123
	'repeat'       reduce using rule 123
	'return'       reduce using rule 123
	'until'        reduce using rule 123
	'while'        reduce using rule 123
	'writeChar'    reduce using rule 123
	'writeFloat'   reduce using rule 123
	'writeInt'     reduce using rule 123
	'writeString'  reduce using rule 123
	L_LIdent       reduce using rule 123
	%eof           reduce using rule 123


State 320

	Func -> LIdent '(' ListRExp . ')'                   (rule 111)

	')'            shift, and enter state 329


State 321

	Ass -> LExp '=' RExp .                              (rule 108)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	';'            reduce using rule 108
	'or'           shift, and enter state 250
	%eof           reduce using rule 108


State 322

	ListArray -> Array ',' ListArray .                  (rule 106)

	'}'            reduce using rule 106
	%eof           reduce using rule 106


State 323

	Array -> '{' ListArray '}' .                        (rule 95)

	','            reduce using rule 95
	';'            reduce using rule 95
	'}'            reduce using rule 95
	%eof           reduce using rule 95


State 324

	Array -> '{' ListVType '}' .                        (rule 96)

	','            reduce using rule 96
	';'            reduce using rule 96
	'}'            reduce using rule 96
	%eof           reduce using rule 96


State 325

	ListVType -> VType ',' ListVType .                  (rule 104)

	'}'            reduce using rule 104
	%eof           reduce using rule 104


State 326

	EBlk -> 'do' Block 'end' .                          (rule 90)

	'*'            reduce using rule 90
	'Bool'         reduce using rule 90
	'Char'         reduce using rule 90
	'Float'        reduce using rule 90
	'Int'          reduce using rule 90
	'String'       reduce using rule 90
	'Void'         reduce using rule 90
	'break'        reduce using rule 90
	'do'           reduce using rule 90
	'else'         reduce using rule 90
	'elseif'       reduce using rule 90
	'end'          reduce using rule 90
	'for'          reduce using rule 90
	'if'           reduce using rule 90
	'local'        reduce using rule 90
	'readChar'     reduce using rule 90
	'readFloat'    reduce using rule 90
	'readInt'      reduce using rule 90
	'readString'   reduce using rule 90
	'repeat'       reduce using rule 90
	'return'       reduce using rule 90
	'until'        reduce using rule 90
	'while'        reduce using rule 90
	'writeChar'    reduce using rule 90
	'writeFloat'   reduce using rule 90
	'writeInt'     reduce using rule 90
	'writeString'  reduce using rule 90
	L_LIdent       reduce using rule 90
	%eof           reduce using rule 90


State 327

	CompoundType -> CompoundType '[' ']' .              (rule 77)

	'['            reduce using rule 77
	'function'     reduce using rule 77
	%eof           reduce using rule 77


State 328

	Decl -> BasicType LExp VarInit .                    (rule 91)

	';'            reduce using rule 91
	%eof           reduce using rule 91


State 329

	Func -> LIdent '(' ListRExp ')' .                   (rule 111)

	'%'            reduce using rule 111
	')'            reduce using rule 111
	'*'            reduce using rule 111
	'+'            reduce using rule 111
	','            reduce using rule 111
	'-'            reduce using rule 111
	'..'           reduce using rule 111
	'/'            reduce using rule 111
	';'            reduce using rule 111
	'<'            reduce using rule 111
	'<='           reduce using rule 111
	'=='           reduce using rule 111
	'>'            reduce using rule 111
	'>='           reduce using rule 111
	'^'            reduce using rule 111
	'and'          reduce using rule 111
	'do'           reduce using rule 111
	'or'           reduce using rule 111
	'then'         reduce using rule 111
	'~='           reduce using rule 111
	%eof           reduce using rule 111


State 330

	Repeat -> 'repeat' Block 'until' RExp .             (rule 124)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	';'            reduce using rule 124
	'or'           shift, and enter state 250
	%eof           reduce using rule 124


State 331

	For -> 'for' LIdent 'in' LIdent . EBlk              (rule 126)

	'do'           shift, and enter state 189

	EBlk           goto state 343

State 332

	For -> 'for' LIdent '=' RExp . ',' RExp Increment EBlk    (rule 125)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	','            shift, and enter state 342
	'or'           shift, and enter state 250


State 333

	If -> 'if' RExp 'then' Block . ListElseIf Else 'end'    (rule 129)

	'else'         reduce using rule 133
	'elseif'       reduce using rule 133
	'end'          reduce using rule 133

	ListElseIf     goto state 341

State 334

	ElseIf -> 'elseif' RExp 'then' Block .              (rule 132)

	'else'         reduce using rule 132
	'elseif'       reduce using rule 132
	'end'          reduce using rule 132
	%eof           reduce using rule 132


State 335

	FuncD -> CompoundType 'function' LIdent '(' . ListParamF ')' Block 'end'    (rule 139)

	')'            reduce using rule 141
	'Bool'         reduce using rule 144
	'Char'         reduce using rule 144
	'Float'        reduce using rule 144
	'Int'          reduce using rule 144
	'String'       reduce using rule 144
	'Void'         reduce using rule 144
	'const'        shift, and enter state 120
	'name'         shift, and enter state 121
	'ref'          shift, and enter state 122
	'res'          shift, and enter state 123
	'val'          shift, and enter state 124
	'valres'       shift, and enter state 125

	ParamF         goto state 126
	ListParamF     goto state 340
	Modality       goto state 128

State 336

	FuncWrite -> 'writeString' '(' RExp ')' .           (rule 118)

	'%'            reduce using rule 118
	')'            reduce using rule 118
	'*'            reduce using rule 118
	'+'            reduce using rule 118
	','            reduce using rule 118
	'-'            reduce using rule 118
	'..'           reduce using rule 118
	'/'            reduce using rule 118
	';'            reduce using rule 118
	'<'            reduce using rule 118
	'<='           reduce using rule 118
	'=='           reduce using rule 118
	'>'            reduce using rule 118
	'>='           reduce using rule 118
	'^'            reduce using rule 118
	'and'          reduce using rule 118
	'do'           reduce using rule 118
	'or'           reduce using rule 118
	'then'         reduce using rule 118
	'~='           reduce using rule 118
	%eof           reduce using rule 118


State 337

	FuncWrite -> 'writeInt' '(' RExp ')' .              (rule 115)

	'%'            reduce using rule 115
	')'            reduce using rule 115
	'*'            reduce using rule 115
	'+'            reduce using rule 115
	','            reduce using rule 115
	'-'            reduce using rule 115
	'..'           reduce using rule 115
	'/'            reduce using rule 115
	';'            reduce using rule 115
	'<'            reduce using rule 115
	'<='           reduce using rule 115
	'=='           reduce using rule 115
	'>'            reduce using rule 115
	'>='           reduce using rule 115
	'^'            reduce using rule 115
	'and'          reduce using rule 115
	'do'           reduce using rule 115
	'or'           reduce using rule 115
	'then'         reduce using rule 115
	'~='           reduce using rule 115
	%eof           reduce using rule 115


State 338

	FuncWrite -> 'writeFloat' '(' RExp ')' .            (rule 116)

	'%'            reduce using rule 116
	')'            reduce using rule 116
	'*'            reduce using rule 116
	'+'            reduce using rule 116
	','            reduce using rule 116
	'-'            reduce using rule 116
	'..'           reduce using rule 116
	'/'            reduce using rule 116
	';'            reduce using rule 116
	'<'            reduce using rule 116
	'<='           reduce using rule 116
	'=='           reduce using rule 116
	'>'            reduce using rule 116
	'>='           reduce using rule 116
	'^'            reduce using rule 116
	'and'          reduce using rule 116
	'do'           reduce using rule 116
	'or'           reduce using rule 116
	'then'         reduce using rule 116
	'~='           reduce using rule 116
	%eof           reduce using rule 116


State 339

	FuncWrite -> 'writeChar' '(' RExp ')' .             (rule 117)

	'%'            reduce using rule 117
	')'            reduce using rule 117
	'*'            reduce using rule 117
	'+'            reduce using rule 117
	','            reduce using rule 117
	'-'            reduce using rule 117
	'..'           reduce using rule 117
	'/'            reduce using rule 117
	';'            reduce using rule 117
	'<'            reduce using rule 117
	'<='           reduce using rule 117
	'=='           reduce using rule 117
	'>'            reduce using rule 117
	'>='           reduce using rule 117
	'^'            reduce using rule 117
	'and'          reduce using rule 117
	'do'           reduce using rule 117
	'or'           reduce using rule 117
	'then'         reduce using rule 117
	'~='           reduce using rule 117
	%eof           reduce using rule 117


State 340

	FuncD -> CompoundType 'function' LIdent '(' ListParamF . ')' Block 'end'    (rule 139)

	')'            shift, and enter state 346


State 341

	If -> 'if' RExp 'then' Block ListElseIf . Else 'end'    (rule 129)
	ListElseIf -> ListElseIf . ElseIf                   (rule 134)

	'else'         shift, and enter state 152
	'elseif'       shift, and enter state 150
	'end'          reduce using rule 131

	Else           goto state 345
	ElseIf         goto state 248

State 342

	For -> 'for' LIdent '=' RExp ',' . RExp Increment EBlk    (rule 125)

	'#'            shift, and enter state 77
	'&'            shift, and enter state 78
	'('            shift, and enter state 57
	'*'            shift, and enter state 79
	'-'            shift, and enter state 80
	'false'        shift, and enter state 81
	'nil'          shift, and enter state 82
	'not'          shift, and enter state 102
	'readChar'     shift, and enter state 83
	'readFloat'    shift, and enter state 84
	'readInt'      shift, and enter state 85
	'readString'   shift, and enter state 86
	'true'         shift, and enter state 87
	'writeChar'    shift, and enter state 88
	'writeFloat'   shift, and enter state 89
	'writeInt'     shift, and enter state 90
	'writeString'  shift, and enter state 91
	L_integ        shift, and enter state 55
	L_doubl        shift, and enter state 92
	L_quoted       shift, and enter state 93
	L_charac       shift, and enter state 94
	L_LIdent       shift, and enter state 95

	Integer        goto state 58
	Double         goto state 59
	String         goto state 60
	Char           goto state 61
	LIdent         goto state 62
	Boolean        goto state 63
	PtrVoid        goto state 64
	Func           goto state 65
	FuncWrite      goto state 66
	FuncRead       goto state 67
	LExp           goto state 68
	RExp           goto state 344
	RExp2          goto state 98
	RExp3          goto state 99
	RExp6          goto state 69
	RExp7          goto state 70
	RExp8          goto state 71
	RExp9          goto state 72
	RExp10         goto state 73
	RExp11         goto state 74
	RExp1          goto state 113
	RExp4          goto state 101
	RExp5          goto state 97
	RExp12         goto state 76

State 343

	For -> 'for' LIdent 'in' LIdent EBlk .              (rule 126)

	'*'            reduce using rule 126
	'Bool'         reduce using rule 126
	'Char'         reduce using rule 126
	'Float'        reduce using rule 126
	'Int'          reduce using rule 126
	'String'       reduce using rule 126
	'Void'         reduce using rule 126
	'break'        reduce using rule 126
	'do'           reduce using rule 126
	'else'         reduce using rule 126
	'elseif'       reduce using rule 126
	'end'          reduce using rule 126
	'for'          reduce using rule 126
	'if'           reduce using rule 126
	'local'        reduce using rule 126
	'readChar'     reduce using rule 126
	'readFloat'    reduce using rule 126
	'readInt'      reduce using rule 126
	'readString'   reduce using rule 126
	'repeat'       reduce using rule 126
	'return'       reduce using rule 126
	'until'        reduce using rule 126
	'while'        reduce using rule 126
	'writeChar'    reduce using rule 126
	'writeFloat'   reduce using rule 126
	'writeInt'     reduce using rule 126
	'writeString'  reduce using rule 126
	L_LIdent       reduce using rule 126
	%eof           reduce using rule 126


State 344

	For -> 'for' LIdent '=' RExp ',' RExp . Increment EBlk    (rule 125)
	RExp -> RExp . 'or' RExp1                           (rule 157)

	','            shift, and enter state 156
	'do'           reduce using rule 127
	'or'           shift, and enter state 250

	Increment      goto state 349

State 345

	If -> 'if' RExp 'then' Block ListElseIf Else . 'end'    (rule 129)

	'end'          shift, and enter state 348


State 346

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' . Block 'end'    (rule 139)

	'*'            reduce using rule 65
	'Bool'         reduce using rule 65
	'Char'         reduce using rule 65
	'Float'        reduce using rule 65
	'Int'          reduce using rule 65
	'String'       reduce using rule 65
	'Void'         reduce using rule 65
	'break'        reduce using rule 65
	'do'           reduce using rule 65
	'end'          reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'local'        reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'repeat'       reduce using rule 65
	'return'       reduce using rule 65
	'while'        reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	L_LIdent       reduce using rule 65

	Block          goto state 347
	ListStm        goto state 208

State 347

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block . 'end'    (rule 139)

	'end'          shift, and enter state 351


State 348

	If -> 'if' RExp 'then' Block ListElseIf Else 'end' .    (rule 129)

	'*'            reduce using rule 129
	'Bool'         reduce using rule 129
	'Char'         reduce using rule 129
	'Float'        reduce using rule 129
	'Int'          reduce using rule 129
	'String'       reduce using rule 129
	'Void'         reduce using rule 129
	'break'        reduce using rule 129
	'do'           reduce using rule 129
	'else'         reduce using rule 129
	'elseif'       reduce using rule 129
	'end'          reduce using rule 129
	'for'          reduce using rule 129
	'if'           reduce using rule 129
	'local'        reduce using rule 129
	'readChar'     reduce using rule 129
	'readFloat'    reduce using rule 129
	'readInt'      reduce using rule 129
	'readString'   reduce using rule 129
	'repeat'       reduce using rule 129
	'return'       reduce using rule 129
	'until'        reduce using rule 129
	'while'        reduce using rule 129
	'writeChar'    reduce using rule 129
	'writeFloat'   reduce using rule 129
	'writeInt'     reduce using rule 129
	'writeString'  reduce using rule 129
	L_LIdent       reduce using rule 129
	%eof           reduce using rule 129


State 349

	For -> 'for' LIdent '=' RExp ',' RExp Increment . EBlk    (rule 125)

	'do'           shift, and enter state 189

	EBlk           goto state 350

State 350

	For -> 'for' LIdent '=' RExp ',' RExp Increment EBlk .    (rule 125)

	'*'            reduce using rule 125
	'Bool'         reduce using rule 125
	'Char'         reduce using rule 125
	'Float'        reduce using rule 125
	'Int'          reduce using rule 125
	'String'       reduce using rule 125
	'Void'         reduce using rule 125
	'break'        reduce using rule 125
	'do'           reduce using rule 125
	'else'         reduce using rule 125
	'elseif'       reduce using rule 125
	'end'          reduce using rule 125
	'for'          reduce using rule 125
	'if'           reduce using rule 125
	'local'        reduce using rule 125
	'readChar'     reduce using rule 125
	'readFloat'    reduce using rule 125
	'readInt'      reduce using rule 125
	'readString'   reduce using rule 125
	'repeat'       reduce using rule 125
	'return'       reduce using rule 125
	'until'        reduce using rule 125
	'while'        reduce using rule 125
	'writeChar'    reduce using rule 125
	'writeFloat'   reduce using rule 125
	'writeInt'     reduce using rule 125
	'writeString'  reduce using rule 125
	L_LIdent       reduce using rule 125
	%eof           reduce using rule 125


State 351

	FuncD -> CompoundType 'function' LIdent '(' ListParamF ')' Block 'end' .    (rule 139)

	'*'            reduce using rule 139
	'Bool'         reduce using rule 139
	'Char'         reduce using rule 139
	'Float'        reduce using rule 139
	'Int'          reduce using rule 139
	'String'       reduce using rule 139
	'Void'         reduce using rule 139
	'break'        reduce using rule 139
	'do'           reduce using rule 139
	'for'          reduce using rule 139
	'if'           reduce using rule 139
	'local'        reduce using rule 139
	'readChar'     reduce using rule 139
	'readFloat'    reduce using rule 139
	'readInt'      reduce using rule 139
	'readString'   reduce using rule 139
	'repeat'       reduce using rule 139
	'return'       reduce using rule 139
	'while'        reduce using rule 139
	'writeChar'    reduce using rule 139
	'writeFloat'   reduce using rule 139
	'writeInt'     reduce using rule 139
	'writeString'  reduce using rule 139
	L_LIdent       reduce using rule 139
	%eof           reduce using rule 139


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 197
Number of terminals: 70
Number of non-terminals: 113
Number of states: 352
