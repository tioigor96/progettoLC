Init.       S ::= [Import] [Section] [C] ;

Imp.        Import ::= "<" [C] "import" [C] ">" [C] NameFile [C] "</" [C] "import" [C] ">" ;

Sect.       Section ::= "<" [C] "section" [C] "name" [C] "=" [C] NameSection [C] ">" [Field] "</" [C] "section" [C] ">" ;


Fld.        Field ::= "<" [C] "field" [C] "name" [C] "=" [C] NameField [C] ">" [C] Value [C] "</" [C] "field" [C] ">";

-- (:[]).      [Section] ::= Section ;
-- (:).        [Section] ::= Section [Section] ;

-- (:[]).      [Field] ::= Field ;
-- (:).        [Field] ::= Field [Field] ;


separator Import "" ;
separator nonempty Section "" ;
separator nonempty Field "";
separator C "" ;

Val.        Value ::= String;
ValI.       Value ::= Integer;
ValD.       Value ::= Double;
ValB.       Value ::= TBool;
ValV.       Value ::= VariableLocal;
ValG.       Value ::= VariableGlobal;

VTrue.      TBool ::= "true"; 
VFalse.     TBool ::= "false";

NFile.      NameFile ::= Ident;
NField.     NameField ::= Ident;
NSection.   NameSection ::= Ident;

token VariableLocal ('$'letter(letter|digit|'_')*) ;
token VariableGlobal ('$'letter(letter|digit|'_')*'.'letter(letter|digit|'_')*) ;
token C '#'(char - ('\n'))*'\n' ;
-- token VFName ('/')?((letter|digit|'-'|'_'|'.')+('.''.''/'|'/')*)+ ;

